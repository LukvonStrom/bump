[INFO] Scanning for projects...
[INFO] 
[INFO] ------------------------< org.mybatis:mybatis2 >------------------------
[INFO] Building mybatis2 2.4.5-SNAPSHOT
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.2.0:clean (default-clean) @ mybatis2 ---
[INFO] Deleting /home/gabsko/breaking-updates/target
[INFO] 
[INFO] --- maven-enforcer-plugin:3.1.0:enforce (enforce-java) @ mybatis2 ---
[INFO] Adding ignore: module-info
[INFO] 
[INFO] --- git-commit-id-maven-plugin:5.0.0:revision (git-commit-id) @ mybatis2 ---
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.8:prepare-agent (prepare-agent) @ mybatis2 ---
[INFO] argLine set to -javaagent:/home/gabsko/.m2/repository/org/jacoco/org.jacoco.agent/0.8.8/org.jacoco.agent-0.8.8-runtime.jar=destfile=/home/gabsko/breaking-updates/target/jacoco.exec -Djdk.attach.allowAttachSelf
[INFO] 
[INFO] --- whitespace-maven-plugin:1.0.4:trim (default) @ mybatis2 ---
[INFO] 
[INFO] --- formatter-maven-plugin:2.20.0:format (default) @ mybatis2 ---
[INFO] Processed 291 files in 2s54ms (Formatted: 76, Unchanged: 215, Failed: 0, Readonly: 0)
[INFO] 
[INFO] --- impsort-maven-plugin:1.7.0:sort (default) @ mybatis2 ---
[INFO] Processed 291 files in 00:01.120 (Already Sorted: 291, Needed Sorting: 0)
[INFO] 
[INFO] --- license-maven-plugin:4.2.rc3:format (default) @ mybatis2 ---
[INFO] Updating license headers...
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/config/MappedStatementConfig.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/config/ResultMapConfig.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/config/CacheModelConfig.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/execution/BatchResult.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/config/SqlSource.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/execution/BatchException.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/config/ParameterMapConfig.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/parameter/ParameterMapping.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/result/Discriminator.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/sql/dynamic/elements/IterateContext.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/sql/raw/RawSql.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/result/ResultObjectFactory.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/result/ResultMap.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/result/ResultObjectFactoryUtil.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/statement/MappedStatement.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/parameter/ParameterMap.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/type/SimpleDateFormatter.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/builder/xml/XMLSqlSource.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/mapping/statement/StatementType.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/builder/xml/XmlParserState.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/log4j/Log4jImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/jakarta/JakartaCommonsLoggingImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/Log.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/LogFactory.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/jdk14/Jdk14LoggingImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/logging/nologging/NoLoggingImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/beans/MethodInvoker.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/engine/mapping/result/loader/test/Bean1.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/DerbyParameterMapTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/beans/SetFieldInvoker.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/beans/Invoker.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/main/java/com/ibatis/common/beans/GetFieldInvoker.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/PrivateMethodAccessTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/DiscriminatorTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/engine/mapping/result/loader/test/Bean2.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/BatchTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/engine/mapping/parameter/InlineParameterMapParserTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/ResultObjectFactoryTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/engine/mapping/result/loader/EnhancedLazyResultLoaderTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/badbeans/BeanWithDifferentTypeOverloadedSetter.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/badbeans/BeanWithDifferentTypeGetterSetter.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/badbeans/GoodBean.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/MultiResultSetTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/DocType.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/IItemImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/common/beans/BadBeanTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/Topic.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/ResultObjectFactoryImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/DirectFieldMappingTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/Magazine.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/NestedIterateTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/PrivateAccount.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/common/beans/ComplexBeanProbeTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/builder/xml/SqlMapClasspathEntityResolverTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/PrivateBook.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/Document.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ISupplier.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/com/ibatis/common/xml/NodeletUtilsTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/threads/Foo.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ISupplierKey.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/badbeans/BeanWithOverloadedSetter.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/Book.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ISupplierImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/FieldAccount.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ArticleIndex.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/TopicDescription.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/IItem.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ISupplierKeyImpl.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/Person.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/PersonDocument.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/badbeans/BeanWithNoGetterOverloadedSetters.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/threads/MyThread.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/ArticleIndexDenorm.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/threads/RemapResultsThreadTest.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/NestedIterateParameterObject.java
[INFO] Updating license header in: /home/gabsko/breaking-updates/src/test/java/testdomain/MyBean.java
[INFO] 
[INFO] --- maven-resources-plugin:3.3.0:resources (default-resources) @ mybatis2 ---
[INFO] Copying 2 resources
[INFO] Copying 2 resources to META-INF
[INFO] 
[INFO] --- maven-compiler-plugin:3.10.1:compile (default-compile) @ mybatis2 ---
[INFO] Compiling 205 source files to /home/gabsko/breaking-updates/target/classes
[INFO] /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/client/SqlMapExecutor.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/client/SqlMapExecutor.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/builder/xml/SqlMapClasspathEntityResolver.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/src/main/java/com/ibatis/sqlmap/engine/builder/xml/SqlMapClasspathEntityResolver.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-bundle-plugin:5.1.8:manifest (bundle-manifest) @ mybatis2 ---
[INFO] No MANIFEST.MF file found, generating manifest.
[WARNING] Manifest org.mybatis:mybatis2:jar:2.4.5-SNAPSHOT : Unused Export-Package instructions: [org.ibatis.*] 
[INFO] Writing manifest: /home/gabsko/breaking-updates/target/osgi/MANIFEST.MF
[INFO] 
[INFO] --- maven-resources-plugin:3.3.0:testResources (default-testResources) @ mybatis2 ---
[INFO] Copying 35 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.10.1:testCompile (default-testCompile) @ mybatis2 ---
[INFO] Compiling 86 source files to /home/gabsko/breaking-updates/target/test-classes
[INFO] /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/StatementTest.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/src/test/java/com/ibatis/sqlmap/StatementTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/src/test/java/com/ibatis/common/resources/ResourcesTest.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/src/test/java/com/ibatis/common/resources/ResourcesTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M7:test (default-test) @ mybatis2 ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.ibatis.sqlmap.DynamicTest
WARNING: An illegal reflective access operation has occurred
WARNING: Illegal reflective access by com.ibatis.common.beans.ClassInfo (file:/home/gabsko/breaking-updates/target/classes/) to method java.util.HashMap.hash(java.lang.Object)
WARNING: Please consider reporting this to the maintainers of com.ibatis.common.beans.ClassInfo
WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
WARNING: All illegal access operations will be denied in a future release
[INFO] Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.528 s - in com.ibatis.sqlmap.DynamicTest
[INFO] Running com.ibatis.sqlmap.TransactionTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.194 s - in com.ibatis.sqlmap.TransactionTest
[INFO] Running com.ibatis.sqlmap.DynamicPrependTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.358 s - in com.ibatis.sqlmap.DynamicPrependTest
[INFO] Running com.ibatis.sqlmap.NestedIterateTest
[INFO] Tests run: 31, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.82 s - in com.ibatis.sqlmap.NestedIterateTest
[INFO] Running com.ibatis.sqlmap.engine.cache.CacheKeyTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.sqlmap.engine.cache.CacheKeyTest
[INFO] Running com.ibatis.sqlmap.engine.cache.lru.LruCacheControllerTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.sqlmap.engine.cache.lru.LruCacheControllerTest
[INFO] Running com.ibatis.sqlmap.engine.cache.memory.MemoryCacheControllerTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.ibatis.sqlmap.engine.cache.memory.MemoryCacheControllerTest
[INFO] Running com.ibatis.sqlmap.engine.cache.fifo.FifoCacheControllerTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.sqlmap.engine.cache.fifo.FifoCacheControllerTest
[INFO] Running com.ibatis.sqlmap.engine.mapping.parameter.InlineParameterMapParserTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.sqlmap.engine.mapping.parameter.InlineParameterMapParserTest
[INFO] Running com.ibatis.sqlmap.engine.mapping.result.loader.EnhancedLazyResultLoaderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.09 s - in com.ibatis.sqlmap.engine.mapping.result.loader.EnhancedLazyResultLoaderTest
[INFO] Running com.ibatis.sqlmap.DomStatementTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 s - in com.ibatis.sqlmap.DomStatementTest
[INFO] Running com.ibatis.sqlmap.DirectFieldMappingTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in com.ibatis.sqlmap.DirectFieldMappingTest
[INFO] Running com.ibatis.sqlmap.XmlStatementTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.17 s - in com.ibatis.sqlmap.XmlStatementTest
[INFO] Running com.ibatis.sqlmap.MultiResultSetTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.819 s - in com.ibatis.sqlmap.MultiResultSetTest
[INFO] Running com.ibatis.sqlmap.CacheStatementTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.253 s - in com.ibatis.sqlmap.CacheStatementTest
[INFO] Running com.ibatis.sqlmap.ComplexTypeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.ibatis.sqlmap.ComplexTypeTest
[INFO] Running com.ibatis.sqlmap.jira.JiraIbatis260Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s - in com.ibatis.sqlmap.jira.JiraIbatis260Test
[INFO] Running com.ibatis.sqlmap.PrivateMethodAccessTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in com.ibatis.sqlmap.PrivateMethodAccessTest
[INFO] Running com.ibatis.sqlmap.builder.xml.SqlMapClasspathEntityResolverTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.ibatis.sqlmap.builder.xml.SqlMapClasspathEntityResolverTest
[INFO] Running com.ibatis.sqlmap.DiscriminatorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s - in com.ibatis.sqlmap.DiscriminatorTest
[INFO] Running com.ibatis.sqlmap.ResultMapTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.269 s - in com.ibatis.sqlmap.ResultMapTest
[INFO] Running com.ibatis.sqlmap.StatementTest
[INFO] Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.626 s - in com.ibatis.sqlmap.StatementTest
[INFO] Running com.ibatis.sqlmap.BatchTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in com.ibatis.sqlmap.BatchTest
[INFO] Running com.ibatis.sqlmap.IterateTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.233 s - in com.ibatis.sqlmap.IterateTest
[INFO] Running com.ibatis.sqlmap.RepeatingGroupMappingTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.073 s - in com.ibatis.sqlmap.RepeatingGroupMappingTest
[INFO] Running com.ibatis.sqlmap.ResultObjectFactoryTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in com.ibatis.sqlmap.ResultObjectFactoryTest
[INFO] Running com.ibatis.sqlmap.ParameterMapTest
[ERROR] Tests run: 7, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.109 s <<< FAILURE! - in com.ibatis.sqlmap.ParameterMapTest
[ERROR] com.ibatis.sqlmap.ParameterMapTest.testNullValueReplacementInlineWithDynamic  Time elapsed: 0.016 s  <<< FAILURE!
org.opentest4j.AssertionFailedError: Invalid exception message ==> expected: <true> but was: <false>
	at org.junit.jupiter.api.AssertionFailureBuilder.build(AssertionFailureBuilder.java:151)
	at org.junit.jupiter.api.AssertionFailureBuilder.buildAndThrow(AssertionFailureBuilder.java:132)
	at org.junit.jupiter.api.AssertTrue.failNotTrue(AssertTrue.java:63)
	at org.junit.jupiter.api.AssertTrue.assertTrue(AssertTrue.java:36)
	at org.junit.jupiter.api.Assertions.assertTrue(Assertions.java:211)
	at com.ibatis.sqlmap.ParameterMapTest.assertMessageIsNullValueNotAllowed(ParameterMapTest.java:84)
	at com.ibatis.sqlmap.ParameterMapTest.testNullValueReplacementInlineWithDynamic(ParameterMapTest.java:79)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)

[INFO] Running com.ibatis.sqlmap.DerbyParameterMapTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.791 s - in com.ibatis.sqlmap.DerbyParameterMapTest
[INFO] Running com.ibatis.common.util.PaginatedArrayListTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.ibatis.common.util.PaginatedArrayListTest
[INFO] Running com.ibatis.common.xml.NodeletUtilsTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.ibatis.common.xml.NodeletUtilsTest
[INFO] Running com.ibatis.common.resources.ResourcesTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.ibatis.common.resources.ResourcesTest
[INFO] Running com.ibatis.common.beans.ComplexBeanProbeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.common.beans.ComplexBeanProbeTest
[INFO] Running com.ibatis.common.beans.PropertyAccessPlanTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.ibatis.common.beans.PropertyAccessPlanTest
[INFO] Running com.ibatis.common.beans.BadBeanTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.ibatis.common.beans.BadBeanTest
[INFO] Running com.ibatis.common.beans.JavaBeanProbeTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.ibatis.common.beans.JavaBeanProbeTest
[INFO] Running threads.RemapResultsThreadTest
[ERROR] Tests run: 2, Failures: 0, Errors: 2, Skipped: 0, Time elapsed: 0.017 s <<< FAILURE! - in threads.RemapResultsThreadTest
[ERROR] threads.RemapResultsThreadTest.testWithoutRemap  Time elapsed: 0.003 s  <<< ERROR!
com.ibatis.common.jdbc.exception.NestedSQLException: 
  
--- The error occurred in threads/Foo-sql-map.xml.  
--- The error occurred while executing update.  
--- Check the   drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   .  
--- Check the SQL Statement (preparation failed).  
--- Cause: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeUpdate(MappedStatement.java:157)
	at com.ibatis.sqlmap.engine.impl.SqlMapExecutorDelegate.update(SqlMapExecutorDelegate.java:566)
	at com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl.update(SqlMapSessionImpl.java:101)
	at com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl.update(SqlMapSessionImpl.java:105)
	at com.ibatis.sqlmap.engine.impl.SqlMapClientImpl.update(SqlMapClientImpl.java:72)
	at threads.RemapResultsThreadTest.runTest(RemapResultsThreadTest.java:46)
	at threads.RemapResultsThreadTest.testWithoutRemap(RemapResultsThreadTest.java:38)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.ibatis.common.jdbc.SimpleDataSource$SimplePooledConnection.invoke(SimpleDataSource.java:1129)
	at com.sun.proxy.$Proxy11.prepareStatement(Unknown Source)
	at com.ibatis.sqlmap.engine.execution.DefaultSqlExecutor.prepareStatement(DefaultSqlExecutor.java:764)
	at com.ibatis.sqlmap.engine.execution.DefaultSqlExecutor.executeUpdate(DefaultSqlExecutor.java:80)
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.sqlExecuteUpdate(MappedStatement.java:370)
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeUpdate(MappedStatement.java:144)
	... 73 more
Caused by: org.hsqldb.HsqlException: unexpected token: CREATE
	at org.hsqldb.error.Error.parseError(Unknown Source)
	at org.hsqldb.ParserBase.unexpectedToken(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 84 more

[ERROR] threads.RemapResultsThreadTest.testWithRemap  Time elapsed: 0.002 s  <<< ERROR!
com.ibatis.common.jdbc.exception.NestedSQLException: 
  
--- The error occurred in threads/Foo-sql-map.xml.  
--- The error occurred while executing update.  
--- Check the   drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   .  
--- Check the SQL Statement (preparation failed).  
--- Cause: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeUpdate(MappedStatement.java:157)
	at com.ibatis.sqlmap.engine.impl.SqlMapExecutorDelegate.update(SqlMapExecutorDelegate.java:566)
	at com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl.update(SqlMapSessionImpl.java:101)
	at com.ibatis.sqlmap.engine.impl.SqlMapSessionImpl.update(SqlMapSessionImpl.java:105)
	at com.ibatis.sqlmap.engine.impl.SqlMapClientImpl.update(SqlMapClientImpl.java:72)
	at threads.RemapResultsThreadTest.runTest(RemapResultsThreadTest.java:46)
	at threads.RemapResultsThreadTest.testWithRemap(RemapResultsThreadTest.java:33)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:727)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92)
	at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:217)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.LazyLauncher.execute(LazyLauncher.java:55)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.execute(JUnitPlatformProvider.java:223)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:175)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:139)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:456)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:169)
	at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:595)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:581)
Caused by: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCUtil.sqlException(Unknown Source)
	at org.hsqldb.jdbc.JDBCPreparedStatement.<init>(Unknown Source)
	at org.hsqldb.jdbc.JDBCConnection.prepareStatement(Unknown Source)
	at jdk.internal.reflect.GeneratedMethodAccessor9.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at com.ibatis.common.jdbc.SimpleDataSource$SimplePooledConnection.invoke(SimpleDataSource.java:1129)
	at com.sun.proxy.$Proxy11.prepareStatement(Unknown Source)
	at com.ibatis.sqlmap.engine.execution.DefaultSqlExecutor.prepareStatement(DefaultSqlExecutor.java:764)
	at com.ibatis.sqlmap.engine.execution.DefaultSqlExecutor.executeUpdate(DefaultSqlExecutor.java:80)
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.sqlExecuteUpdate(MappedStatement.java:370)
	at com.ibatis.sqlmap.engine.mapping.statement.MappedStatement.executeUpdate(MappedStatement.java:144)
	... 73 more
Caused by: org.hsqldb.HsqlException: unexpected token: CREATE
	at org.hsqldb.error.Error.parseError(Unknown Source)
	at org.hsqldb.ParserBase.unexpectedToken(Unknown Source)
	at org.hsqldb.ParserCommand.compileStatement(Unknown Source)
	at org.hsqldb.Session.compileStatement(Unknown Source)
	at org.hsqldb.StatementManager.compile(Unknown Source)
	at org.hsqldb.Session.execute(Unknown Source)
	... 84 more

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   ParameterMapTest.testNullValueReplacementInlineWithDynamic:79->assertMessageIsNullValueNotAllowed:84 Invalid exception message ==> expected: <true> but was: <false>
[ERROR] Errors: 
[ERROR]   RemapResultsThreadTest.testWithRemap:33->runTest:46 » NestedSQL   
--- The error occurred in threads/Foo-sql-map.xml.  
--- The error occurred while executing update.  
--- Check the   drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   .  
--- Check the SQL Statement (preparation failed).  
--- Cause: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
[ERROR]   RemapResultsThreadTest.testWithoutRemap:38->runTest:46 » NestedSQL   
--- The error occurred in threads/Foo-sql-map.xml.  
--- The error occurred while executing update.  
--- Check the   drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   .  
--- Check the SQL Statement (preparation failed).  
--- Cause: java.sql.SQLSyntaxErrorException: unexpected token: CREATE in statement [  drop table foo if exists;   create table foo (     column1 varchar(50),     column2 varchar(50),     column3 varchar(50)     );    insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');  insert into foo values ('a', 'a', 'a');  insert into foo values ('b', 'b', 'b');  insert into foo values ('c', 'c', 'c');   ]
[INFO] 
[ERROR] Tests run: 263, Failures: 1, Errors: 2, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  22.774 s
[INFO] Finished at: 2023-01-17T21:01:01Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:3.0.0-M7:test (default-test) on project mybatis2: There are test failures.
[ERROR] 
[ERROR] Please refer to /home/gabsko/breaking-updates/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
