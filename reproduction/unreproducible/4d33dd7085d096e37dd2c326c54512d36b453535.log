[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] SmallRye: GraphQL Parent                                           [pom]
[INFO] SmallRye: GraphQL UI                                               [pom]
[INFO] SmallRye: GraphQL UI :: Graphiql                                   [jar]
[INFO] SmallRye: GraphQL Common                                           [pom]
[INFO] SmallRye: GraphQL Common :: Schema Model                           [jar]
[INFO] SmallRye: GraphQL Server                                           [pom]
[INFO] SmallRye: GraphQL Server :: API                                    [jar]
[INFO] SmallRye: GraphQL Common :: Schema Builder                         [jar]
[INFO] SmallRye: GraphQL Server :: Implementation                         [jar]
[INFO] SmallRye: GraphQL Server :: CDI                                    [jar]
[INFO] SmallRye: GraphQL Server :: Servlet                                [jar]
[INFO] SmallRye: GraphQL Server :: TCK                                    [jar]
[INFO] SmallRye: GraphQL Server :: Runner                                 [war]
[INFO] SmallRye: GraphQL Client                                           [pom]
[INFO] SmallRye: GraphQL Client :: API                                    [jar]
[INFO] SmallRye: GraphQL Client :: Implementation                         [jar]
[INFO] SmallRye: GraphQL Client :: TCK                                    [jar]
[INFO] SmallRye: GraphQL Client :: Implementation :: Vert.x               [jar]
[INFO] SmallRye: GraphQL Server :: Integration Tests                      [jar]
[INFO] smallrye-graphql-federation-parent                                 [pom]
[INFO] smallrye-graphql-federation-api                                    [jar]
[INFO] smallrye-graphql-federation-runtime                                [jar]
[INFO] SmallRye: GraphQL Client :: Generator                              [jar]
[INFO] SmallRye: GraphQL Client :: Generator Test                         [jar]
[INFO] SmallRye: GraphQL Tools                                            [pom]
[INFO] SmallRye: GraphQL Tools :: Maven                          [maven-plugin]
[INFO] SmallRye: GraphQL Tools :: Gradle                                  [pom]
[INFO] SmallRye: GraphQL Tools :: Maven plugin tests                      [jar]
[INFO] Power Annotations Parent POM                                       [pom]
[INFO] Power Annotations Annotations                                      [jar]
[INFO] Power Annotations Utils Parent POM                                 [pom]
[INFO] Power Annotations Utils API                                        [jar]
[INFO] Power Annotations Jandex Common                                    [jar]
[INFO] Power Annotations Jandex Runtime Scanner                           [jar]
[INFO] Power Annotations Utils Impl for Jandex                            [jar]
[INFO] Power Annotations TCK                                              [jar]
[INFO] Power Annotations Jandex Maven Plugin                     [maven-plugin]
[INFO] SmallRye GraphQL : Documentation                                   [jar]
[INFO] Empty Release Project to Avoid Maven Bug                           [pom]
[INFO] 
[INFO] ----------------< io.smallrye:smallrye-graphql-parent >-----------------
[INFO] Building SmallRye: GraphQL Parent 1.4.0-SNAPSHOT                  [1/39]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-parent ---
[INFO] Deleting /home/gabsko/breaking-updates/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-parent ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 0
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-parent ---
[INFO] Processed 0 files in 00:00.001 (Already Sorted: 0, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-parent ---
[INFO] No sources to compile
[INFO] 
[INFO] ---------------< io.smallrye:smallrye-graphql-ui-parent >---------------
[INFO] Building SmallRye: GraphQL UI 1.4.0-SNAPSHOT                      [2/39]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-ui-parent ---
[INFO] Deleting /home/gabsko/breaking-updates/ui/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-ui-parent ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 0
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-ui-parent ---
[INFO] Processed 0 files in 00:00.000 (Already Sorted: 0, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-ui-parent ---
[INFO] No sources to compile
[INFO] 
[INFO] --------------< io.smallrye:smallrye-graphql-ui-graphiql >--------------
[INFO] Building SmallRye: GraphQL UI :: Graphiql 1.4.0-SNAPSHOT          [3/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-ui-graphiql ---
[INFO] Deleting /home/gabsko/breaking-updates/ui/graphiql/target
[INFO] 
[INFO] --- maven-dependency-plugin:3.2.0:unpack (install-graphiql) @ smallrye-graphql-ui-graphiql ---
[INFO] Configured Artifact: org.webjars.npm:graphiql:1.4.2:jar
[INFO] Configured Artifact: org.webjars.npm:rxjs:7.4.0:jar
[INFO] Configured Artifact: org.webjars.npm:react:17.0.2:jar
[INFO] Configured Artifact: org.webjars.npm:react-dom:17.0.2:jar
[INFO] Unpacking /home/gabsko/.m2/repository/org/webjars/npm/graphiql/1.4.2/graphiql-1.4.2.jar to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui with includes "**/graphiql.min.js,**/graphiql.min.js.map,**/graphiql.min.css,**/graphiql.min.css.map" and excludes ""
[INFO] Unpacking /home/gabsko/.m2/repository/org/webjars/npm/rxjs/7.4.0/rxjs-7.4.0.jar to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui with includes "**/rxjs.umd.min.js,**/rxjs.umd.min.js.map" and excludes ""
[INFO] Unpacking /home/gabsko/.m2/repository/org/webjars/npm/react/17.0.2/react-17.0.2.jar to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui with includes "**/react.production.min.js" and excludes ""
[INFO] Unpacking /home/gabsko/.m2/repository/org/webjars/npm/react-dom/17.0.2/react-dom-17.0.2.jar to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui with includes "**/react-dom.production.min.js" and excludes ""
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-ui-graphiql ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 0
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-ui-graphiql ---
[INFO] Processed 0 files in 00:00.000 (Already Sorted: 0, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-ui-graphiql ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/ui/graphiql/src/main/resources
[INFO] Copying 1 resource to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui
[INFO] Copying 4 resources to /home/gabsko/breaking-updates/ui/graphiql/target/classes/META-INF/resources/graphql-ui
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-ui-graphiql ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-ui-graphiql ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/ui/graphiql/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-ui-graphiql ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-ui-graphiql ---
[INFO] No tests to run.
[INFO] 
[INFO] -------------< io.smallrye:smallrye-graphql-common-parent >-------------
[INFO] Building SmallRye: GraphQL Common 1.4.0-SNAPSHOT                  [4/39]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-common-parent ---
[INFO] Deleting /home/gabsko/breaking-updates/common/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-common-parent ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 0
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-common-parent ---
[INFO] Processed 0 files in 00:00.000 (Already Sorted: 0, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-common-parent ---
[INFO] No sources to compile
[INFO] 
[INFO] -------------< io.smallrye:smallrye-graphql-schema-model >--------------
[INFO] Building SmallRye: GraphQL Common :: Schema Model 1.4.0-SNAPSHOT  [5/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-schema-model ---
[INFO] Deleting /home/gabsko/breaking-updates/common/schema-model/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-schema-model ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 22
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         22 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-schema-model ---
[INFO] Processed 22 files in 00:00.325 (Already Sorted: 22, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-schema-model ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/common/schema-model/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-schema-model ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 22 source files to /home/gabsko/breaking-updates/common/schema-model/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-schema-model ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/common/schema-model/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-schema-model ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-schema-model ---
[INFO] No tests to run.
[INFO] 
[INFO] -------------< io.smallrye:smallrye-graphql-server-parent >-------------
[INFO] Building SmallRye: GraphQL Server 1.4.0-SNAPSHOT                  [6/39]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-server-parent ---
[INFO] Deleting /home/gabsko/breaking-updates/server/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-server-parent ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 0
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-server-parent ---
[INFO] Processed 0 files in 00:00.000 (Already Sorted: 0, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-server-parent ---
[INFO] No sources to compile
[INFO] 
[INFO] ------------------< io.smallrye:smallrye-graphql-api >------------------
[INFO] Building SmallRye: GraphQL Server :: API 1.4.0-SNAPSHOT           [7/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-api ---
[INFO] Deleting /home/gabsko/breaking-updates/server/api/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-api ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 12
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         12 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-api ---
[INFO] Processed 12 files in 00:00.059 (Already Sorted: 12, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-api ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/api/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-api ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 12 source files to /home/gabsko/breaking-updates/server/api/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-api ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/api/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-api ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-api ---
[INFO] No tests to run.
[INFO] 
[INFO] ------------< io.smallrye:smallrye-graphql-schema-builder >-------------
[INFO] Building SmallRye: GraphQL Common :: Schema Builder 1.4.0-SNAPSHOT [8/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-schema-builder ---
[INFO] Deleting /home/gabsko/breaking-updates/common/schema-builder/target
[INFO] 
[INFO] --- maven-dependency-plugin:3.2.0:unpack (default) @ smallrye-graphql-schema-builder ---
[INFO] Configured Artifact: org.eclipse.microprofile.graphql:microprofile-graphql-tck:?:jar
[INFO] Unpacking /home/gabsko/.m2/repository/org/eclipse/microprofile/graphql/microprofile-graphql-tck/1.1.0/microprofile-graphql-tck-1.1.0.jar to /home/gabsko/breaking-updates/common/schema-builder/target/test-classes with includes "" and excludes "**/tests/,**/dynamic/,**/*Test.class,**/beans.xml"
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-schema-builder ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 71
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         71 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-schema-builder ---
[INFO] Processed 71 files in 00:00.327 (Already Sorted: 71, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-schema-builder ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/common/schema-builder/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-schema-builder ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 32 source files to /home/gabsko/breaking-updates/common/schema-builder/target/classes
[INFO] /home/gabsko/breaking-updates/common/schema-builder/src/main/java/io/smallrye/graphql/schema/creator/ReferenceCreator.java: /home/gabsko/breaking-updates/common/schema-builder/src/main/java/io/smallrye/graphql/schema/creator/ReferenceCreator.java uses or overrides a deprecated API.
[INFO] /home/gabsko/breaking-updates/common/schema-builder/src/main/java/io/smallrye/graphql/schema/creator/ReferenceCreator.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-schema-builder ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/common/schema-builder/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-schema-builder ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 39 source files to /home/gabsko/breaking-updates/common/schema-builder/target/test-classes
[INFO] /home/gabsko/breaking-updates/common/schema-builder/src/test/java/io/smallrye/graphql/index/app/ClassWithOptionalField.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/common/schema-builder/src/test/java/io/smallrye/graphql/index/app/ClassWithOptionalField.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-schema-builder ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.smallrye.graphql.index.SchemaBuilderTest
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.index.SchemaBuilderTest testConcurrentSchemaBuilding
INFO: 
{
    "batchOperations": [
    ],
    "directiveTypes": [
    ],
    "enums": {
        "CountDown": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
            "name": "CountDown",
            "type": "ENUM",
            "values": [
                {
                    "value": "ONE"
                },
                {
                    "value": "THREE"
                },
                {
                    "value": "TWO"
                }
            ]
        }
    },
    "errors": {
    },
    "groupedMutations": {
    },
    "groupedQueries": {
    },
    "groupedSubscriptions": {
    },
    "inputs": {
        "ScalarHolderInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "name": "ScalarHolderInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "anotherDateObject": {
                    "description": "This is another date (ISO-8601)",
                    "methodName": "setAnotherDateObject",
                    "name": "anotherDateObject",
                    "notNull": false,
                    "propertyName": "anotherDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "anotherDateTimeObject": {
                    "description": "This is another datetime (ISO-8601)",
                    "methodName": "setAnotherDateTimeObject",
                    "name": "anotherDateTimeObject",
                    "notNull": false,
                    "propertyName": "anotherDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "anotherTimeObject": {
                    "description": "This is another time (ISO-8601)",
                    "methodName": "setAnotherTimeObject",
                    "name": "anotherTimeObject",
                    "notNull": false,
                    "propertyName": "anotherTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "bigDecimalObject": {
                    "methodName": "setBigDecimalObject",
                    "name": "bigDecimalObject",
                    "notNull": false,
                    "propertyName": "bigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    }
                },
                "bigIntegerObject": {
                    "methodName": "setBigIntegerObject",
                    "name": "bigIntegerObject",
                    "notNull": false,
                    "propertyName": "bigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "booleanObject": {
                    "methodName": "setBooleanObject",
                    "name": "booleanObject",
                    "notNull": false,
                    "propertyName": "booleanObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Boolean",
                        "graphQlClassName": "java.lang.Boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "booleanPrimitive": {
                    "methodName": "setBooleanPrimitive",
                    "name": "booleanPrimitive",
                    "notNull": true,
                    "propertyName": "booleanPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "byteObject": {
                    "methodName": "setByteObject",
                    "name": "byteObject",
                    "notNull": false,
                    "propertyName": "byteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "bytePrimitive": {
                    "methodName": "setBytePrimitive",
                    "name": "bytePrimitive",
                    "notNull": true,
                    "propertyName": "bytePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "charArray": {
                    "methodName": "setCharArray",
                    "name": "charArray",
                    "notNull": false,
                    "propertyName": "charArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[C",
                        "wrapperType": "ARRAY"
                    }
                },
                "charObject": {
                    "methodName": "setCharObject",
                    "name": "charObject",
                    "notNull": false,
                    "propertyName": "charObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Character",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "charPrimitive": {
                    "methodName": "setCharPrimitive",
                    "name": "charPrimitive",
                    "notNull": true,
                    "propertyName": "charPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateObject": {
                    "defaultValue": "1978-07-03",
                    "description": "ISO-8601",
                    "methodName": "setDateObject",
                    "name": "dateObject",
                    "notNull": false,
                    "propertyName": "dateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "dateTimeObject": {
                    "description": "ISO-8601",
                    "methodName": "setDateTimeObject",
                    "name": "dateTimeObject",
                    "notNull": false,
                    "propertyName": "dateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "doubleObject": {
                    "methodName": "setDoubleObject",
                    "name": "doubleObject",
                    "notNull": false,
                    "propertyName": "doubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "doublePrimitive": {
                    "methodName": "setDoublePrimitive",
                    "name": "doublePrimitive",
                    "notNull": true,
                    "propertyName": "doublePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatObject": {
                    "methodName": "setFloatObject",
                    "name": "floatObject",
                    "notNull": false,
                    "propertyName": "floatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatPrimitive": {
                    "methodName": "setFloatPrimitive",
                    "name": "floatPrimitive",
                    "notNull": true,
                    "propertyName": "floatPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "formattedBigDecimalObject": {
                    "description": "#,###.## en-GB",
                    "methodName": "setFormattedBigDecimalObject",
                    "name": "formattedBigDecimalObject",
                    "notNull": false,
                    "propertyName": "formattedBigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#,###.##",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedBigIntegerObject": {
                    "description": "¤000 en-US",
                    "methodName": "setFormattedBigIntegerObject",
                    "name": "formattedBigIntegerObject",
                    "notNull": false,
                    "propertyName": "formattedBigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedByteObject": {
                    "description": "¤00 en-ZA",
                    "methodName": "setFormattedByteObject",
                    "name": "formattedByteObject",
                    "notNull": false,
                    "propertyName": "formattedByteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤00",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedDateObject": {
                    "description": "This is a formatted date (MM dd yyyy)",
                    "methodName": "setFormattedDateObject",
                    "name": "formattedDateObject",
                    "notNull": false,
                    "propertyName": "formattedDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDateTimeObject": {
                    "description": "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)",
                    "methodName": "setFormattedDateTimeObject",
                    "name": "formattedDateTimeObject",
                    "notNull": false,
                    "propertyName": "formattedDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy 'at' hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDoubleObject": {
                    "description": "This is a formatted number (#0.0 en-GB)",
                    "methodName": "setFormattedDoubleObject",
                    "name": "formattedDoubleObject",
                    "notNull": false,
                    "propertyName": "formattedDoubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedFloatObject": {
                    "description": "#0.0 en-GB",
                    "methodName": "setFormattedFloatObject",
                    "name": "formattedFloatObject",
                    "notNull": false,
                    "propertyName": "formattedFloatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedIntObject": {
                    "description": "en-US",
                    "methodName": "setFormattedIntObject",
                    "name": "formattedIntObject",
                    "notNull": false,
                    "propertyName": "formattedIntObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedLongObject": {
                    "description": "is-IS",
                    "methodName": "setFormattedLongObject",
                    "name": "formattedLongObject",
                    "notNull": false,
                    "propertyName": "formattedLongObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedLongPrimitive": {
                    "description": "is-IS",
                    "methodName": "setFormattedLongPrimitive",
                    "name": "formattedLongPrimitive",
                    "notNull": true,
                    "propertyName": "formattedLongPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedShortObject": {
                    "description": "¤000 en-ZA",
                    "methodName": "setFormattedShortObject",
                    "name": "formattedShortObject",
                    "notNull": false,
                    "propertyName": "formattedShortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedTimeObject": {
                    "description": "This is a formatted time (hh:mm:ss)",
                    "methodName": "setFormattedTimeObject",
                    "name": "formattedTimeObject",
                    "notNull": false,
                    "propertyName": "formattedTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "id": {
                    "methodName": "setId",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "intObject": {
                    "methodName": "setIntObject",
                    "name": "intObject",
                    "notNull": false,
                    "propertyName": "intObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitive": {
                    "methodName": "setIntPrimitive",
                    "name": "intPrimitive",
                    "notNull": true,
                    "propertyName": "intPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitiveId": {
                    "methodName": "setIntPrimitiveId",
                    "name": "intPrimitiveId",
                    "notNull": true,
                    "propertyName": "intPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "int",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "integerObjectId": {
                    "methodName": "setIntegerObjectId",
                    "name": "integerObjectId",
                    "notNull": false,
                    "propertyName": "integerObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longObject": {
                    "methodName": "setLongObject",
                    "name": "longObject",
                    "notNull": false,
                    "propertyName": "longObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longObjectId": {
                    "methodName": "setLongObjectId",
                    "name": "longObjectId",
                    "notNull": false,
                    "propertyName": "longObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.Long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longPrimitive": {
                    "methodName": "setLongPrimitive",
                    "name": "longPrimitive",
                    "notNull": true,
                    "propertyName": "longPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longPrimitiveId": {
                    "methodName": "setLongPrimitiveId",
                    "name": "longPrimitiveId",
                    "notNull": true,
                    "propertyName": "longPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "shortObject": {
                    "methodName": "setShortObject",
                    "name": "shortObject",
                    "notNull": false,
                    "propertyName": "shortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "shortPrimitive": {
                    "methodName": "setShortPrimitive",
                    "name": "shortPrimitive",
                    "notNull": true,
                    "propertyName": "shortPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "stringObject": {
                    "methodName": "setStringObject",
                    "name": "stringObject",
                    "notNull": false,
                    "propertyName": "stringObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "timeObject": {
                    "description": "ISO-8601",
                    "methodName": "setTimeObject",
                    "name": "timeObject",
                    "notNull": false,
                    "propertyName": "timeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "uuidId": {
                    "methodName": "setUuidId",
                    "name": "uuidId",
                    "notNull": false,
                    "propertyName": "uuidId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.UUID",
                        "graphQlClassName": "java.util.UUID",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                }
            }
        },
        "BasicMessageInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "name": "BasicMessageInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "countdownPlace": {
                    "methodName": "setCountdownPlace",
                    "name": "countdownPlace",
                    "notNull": false,
                    "propertyName": "countdownPlace",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "name": "CountDown",
                        "type": "ENUM"
                    }
                },
                "message": {
                    "methodName": "setMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            }
        }
    },
    "interfaces": {
        "BasicInterface": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
            "name": "BasicInterface",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    },
    "mutations": [
        {
            "description": "Testing transformed number as a response (number # en-GB)",
            "methodName": "transformedNumber",
            "name": "transformedNumber",
            "notNull": false,
            "propertyName": "transformedNumber",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Integer",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "transformation": {
                "format": "number #",
                "jsonB": false,
                "locale": "en-GB",
                "type": "NUMBER"
            },
            "arguments": [
                {
                    "methodName": "transformedNumber",
                    "name": "input",
                    "notNull": false,
                    "propertyName": "transformedNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "input",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "settlement",
            "name": "settlement",
            "notNull": false,
            "propertyName": "settlement",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "setScalarHolder",
            "name": "scalarHolder",
            "notNull": false,
            "propertyName": "setScalarHolder",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "name": "ScalarHolder",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "setScalarHolder",
                    "name": "scalarHolder",
                    "notNull": false,
                    "propertyName": "scalarHolder",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                        "name": "ScalarHolderInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "scalarHolder",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        }
    ],
    "queries": [
        {
            "methodName": "bytePrimitive",
            "name": "testBytePrimitive",
            "notNull": true,
            "propertyName": "bytePrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "byte",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "isBooleanPrimitive",
            "name": "booleanPrimitive",
            "notNull": true,
            "propertyName": "booleanPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "boolean",
                "graphQlClassName": "boolean",
                "name": "Boolean",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getScalarHolder",
            "name": "testScalarsInPojo",
            "notNull": false,
            "propertyName": "scalarHolder",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "name": "ScalarHolder",
                "type": "TYPE"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "floatObject",
            "name": "testFloatObject",
            "notNull": false,
            "propertyName": "floatObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Float",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "byteObject",
            "name": "testByteObject",
            "notNull": false,
            "propertyName": "byteObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Byte",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "testNonNullParameter",
            "name": "testNonNullParameter",
            "notNull": false,
            "propertyName": "testNonNullParameter",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "methodName": "testNonNullParameter",
                    "name": "param",
                    "notNull": true,
                    "propertyName": "testNonNullParameter",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "param",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "bigDecimalObject",
            "name": "testBigDecimalObject",
            "notNull": false,
            "propertyName": "bigDecimalObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.math.BigDecimal",
                "graphQlClassName": "java.math.BigDecimal",
                "name": "BigDecimal",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "intPrimitive",
            "name": "testIntPrimitive",
            "notNull": true,
            "propertyName": "intPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "int",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "intObject",
            "name": "testIntObject",
            "notNull": false,
            "propertyName": "intObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Integer",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing transformed date as a response (dd MMM yyyy en-GB)",
            "methodName": "transformedDate",
            "name": "transformedDate",
            "notNull": false,
            "propertyName": "transformedDate",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDate",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "transformation": {
                "format": "dd MMM yyyy",
                "jsonB": false,
                "locale": "en-GB",
                "type": "DATE"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "longObject",
            "name": "testLongObject",
            "notNull": false,
            "propertyName": "longObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Long",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "basicMessageEcho",
            "name": "basicMessageEcho",
            "notNull": false,
            "propertyName": "basicMessageEcho",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                "name": "BasicInterface",
                "type": "INTERFACE"
            },
            "arguments": [
                {
                    "methodName": "basicMessageEcho",
                    "name": "input",
                    "notNull": false,
                    "propertyName": "basicMessageEcho",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
                        "name": "BasicMessageInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "input",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "floatPrimitive",
            "name": "testFloatPrimitive",
            "notNull": true,
            "propertyName": "floatPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "float",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "doublePrimitive",
            "name": "testDoublePrimitive",
            "notNull": true,
            "propertyName": "doublePrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "double",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "isBooleanObject",
            "name": "booleanObject",
            "notNull": false,
            "propertyName": "booleanObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Boolean",
                "graphQlClassName": "java.lang.Boolean",
                "name": "Boolean",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getShortObject",
            "name": "shortObject",
            "notNull": false,
            "propertyName": "shortObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Short",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "dateTimeObject",
            "name": "testDateTimeObject",
            "notNull": false,
            "propertyName": "dateTimeObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDateTime",
                "graphQlClassName": "java.lang.String",
                "name": "DateTime",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getShortPrimitive",
            "name": "shortPrimitive",
            "notNull": true,
            "propertyName": "shortPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "short",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charArray",
            "name": "testCharArray",
            "notNull": false,
            "propertyName": "charArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "char",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[C",
                "wrapperType": "ARRAY"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "dateObject",
            "name": "testDateObject",
            "notNull": false,
            "propertyName": "dateObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDate",
                "graphQlClassName": "java.lang.String",
                "name": "Date",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "longPrimitive",
            "name": "testLongPrimitive",
            "notNull": true,
            "propertyName": "longPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "long",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "timeObject",
            "name": "testTimeObject",
            "notNull": false,
            "propertyName": "timeObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalTime",
                "graphQlClassName": "java.lang.String",
                "name": "Time",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charObject",
            "name": "testCharObject",
            "notNull": false,
            "propertyName": "charObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Character",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "id",
            "name": "testId",
            "notNull": false,
            "propertyName": "id",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "ID",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charPrimitive",
            "name": "testCharPrimitive",
            "notNull": true,
            "propertyName": "charPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "char",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getaway",
            "name": "getaway",
            "notNull": false,
            "propertyName": "getaway",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "doubleObject",
            "name": "testDoubleObject",
            "notNull": false,
            "propertyName": "doubleObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Double",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "stringObject",
            "name": "testStringObject",
            "notNull": false,
            "propertyName": "stringObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "bigIntegerObject",
            "name": "testBigIntegerObject",
            "notNull": false,
            "propertyName": "bigIntegerObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.math.BigInteger",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        }
    ],
    "subscriptions": [
    ],
    "types": {
        "BasicMessage": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicType",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicType",
            "name": "BasicMessage",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "name": "BasicInterface",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "BasicInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "name": "BasicInput",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "countdownPlace": {
                    "methodName": "getCountdownPlace",
                    "name": "countdownPlace",
                    "notNull": false,
                    "propertyName": "countdownPlace",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "name": "CountDown",
                        "type": "ENUM"
                    }
                },
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "name": "BasicInterface",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "ScalarHolder": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "name": "ScalarHolder",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "anotherDateObject": {
                    "description": "This is another date (ISO-8601)",
                    "methodName": "getAnotherDateObject",
                    "name": "anotherDateObject",
                    "notNull": false,
                    "propertyName": "anotherDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "anotherDateTimeObject": {
                    "description": "This is another datetime (ISO-8601)",
                    "methodName": "getAnotherDateTimeObject",
                    "name": "anotherDateTimeObject",
                    "notNull": false,
                    "propertyName": "anotherDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "anotherTimeObject": {
                    "description": "This is another time (ISO-8601)",
                    "methodName": "getAnotherTimeObject",
                    "name": "anotherTimeObject",
                    "notNull": false,
                    "propertyName": "anotherTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "bigDecimalObject": {
                    "methodName": "getBigDecimalObject",
                    "name": "bigDecimalObject",
                    "notNull": false,
                    "propertyName": "bigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    }
                },
                "bigIntegerObject": {
                    "methodName": "getBigIntegerObject",
                    "name": "bigIntegerObject",
                    "notNull": false,
                    "propertyName": "bigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "booleanObject": {
                    "methodName": "getBooleanObject",
                    "name": "booleanObject",
                    "notNull": false,
                    "propertyName": "booleanObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Boolean",
                        "graphQlClassName": "java.lang.Boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "byteObject": {
                    "methodName": "getByteObject",
                    "name": "byteObject",
                    "notNull": false,
                    "propertyName": "byteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "bytePrimitive": {
                    "methodName": "getBytePrimitive",
                    "name": "bytePrimitive",
                    "notNull": true,
                    "propertyName": "bytePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "charArray": {
                    "methodName": "getCharArray",
                    "name": "charArray",
                    "notNull": false,
                    "propertyName": "charArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[C",
                        "wrapperType": "ARRAY"
                    }
                },
                "charObject": {
                    "methodName": "getCharObject",
                    "name": "charObject",
                    "notNull": false,
                    "propertyName": "charObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Character",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "charPrimitive": {
                    "methodName": "getCharPrimitive",
                    "name": "charPrimitive",
                    "notNull": true,
                    "propertyName": "charPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateObject": {
                    "defaultValue": "1978-07-03",
                    "description": "ISO-8601",
                    "methodName": "getDateObject",
                    "name": "dateObject",
                    "notNull": false,
                    "propertyName": "dateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "dateTimeObject": {
                    "description": "ISO-8601",
                    "methodName": "getDateTimeObject",
                    "name": "dateTimeObject",
                    "notNull": false,
                    "propertyName": "dateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "doubleObject": {
                    "methodName": "getDoubleObject",
                    "name": "doubleObject",
                    "notNull": false,
                    "propertyName": "doubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "doublePrimitive": {
                    "methodName": "getDoublePrimitive",
                    "name": "doublePrimitive",
                    "notNull": true,
                    "propertyName": "doublePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatObject": {
                    "methodName": "getFloatObject",
                    "name": "floatObject",
                    "notNull": false,
                    "propertyName": "floatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatPrimitive": {
                    "methodName": "getFloatPrimitive",
                    "name": "floatPrimitive",
                    "notNull": true,
                    "propertyName": "floatPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "formattedBigDecimalObject": {
                    "description": "#,###.## en-GB",
                    "methodName": "getFormattedBigDecimalObject",
                    "name": "formattedBigDecimalObject",
                    "notNull": false,
                    "propertyName": "formattedBigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#,###.##",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedBigIntegerObject": {
                    "description": "¤000 en-US",
                    "methodName": "getFormattedBigIntegerObject",
                    "name": "formattedBigIntegerObject",
                    "notNull": false,
                    "propertyName": "formattedBigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedByteObject": {
                    "description": "¤00 en-ZA",
                    "methodName": "getFormattedByteObject",
                    "name": "formattedByteObject",
                    "notNull": false,
                    "propertyName": "formattedByteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤00",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedDateObject": {
                    "description": "This is a formatted date (MM dd yyyy)",
                    "methodName": "getFormattedDateObject",
                    "name": "formattedDateObject",
                    "notNull": false,
                    "propertyName": "formattedDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDateTimeObject": {
                    "description": "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)",
                    "methodName": "getFormattedDateTimeObject",
                    "name": "formattedDateTimeObject",
                    "notNull": false,
                    "propertyName": "formattedDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy 'at' hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDoubleObject": {
                    "description": "This is a formatted number (#0.0 en-GB)",
                    "methodName": "getFormattedDoubleObject",
                    "name": "formattedDoubleObject",
                    "notNull": false,
                    "propertyName": "formattedDoubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedFloatObject": {
                    "description": "#0.0 en-GB",
                    "methodName": "getFormattedFloatObject",
                    "name": "formattedFloatObject",
                    "notNull": false,
                    "propertyName": "formattedFloatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedIntObject": {
                    "description": "en-US",
                    "methodName": "getFormattedIntObject",
                    "name": "formattedIntObject",
                    "notNull": false,
                    "propertyName": "formattedIntObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedLongObject": {
                    "description": "is-IS",
                    "methodName": "getFormattedLongObject",
                    "name": "formattedLongObject",
                    "notNull": false,
                    "propertyName": "formattedLongObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedLongPrimitive": {
                    "description": "is-IS",
                    "methodName": "getFormattedLongPrimitive",
                    "name": "formattedLongPrimitive",
                    "notNull": true,
                    "propertyName": "formattedLongPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedShortObject": {
                    "description": "¤000 en-ZA",
                    "methodName": "getFormattedShortObject",
                    "name": "formattedShortObject",
                    "notNull": false,
                    "propertyName": "formattedShortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedTimeObject": {
                    "description": "This is a formatted time (hh:mm:ss)",
                    "methodName": "getFormattedTimeObject",
                    "name": "formattedTimeObject",
                    "notNull": false,
                    "propertyName": "formattedTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "id": {
                    "methodName": "getId",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "intObject": {
                    "methodName": "getIntObject",
                    "name": "intObject",
                    "notNull": false,
                    "propertyName": "intObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitive": {
                    "methodName": "getIntPrimitive",
                    "name": "intPrimitive",
                    "notNull": true,
                    "propertyName": "intPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitiveId": {
                    "methodName": "getIntPrimitiveId",
                    "name": "intPrimitiveId",
                    "notNull": true,
                    "propertyName": "intPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "int",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "integerObjectId": {
                    "methodName": "getIntegerObjectId",
                    "name": "integerObjectId",
                    "notNull": false,
                    "propertyName": "integerObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longObject": {
                    "methodName": "getLongObject",
                    "name": "longObject",
                    "notNull": false,
                    "propertyName": "longObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longObjectId": {
                    "methodName": "getLongObjectId",
                    "name": "longObjectId",
                    "notNull": false,
                    "propertyName": "longObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.Long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longPrimitive": {
                    "methodName": "getLongPrimitive",
                    "name": "longPrimitive",
                    "notNull": true,
                    "propertyName": "longPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longPrimitiveId": {
                    "methodName": "getLongPrimitiveId",
                    "name": "longPrimitiveId",
                    "notNull": true,
                    "propertyName": "longPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "shortObject": {
                    "methodName": "getShortObject",
                    "name": "shortObject",
                    "notNull": false,
                    "propertyName": "shortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "shortPrimitive": {
                    "methodName": "getShortPrimitive",
                    "name": "shortPrimitive",
                    "notNull": true,
                    "propertyName": "shortPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "stringObject": {
                    "methodName": "getStringObject",
                    "name": "stringObject",
                    "notNull": false,
                    "propertyName": "stringObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "timeObject": {
                    "description": "ISO-8601",
                    "methodName": "getTimeObject",
                    "name": "timeObject",
                    "notNull": false,
                    "propertyName": "timeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "uuidId": {
                    "methodName": "getUuidId",
                    "name": "uuidId",
                    "notNull": false,
                    "propertyName": "uuidId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.UUID",
                        "graphQlClassName": "java.util.UUID",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "booleanPrimitive": {
                    "methodName": "isBooleanPrimitive",
                    "name": "booleanPrimitive",
                    "notNull": true,
                    "propertyName": "booleanPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    }
}
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.index.SchemaBuilderTest testConcurrentSchemaBuilding
INFO: 
{
    "batchOperations": [
    ],
    "directiveTypes": [
    ],
    "enums": {
        "ShirtSize": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
            "name": "ShirtSize",
            "type": "ENUM",
            "values": [
                {
                    "value": "HULK"
                },
                {
                    "value": "L"
                },
                {
                    "value": "M"
                },
                {
                    "value": "S"
                },
                {
                    "value": "XL"
                },
                {
                    "value": "XXL"
                }
            ]
        }
    },
    "errors": {
    },
    "groupedMutations": {
    },
    "groupedQueries": {
    },
    "groupedSubscriptions": {
    },
    "inputs": {
        "SuperHeroInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "name": "SuperHeroInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "bankBalance": {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "setBankBalance",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "bankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "beenThere": {
                    "methodName": "setBeenThere",
                    "name": "beenThere",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                },
                "dateOfBirth": {
                    "description": "dd MMMM yyyy",
                    "methodName": "setBirthday",
                    "name": "dateOfBirth",
                    "notNull": false,
                    "propertyName": "birthday",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    }
                },
                "colorOfCostume": {
                    "methodName": "setCostumeColor",
                    "name": "colorOfCostume",
                    "notNull": false,
                    "propertyName": "costumeColor",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateOfLastCheckin": {
                    "description": "MM/dd/yyyy",
                    "methodName": "setDateOfLastCheckin",
                    "name": "dateOfLastCheckin",
                    "notNull": false,
                    "propertyName": "dateOfLastCheckin",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "equipment": {
                    "methodName": "setEquipment",
                    "name": "equipment",
                    "notNull": false,
                    "propertyName": "equipment",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "ItemInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "favouriteDrinkSize": {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "setFavouriteDrinkSize",
                    "name": "favouriteDrinkSize",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "idNumber": {
                    "description": "ID-########",
                    "methodName": "setIdNumber",
                    "name": "idNumber",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-########",
                        "jsonB": true,
                        "type": "NUMBER"
                    }
                },
                "calendarEntries": {
                    "description": "dd/MM/yy",
                    "methodName": "setImportantDates",
                    "name": "calendarEntries",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd/MM/yy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "kidsAges": {
                    "description": "0 'years old'",
                    "methodName": "setKidsAges",
                    "name": "kidsAges",
                    "notNull": false,
                    "propertyName": "kidsAges",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "0 'years old'",
                        "jsonB": false,
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "lastKnownCoordinates": {
                    "methodName": "setLastKnownCoordinates",
                    "name": "lastKnownCoordinates",
                    "notNull": false,
                    "propertyName": "lastKnownCoordinates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "description": "Super hero name/nickname",
                    "methodName": "setName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "netWorth": {
                    "description": "¤ 000.00 en-US",
                    "methodName": "setNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "netWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "patrolStartTime": {
                    "description": "HH:mm",
                    "methodName": "setPatrolStartTime",
                    "name": "patrolStartTime",
                    "notNull": false,
                    "propertyName": "patrolStartTime",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "primaryLocation": {
                    "methodName": "setPrimaryLocation",
                    "name": "primaryLocation",
                    "notNull": false,
                    "propertyName": "primaryLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "realName": {
                    "methodName": "setRealName",
                    "name": "realName",
                    "notNull": false,
                    "propertyName": "realName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "tshirtSize": {
                    "methodName": "setSizeOfTShirt",
                    "name": "tshirtSize",
                    "notNull": false,
                    "propertyName": "sizeOfTShirt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "name": "ShirtSize",
                        "type": "ENUM"
                    }
                },
                "superPowers": {
                    "description": "Powers that make this hero super",
                    "methodName": "setSuperPowers",
                    "name": "superPowers",
                    "notNull": false,
                    "propertyName": "superPowers",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "teamAffiliations": {
                    "methodName": "setTeamAffiliations",
                    "name": "teamAffiliations",
                    "notNull": false,
                    "propertyName": "teamAffiliations",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "timeOfLastBattle": {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "setTimeOfLastBattle",
                    "name": "timeOfLastBattle",
                    "notNull": false,
                    "propertyName": "timeOfLastBattle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "track": {
                    "methodName": "setTrack",
                    "name": "track",
                    "notNull": false,
                    "propertyName": "track",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                }
            }
        },
        "TeamInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "name": "TeamInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "dailyStandupMeeting": {
                    "description": "HH:mm 'offset' Z en-ZA",
                    "methodName": "setDailyStandupMeeting",
                    "name": "dailyStandupMeeting",
                    "notNull": false,
                    "propertyName": "dailyStandupMeeting",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm 'offset' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "members": {
                    "methodName": "setMembers",
                    "name": "members",
                    "notNull": false,
                    "propertyName": "members",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "methodName": "setName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "rivalTeam": {
                    "methodName": "setRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    }
                }
            }
        },
        "ItemInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "name": "ItemInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "description": "Something of use to a super hero",
            "fields": {
                "canWield": {
                    "methodName": "setCanWield",
                    "name": "canWield",
                    "notNull": false,
                    "propertyName": "canWield",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Collection",
                        "wrapperType": "COLLECTION"
                    }
                },
                "dateCreated": {
                    "description": "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA",
                    "methodName": "setDateCreated",
                    "name": "dateCreated",
                    "notNull": false,
                    "propertyName": "dateCreated",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.ZonedDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy 'at' HH:mm 'in' VV",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "dateLastUsed": {
                    "description": "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA",
                    "methodName": "setDateLastUsed",
                    "name": "dateLastUsed",
                    "notNull": false,
                    "propertyName": "dateLastUsed",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy 'at' HH:mm 'in zone' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "description": {
                    "defaultValue": "An unidentified item",
                    "methodName": "setDescription",
                    "name": "description",
                    "notNull": false,
                    "propertyName": "description",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "height": {
                    "methodName": "setHeight",
                    "name": "height",
                    "notNull": true,
                    "propertyName": "height",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "methodName": "setId",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "name": {
                    "methodName": "setName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "powerLevel": {
                    "methodName": "setPowerLevel",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "powerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "supernatural": {
                    "defaultValue": "false",
                    "methodName": "setSupernatural",
                    "name": "supernatural",
                    "notNull": false,
                    "propertyName": "supernatural",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "weight": {
                    "methodName": "setWeight",
                    "name": "weight",
                    "notNull": true,
                    "propertyName": "weight",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                }
            }
        }
    },
    "interfaces": {
        "Character": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
            "name": "Character",
            "type": "TYPE",
            "batchOperations": {
            },
            "description": "Basically any sentient being with a name",
            "fields": {
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    },
    "mutations": [
        {
            "description": "Check in a superhero",
            "methodName": "checkIn",
            "name": "checkIn",
            "notNull": false,
            "propertyName": "checkIn",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "checkIn",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "checkIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "checkIn",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "checkIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localDate",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (Long Lat) using an array",
            "methodName": "logLocationLongLatWithArray",
            "name": "logLocationLongLatWithArray",
            "notNull": false,
            "propertyName": "logLocationLongLatWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationLongLatWithArray",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationLongLatWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "logLocationLongLatWithArray",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationLongLatWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.math.BigDecimal;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's bank account",
            "methodName": "updateBankBalance",
            "name": "updateBankBalance",
            "notNull": false,
            "propertyName": "updateBankBalance",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateBankBalance",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateBankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "updateBankBalance",
                    "name": "bankBalance",
                    "notNull": true,
                    "propertyName": "updateBankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "bankBalance",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's bank account in US Dollar",
            "methodName": "updateBankBalanceInUS",
            "name": "updateBankBalanceInUS",
            "notNull": false,
            "propertyName": "updateBankBalanceInUS",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateBankBalanceInUS",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateBankBalanceInUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "updateBankBalanceInUS",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "updateBankBalanceInUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "bankBalance",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the ID Number for a hero",
            "methodName": "idNumber",
            "name": "idNumber",
            "notNull": false,
            "propertyName": "idNumber",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "idNumber",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "idNumber",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "idNumber",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHero",
            "name": "createNewHero",
            "notNull": false,
            "propertyName": "createNewHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "createNewHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "createNewHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "newHero",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes a hero... permanently...",
            "methodName": "removeHero",
            "name": "removeHero",
            "notNull": false,
            "propertyName": "removeHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "removeHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the time a hero started patrolling",
            "methodName": "startPatrolling",
            "name": "startPatrolling",
            "notNull": false,
            "propertyName": "startPatrolling",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "startPatrolling",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "startPatrolling",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "startPatrolling",
                    "name": "time",
                    "notNull": false,
                    "propertyName": "startPatrolling",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the ID Number for a hero",
            "methodName": "idNumberWithCorrectFormat",
            "name": "idNumberWithCorrectFormat",
            "notNull": false,
            "propertyName": "idNumberWithCorrectFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "idNumberWithCorrectFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "idNumberWithCorrectFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ID-00000000",
                    "methodName": "idNumberWithCorrectFormat",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "idNumberWithCorrectFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-00000000",
                        "jsonB": true,
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "idNumber",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last few places the hero was seen",
            "methodName": "trackHero",
            "name": "trackHero",
            "notNull": false,
            "propertyName": "trackHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "trackHero",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "trackHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "trackHero",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "trackHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHeroesWithArray",
            "name": "createNewHeroesWithArray",
            "notNull": false,
            "propertyName": "createNewHeroesWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[Lorg.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero;",
                "wrapperType": "ARRAY"
            },
            "arguments": [
                {
                    "methodName": "createNewHeroesWithArray",
                    "name": "heroes",
                    "notNull": false,
                    "propertyName": "createNewHeroesWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Lorg.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "newHeroes",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set all the important dates (US format) for a certain hero",
            "methodName": "importantDatesUS",
            "name": "importantDatesUS",
            "notNull": false,
            "propertyName": "importantDatesUS",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "importantDatesUS",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "importantDatesUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "MM/dd/yyyy",
                    "methodName": "importantDatesUS",
                    "name": "dates",
                    "notNull": false,
                    "propertyName": "importantDatesUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "localDates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (using an array)",
            "methodName": "logLocationWithArray",
            "name": "logLocationWithArray",
            "notNull": false,
            "propertyName": "logLocationWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationWithArray",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "logLocationWithArray",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.math.BigDecimal;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Start a battle",
            "methodName": "battleWithCorrectDateFormat",
            "name": "battleWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "battleWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "battleWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "battleWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "battleWithCorrectDateFormat",
                    "name": "dateTime",
                    "notNull": false,
                    "propertyName": "battleWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localDateTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the time a hero started patrolling (using formatted time)",
            "methodName": "startPatrollingWithCorrectDateFormat",
            "name": "startPatrollingWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "startPatrollingWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "startPatrollingWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "startPatrollingWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "HH:mm",
                    "methodName": "startPatrollingWithCorrectDateFormat",
                    "name": "time",
                    "notNull": false,
                    "propertyName": "startPatrollingWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "removeTeam",
            "name": "removeTeam",
            "notNull": false,
            "propertyName": "removeTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeTeam",
                    "name": "teamName",
                    "notNull": false,
                    "propertyName": "removeTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "All the places this hero has been",
            "methodName": "beenThere",
            "name": "beenThere",
            "notNull": false,
            "propertyName": "beenThere",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "beenThere",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "beenThere",
                    "name": "places",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "places",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen",
            "methodName": "logLocation",
            "name": "logLocation",
            "notNull": false,
            "propertyName": "logLocation",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocation",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "logLocation",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.LinkedList",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewTeam",
            "name": "createNewTeam",
            "notNull": false,
            "propertyName": "createNewTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "createNewTeam",
                    "name": "newTeam",
                    "notNull": false,
                    "propertyName": "createNewTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "newTeam",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update an item's powerLevel",
            "methodName": "updateItemPowerLevel",
            "name": "updateItemPowerLevel",
            "notNull": false,
            "propertyName": "updateItemPowerLevel",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateItemPowerLevel",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                },
                {
                    "defaultValue": "5",
                    "methodName": "updateItemPowerLevel",
                    "name": "powerLevel",
                    "notNull": false,
                    "propertyName": "updateItemPowerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "newLevel",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's back account in USD",
            "methodName": "updateNetWorthInUSD",
            "name": "updateNetWorthInUSD",
            "notNull": false,
            "propertyName": "updateNetWorthInUSD",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateNetWorthInUSD",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateNetWorthInUSD",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "¤ 000.00 en-US",
                    "methodName": "updateNetWorthInUSD",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "updateNetWorthInUSD",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "netWorth",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update an item's powerLevel in percentage",
            "methodName": "updateItemPowerLevelPercentage",
            "name": "updateItemPowerLevelPercentage",
            "notNull": false,
            "propertyName": "updateItemPowerLevelPercentage",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateItemPowerLevelPercentage",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevelPercentage",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                },
                {
                    "description": "##'%'",
                    "methodName": "updateItemPowerLevelPercentage",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevelPercentage",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "##'%'",
                        "jsonB": true,
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "newLevel",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Check in a superhero",
            "methodName": "checkInWithCorrectDateFormat",
            "name": "checkInWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "checkInWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "checkInWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "checkInWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "MM/dd/yyyy",
                    "methodName": "checkInWithCorrectDateFormat",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "checkInWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localDate",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes a hero to the specified team and returns the updated team.",
            "methodName": "removeHeroFromTeam",
            "name": "removeHeroFromTeam",
            "notNull": false,
            "propertyName": "removeHeroFromTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeHeroFromTeam",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeHeroFromTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "removeHeroFromTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "removeHeroFromTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Adds a hero to the specified team and returns the updated team.",
            "methodName": "addHeroToTeam",
            "name": "addHeroToTeam",
            "notNull": false,
            "propertyName": "addHeroToTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "addHeroToTeam",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "addHeroToTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "addHeroToTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "addHeroToTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHeroes",
            "name": "createNewHeroes",
            "notNull": false,
            "propertyName": "createNewHeroes",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "createNewHeroes",
                    "name": "heroes",
                    "notNull": false,
                    "propertyName": "createNewHeroes",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "newHeroes",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Gives a hero new equipment",
            "methodName": "provisionHero",
            "name": "provisionHero",
            "notNull": false,
            "propertyName": "provisionHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "provisionHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "provisionHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "defaultValue": "{   \"id\": 1000,   \"name\": \"Cape\",   \"powerLevel\": 3,   \"height\": 1.2,   \"weight\": 0.3,   \"supernatural\": false,   \"dateCreated\": \"19 February 1900 at 12:00 in Africa/Johannesburg\",   \"dateLastUsed\": \"29 Jan 2020 at 09:45 in zone +0200\"}",
                    "methodName": "provisionHero",
                    "name": "item",
                    "notNull": false,
                    "propertyName": "provisionHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "ItemInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "item",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last few places the hero was seen (Long Lat)",
            "methodName": "trackHeroLongLat",
            "name": "trackHeroLongLat",
            "notNull": false,
            "propertyName": "trackHeroLongLat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "trackHeroLongLat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "trackHeroLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "trackHeroLongLat",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "trackHeroLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": false,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes equipment from a hero",
            "methodName": "removeItemFromHero",
            "name": "removeItemFromHero",
            "notNull": false,
            "propertyName": "removeItemFromHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeItemFromHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeItemFromHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "removeItemFromHero",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "removeItemFromHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Start a battle",
            "methodName": "battle",
            "name": "battle",
            "notNull": false,
            "propertyName": "battle",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "battle",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "battle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "battle",
                    "name": "dateTime",
                    "notNull": false,
                    "propertyName": "battle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localDateTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set all the important dates for a certain hero",
            "methodName": "importantDates",
            "name": "importantDates",
            "notNull": false,
            "propertyName": "importantDates",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "importantDates",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "importantDates",
                    "name": "dates",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "localDates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's net worth",
            "methodName": "updateNetWorth",
            "name": "updateNetWorth",
            "notNull": false,
            "propertyName": "updateNetWorth",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateNetWorth",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateNetWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "updateNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "updateNetWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "netWorth",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (Long Lat)",
            "methodName": "logLocationLongLat",
            "name": "logLocationLongLat",
            "notNull": false,
            "propertyName": "logLocationLongLat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationLongLat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "logLocationLongLat",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's favourite drink size",
            "methodName": "favouriteDrinkSize",
            "name": "favouriteDrinkSize",
            "notNull": false,
            "propertyName": "favouriteDrinkSize",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "favouriteDrinkSize",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "favouriteDrinkSize",
                    "name": "size",
                    "notNull": true,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "size",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "setRivalTeam",
            "name": "setRivalTeam",
            "notNull": false,
            "propertyName": "setRivalTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "setRivalTeam",
                    "name": "teamName",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                },
                {
                    "methodName": "setRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "rivalTeam",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's favourite drink size in milliliters",
            "methodName": "favouriteDrinkSizeInML",
            "name": "favouriteDrinkSizeInML",
            "notNull": false,
            "propertyName": "favouriteDrinkSizeInML",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "favouriteDrinkSizeInML",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSizeInML",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "favouriteDrinkSizeInML",
                    "name": "size",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSizeInML",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": false,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "size",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        }
    ],
    "queries": [
        {
            "methodName": "getCurrentLocation",
            "name": "currentLocation",
            "notNull": false,
            "propertyName": "currentLocation",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "methodName": "getCurrentLocation",
                    "name": "superHero",
                    "notNull": false,
                    "propertyName": "getCurrentLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "hero",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesInTeam",
            "name": "allHeroesInTeam",
            "notNull": false,
            "propertyName": "allHeroesInTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "allHeroesInTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "allHeroesInTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getItemById",
            "name": "itemById",
            "notNull": false,
            "propertyName": "itemById",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "getItemById",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "getItemById",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "id",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the blacklist of transitive Checked Exceptions",
            "methodName": "exportToCSVFile",
            "name": "exportToCSVFile",
            "notNull": false,
            "propertyName": "exportToCSVFile",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "exportToCSVFile",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "exportToCSVFile",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getTeam",
            "name": "team",
            "notNull": false,
            "propertyName": "team",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "getTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "getTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the whitelist for transitive Runtime Exceptions",
            "methodName": "findFlaw",
            "name": "findFlaw",
            "notNull": false,
            "propertyName": "findFlaw",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "findFlaw",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "findFlaw",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithSpecificError",
            "name": "allHeroesWithSpecificError",
            "notNull": false,
            "propertyName": "allHeroesWithSpecificError",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the whitelist for Runtime Exceptions",
            "methodName": "weakness",
            "name": "weakness",
            "notNull": false,
            "propertyName": "weakness",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "weakness",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "weakness",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "superHero",
            "name": "superHero",
            "notNull": false,
            "propertyName": "superHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "superHero",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "superHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing Errors, as in Java Error",
            "methodName": "wreakHavoc",
            "name": "wreakHavoc",
            "notNull": false,
            "propertyName": "wreakHavoc",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "wreakHavoc",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "wreakHavoc",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "List all super heroes in the database",
            "methodName": "allHeroes",
            "name": "allHeroes",
            "notNull": false,
            "propertyName": "allHeroes",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithPower",
            "name": "allHeroesWithPower",
            "notNull": false,
            "propertyName": "allHeroesWithPower",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "allHeroesWithPower",
                    "name": "power",
                    "notNull": false,
                    "propertyName": "allHeroesWithPower",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "power",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "character",
            "name": "character",
            "notNull": false,
            "propertyName": "character",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                "name": "Character",
                "type": "INTERFACE"
            },
            "arguments": [
                {
                    "methodName": "character",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "character",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the blacklist of Checked Exceptions",
            "methodName": "exportToFile",
            "name": "exportToFile",
            "notNull": false,
            "propertyName": "exportToFile",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "exportToFile",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "exportToFile",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesIn",
            "name": "allHeroesIn",
            "notNull": false,
            "propertyName": "allHeroesIn",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "defaultValue": "New York, NY",
                    "methodName": "allHeroesIn",
                    "name": "city",
                    "notNull": false,
                    "propertyName": "allHeroesIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "city",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the default blacklist for Runtime Exceptions",
            "methodName": "villian",
            "name": "villian",
            "notNull": false,
            "propertyName": "villian",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "villian",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "villian",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allTeams",
            "name": "allTeams",
            "notNull": false,
            "propertyName": "allTeams",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithError",
            "name": "allHeroesWithError",
            "notNull": false,
            "propertyName": "allHeroesWithError",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        }
    ],
    "subscriptions": [
    ],
    "types": {
        "SuperHero": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "name": "SuperHero",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "bankBalance": {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "getBankBalance",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "bankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "beenThere": {
                    "methodName": "getBeenThere",
                    "name": "beenThere",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                },
                "birthday": {
                    "description": "dd MMMM yyyy",
                    "methodName": "getBirthday",
                    "name": "birthday",
                    "notNull": false,
                    "propertyName": "birthday",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    }
                },
                "colorOfCostume": {
                    "methodName": "getCostumeColor",
                    "name": "colorOfCostume",
                    "notNull": false,
                    "propertyName": "costumeColor",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateOfLastCheckin": {
                    "description": "MM/dd/yyyy",
                    "methodName": "getDateOfLastCheckin",
                    "name": "dateOfLastCheckin",
                    "notNull": false,
                    "propertyName": "dateOfLastCheckin",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "equipment": {
                    "methodName": "getEquipment",
                    "name": "equipment",
                    "notNull": false,
                    "propertyName": "equipment",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "Item",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "favouriteDrinkSize": {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "getFavouriteDrinkSize",
                    "name": "favouriteDrinkSize",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "idNumber": {
                    "description": "ID-########",
                    "methodName": "getIdNumber",
                    "name": "idNumber",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-########",
                        "jsonB": true,
                        "type": "NUMBER"
                    }
                },
                "importantDates": {
                    "description": "dd/MM",
                    "methodName": "getImportantDates",
                    "name": "importantDates",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd/MM",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "agesOfKids": {
                    "description": "0 'years'",
                    "methodName": "getKidsAges",
                    "name": "agesOfKids",
                    "notNull": false,
                    "propertyName": "kidsAges",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "0 'years'",
                        "jsonB": false,
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "lastKnownCoordinates": {
                    "methodName": "getLastKnownCoordinates",
                    "name": "lastKnownCoordinates",
                    "notNull": false,
                    "propertyName": "lastKnownCoordinates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "description": "Super hero name/nickname",
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "knownEnemies": {
                    "methodName": "getNamesOfKnownEnemies",
                    "name": "knownEnemies",
                    "notNull": false,
                    "propertyName": "namesOfKnownEnemies",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "netWorth": {
                    "description": "¤ 000.00 en-US",
                    "methodName": "getNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "netWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "patrolStartTime": {
                    "description": "HH:mm",
                    "methodName": "getPatrolStartTime",
                    "name": "patrolStartTime",
                    "notNull": false,
                    "propertyName": "patrolStartTime",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "primaryLocation": {
                    "description": "Location where you are most likely to find this hero",
                    "methodName": "getPrimaryLocation",
                    "name": "primaryLocation",
                    "notNull": false,
                    "propertyName": "primaryLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "realName": {
                    "methodName": "getRealName",
                    "name": "realName",
                    "notNull": false,
                    "propertyName": "realName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "sizeOfTShirt": {
                    "methodName": "getSizeOfTShirt",
                    "name": "sizeOfTShirt",
                    "notNull": false,
                    "propertyName": "sizeOfTShirt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "name": "ShirtSize",
                        "type": "ENUM"
                    }
                },
                "superPowers": {
                    "methodName": "getSuperPowers",
                    "name": "superPowers",
                    "notNull": false,
                    "propertyName": "superPowers",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "teamAffiliations": {
                    "methodName": "getTeamAffiliations",
                    "name": "teamAffiliations",
                    "notNull": false,
                    "propertyName": "teamAffiliations",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "Team",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "timeOfLastBattle": {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "getTimeOfLastBattle",
                    "name": "timeOfLastBattle",
                    "notNull": false,
                    "propertyName": "timeOfLastBattle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "track": {
                    "methodName": "getTrack",
                    "name": "track",
                    "notNull": false,
                    "propertyName": "track",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "name": "Character",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
                "secretToken": {
                    "methodName": "generateSecretToken",
                    "name": "secretToken",
                    "notNull": false,
                    "propertyName": "generateSecretToken",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
                        "name": "TopSecretToken",
                        "type": "TYPE"
                    },
                    "arguments": [
                        {
                            "methodName": "generateSecretToken",
                            "name": "hero",
                            "notNull": false,
                            "propertyName": "generateSecretToken",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "name": "SuperHero",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "hero",
                            "sourceArgument": true
                        },
                        {
                            "defaultValue": "true",
                            "methodName": "generateSecretToken",
                            "name": "maskFirstPart",
                            "notNull": false,
                            "propertyName": "generateSecretToken",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "boolean",
                                "graphQlClassName": "boolean",
                                "name": "Boolean",
                                "type": "SCALAR"
                            },
                            "methodArgumentName": "maskFirstPart",
                            "sourceArgument": false
                        }
                    ],
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                },
                "currentLocation": {
                    "methodName": "getCurrentLocation",
                    "name": "currentLocation",
                    "notNull": false,
                    "propertyName": "currentLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "arguments": [
                        {
                            "methodName": "getCurrentLocation",
                            "name": "superHero",
                            "notNull": false,
                            "propertyName": "getCurrentLocation",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "name": "SuperHero",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "hero",
                            "sourceArgument": true
                        }
                    ],
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                }
            }
        },
        "Item": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "name": "Item",
            "type": "TYPE",
            "batchOperations": {
            },
            "description": "Something of use to a super hero",
            "fields": {
                "dateCreated": {
                    "description": "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA",
                    "methodName": "getDateCreated",
                    "name": "dateCreated",
                    "notNull": false,
                    "propertyName": "dateCreated",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.ZonedDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy 'at' HH:mm 'in' VV",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "dateLastUsed": {
                    "description": "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA",
                    "methodName": "getDateLastUsed",
                    "name": "dateLastUsed",
                    "notNull": false,
                    "propertyName": "dateLastUsed",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy 'at' HH:mm 'in zone' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "description": {
                    "methodName": "getDescription",
                    "name": "description",
                    "notNull": false,
                    "propertyName": "description",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "height": {
                    "methodName": "getHeight",
                    "name": "height",
                    "notNull": true,
                    "propertyName": "height",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "methodName": "getId",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "powerLevel": {
                    "methodName": "getPowerLevel",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "powerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "weight": {
                    "methodName": "getWeight",
                    "name": "weight",
                    "notNull": true,
                    "propertyName": "weight",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "artificialIntelligenceRating": {
                    "methodName": "isArtificialIntelligenceRating",
                    "name": "artificialIntelligenceRating",
                    "notNull": true,
                    "propertyName": "artificialIntelligenceRating",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "supernatural": {
                    "defaultValue": "false",
                    "methodName": "isSupernatural",
                    "name": "supernatural",
                    "notNull": false,
                    "propertyName": "supernatural",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "TopSecretToken": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
            "name": "TopSecretToken",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "value": {
                    "methodName": "getValue",
                    "name": "value",
                    "notNull": false,
                    "propertyName": "value",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "Sidekick": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Sidekick",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Sidekick",
            "name": "Sidekick",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "superHeroSidekicked": {
                    "methodName": "getSuperHeroSidekicked",
                    "name": "superHeroSidekicked",
                    "notNull": false,
                    "propertyName": "superHeroSidekicked",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "name": "Character",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "Team": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "name": "Team",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "dailyStandupMeeting": {
                    "description": "HH:mm 'offset' Z en-ZA",
                    "methodName": "getDailyStandupMeeting",
                    "name": "dailyStandupMeeting",
                    "notNull": false,
                    "propertyName": "dailyStandupMeeting",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm 'offset' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "members": {
                    "methodName": "getMembers",
                    "name": "members",
                    "notNull": false,
                    "propertyName": "members",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "rivalTeam": {
                    "methodName": "getRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "Team",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    }
}
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.index.SchemaBuilderTest testConcurrentSchemaBuilding
INFO: 
{
    "batchOperations": [
        {
            "methodName": "getTimestamp",
            "name": "timestamp",
            "notNull": false,
            "propertyName": "timestamp",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.List",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "getTimestamp",
                    "name": "movies",
                    "notNull": false,
                    "propertyName": "getTimestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "movies",
                    "sourceArgument": true
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": true,
            "sourceFieldOn": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            }
        }
    ],
    "directiveTypes": [
        {
            "argumentNames": [
                "value"
            ],
            "className": "io.smallrye.graphql.index.app.SomeDirective",
            "locations": [
                "INTERFACE",
                "FIELD",
                "OBJECT"
            ],
            "name": "someDirective"
        }
    ],
    "enums": {
    },
    "errors": {
    },
    "groupedMutations": {
    },
    "groupedQueries": [
        {
            "key": {
                "name": "Books"
            },
            "value": [
                {
                    "methodName": "getAllBooks",
                    "name": "allBooks",
                    "notNull": false,
                    "propertyName": "allBooks",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Book",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Book",
                        "name": "Book",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "arguments": [
                    ],
                    "className": "io.smallrye.graphql.index.app.BookGraphQLApi",
                    "operationType": "QUERY",
                    "sourceField": false
                }
            ]
        }
    ],
    "groupedSubscriptions": {
    },
    "inputs": {
        "DataInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.MappingResource$Data",
            "graphQlClassName": "io.smallrye.graphql.index.app.MappingResource$Data",
            "name": "DataInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "name": {
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "currency": {
                    "adapter": {
                        "adapterClass": "io.smallrye.graphql.index.app.CurrencyAdapter",
                        "adapterInterface": "javax.json.bind.adapter.JsonbAdapter",
                        "fromClass": "java.util.Currency",
                        "fromMethod": "adaptFromJson",
                        "jsonB": true,
                        "toClass": "javax.json.JsonObject",
                        "toMethod": "adaptToJson"
                    },
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "currency",
                    "notNull": false,
                    "propertyName": "currency",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "javax.json.JsonObject",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "email": {
                    "mapping": {
                        "deserializeMethod": "<init>",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "email",
                    "notNull": false,
                    "propertyName": "email",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Email",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Email",
                        "name": "EmailInput",
                        "type": "INPUT"
                    }
                }
            }
        },
        "MovieInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Movie",
            "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
            "name": "MovieInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "director": {
                    "methodName": "setDirector",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "director",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "PersonInput",
                        "type": "INPUT"
                    }
                },
                "idLongThatShouldChangeToInt": {
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.Integer",
                            "graphQlClassName": "java.lang.Integer",
                            "name": "Int",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "setIdLongThatShouldChangeToInt",
                    "name": "idLongThatShouldChangeToInt",
                    "notNull": false,
                    "propertyName": "idLongThatShouldChangeToInt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "releaseDate": {
                    "description": "ISO-8601",
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "field"
                                ]
                            }
                        }
                    ],
                    "methodName": "setReleaseDate",
                    "name": "releaseDate",
                    "notNull": false,
                    "propertyName": "releaseDate",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "title": {
                    "methodName": "setTitle",
                    "name": "title",
                    "notNull": false,
                    "propertyName": "title",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "topBilledCast": {
                    "methodName": "setTopBilledCast",
                    "name": "topBilledCast",
                    "notNull": false,
                    "propertyName": "topBilledCast",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "PersonInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                }
            }
        },
        "PersonInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Person",
            "graphQlClassName": "io.smallrye.graphql.index.app.Person",
            "name": "PersonInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "email": {
                    "mapping": {
                        "deserializeMethod": "<init>",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "setEmail",
                    "name": "email",
                    "notNull": false,
                    "propertyName": "email",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Email",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Email",
                        "name": "EmailInput",
                        "type": "INPUT"
                    }
                },
                "firstName": {
                    "methodName": "setFirstName",
                    "name": "firstName",
                    "notNull": false,
                    "propertyName": "firstName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "lastName": {
                    "methodName": "setLastName",
                    "name": "lastName",
                    "notNull": false,
                    "propertyName": "lastName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "phone": {
                    "mapping": {
                        "deserializeMethod": "fromString",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "setPhone",
                    "name": "phone",
                    "notNull": false,
                    "propertyName": "phone",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Phone",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Phone",
                        "name": "PhoneInput",
                        "type": "INPUT"
                    }
                },
                "twitterHandle": {
                    "methodName": "setTwitterHandle",
                    "name": "twitterHandle",
                    "notNull": false,
                    "propertyName": "twitterHandle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.TwitterHandle",
                        "graphQlClassName": "io.smallrye.graphql.index.app.TwitterHandle",
                        "mapping": {
                            "deserializeMethod": "<init>",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "java.lang.String",
                                "graphQlClassName": "java.lang.String",
                                "name": "String",
                                "type": "SCALAR"
                            },
                            "serializeMethod": "toString"
                        },
                        "name": "TwitterHandleInput",
                        "type": "INPUT"
                    }
                },
                "website": {
                    "mapping": {
                        "deserializeMethod": "setValue",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "setWebsite",
                    "name": "website",
                    "notNull": false,
                    "propertyName": "website",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Website",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Website",
                        "name": "WebsiteInput",
                        "type": "INPUT"
                    }
                }
            }
        }
    },
    "interfaces": {
    },
    "mutations": [
        {
            "methodName": "newMovie",
            "name": "newMovie",
            "notNull": false,
            "propertyName": "newMovie",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "newMovie",
                    "name": "movie",
                    "notNull": false,
                    "propertyName": "newMovie",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "MovieInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "movie",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Add new Data",
            "methodName": "createData",
            "name": "createData",
            "notNull": false,
            "propertyName": "createData",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.MappingResource$Data",
                "graphQlClassName": "io.smallrye.graphql.index.app.MappingResource$Data",
                "name": "Data",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "createData",
                    "name": "data",
                    "notNull": false,
                    "propertyName": "createData",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.MappingResource$Data",
                        "graphQlClassName": "io.smallrye.graphql.index.app.MappingResource$Data",
                        "name": "DataInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "data",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MappingResource",
            "operationType": "MUTATION",
            "sourceField": false
        }
    ],
    "queries": [
        {
            "methodName": "getData",
            "name": "data",
            "notNull": false,
            "propertyName": "data",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.MappingResource$Data",
                "graphQlClassName": "io.smallrye.graphql.index.app.MappingResource$Data",
                "name": "Data",
                "type": "TYPE"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.MappingResource",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "classWithEmptyField",
            "name": "classWithEmptyField",
            "notNull": false,
            "propertyName": "classWithEmptyField",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.ClassWithOptionalField",
                "graphQlClassName": "io.smallrye.graphql.index.app.ClassWithOptionalField",
                "name": "ClassWithOptionalField",
                "type": "TYPE"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "optionalStringParam",
            "name": "optionalStringParam",
            "notNull": false,
            "propertyName": "optionalStringParam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "methodName": "optionalStringParam",
                    "name": "echo",
                    "notNull": false,
                    "propertyName": "optionalStringParam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    },
                    "methodArgumentName": "echo",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "classWithOptionalField",
            "name": "classWithOptionalField",
            "notNull": false,
            "propertyName": "classWithOptionalField",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.ClassWithOptionalField",
                "graphQlClassName": "io.smallrye.graphql.index.app.ClassWithOptionalField",
                "name": "ClassWithOptionalField",
                "type": "TYPE"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "movies",
            "name": "movies",
            "notNull": false,
            "propertyName": "movies",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "optionalString",
            "name": "optionalString",
            "notNull": false,
            "propertyName": "optionalString",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": false,
                "collection": false,
                "collectionOrArray": false,
                "notEmpty": false,
                "optional": true,
                "unknown": false,
                "wrapperClassName": "java.util.Optional",
                "wrapperType": "OPTIONAL"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "moviesDirectedBy",
            "name": "moviesDirectedBy",
            "notNull": false,
            "propertyName": "moviesDirectedBy",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "moviesDirectedBy",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "moviesDirectedBy",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "PersonInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "director",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "arrayDefault",
            "name": "arrayDefault",
            "notNull": false,
            "propertyName": "arrayDefault",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[Ljava.lang.String;",
                "wrapperType": "ARRAY"
            },
            "arguments": [
                {
                    "defaultValue": "[\"creature\",\"comfort\"]",
                    "methodName": "arrayDefault",
                    "name": "values",
                    "notNull": false,
                    "propertyName": "arrayDefault",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.lang.String;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "values",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "emptyString",
            "name": "emptyString",
            "notNull": false,
            "propertyName": "emptyString",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": false,
                "collection": false,
                "collectionOrArray": false,
                "notEmpty": false,
                "optional": true,
                "unknown": false,
                "wrapperClassName": "java.util.Optional",
                "wrapperType": "OPTIONAL"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "emptyInt",
            "name": "emptyInt",
            "notNull": false,
            "propertyName": "emptyInt",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.util.OptionalInt",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "moviesReleasedAfter",
            "name": "moviesReleasedAfter",
            "notNull": false,
            "propertyName": "moviesReleasedAfter",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "description": "ISO-8601",
                    "methodName": "moviesReleasedAfter",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "moviesReleasedAfter",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "d",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "optionalDateParam",
            "name": "optionalDateParam",
            "notNull": false,
            "propertyName": "optionalDateParam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDate",
                "graphQlClassName": "java.lang.String",
                "name": "Date",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "description": "dd MMM yyyy",
                    "methodName": "optionalDateParam",
                    "name": "echo",
                    "notNull": false,
                    "propertyName": "optionalDateParam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    },
                    "methodArgumentName": "echo",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "optionalInt",
            "name": "optionalInt",
            "notNull": false,
            "propertyName": "optionalInt",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.util.OptionalInt",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.OptionalTestingApi",
            "operationType": "QUERY",
            "sourceField": false
        }
    ],
    "subscriptions": [
    ],
    "types": {
        "Movie": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Movie",
            "directiveInstances": [
                {
                    "type": {
                        "argumentNames": [
                            "value"
                        ],
                        "className": "io.smallrye.graphql.index.app.SomeDirective",
                        "locations": [
                            "INTERFACE",
                            "FIELD",
                            "OBJECT"
                        ],
                        "name": "someDirective"
                    },
                    "values": {
                        "value": [
                            "foo",
                            "bar"
                        ]
                    }
                }
            ],
            "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
            "name": "Movie",
            "type": "TYPE",
            "batchOperations": {
                "timestamp": {
                    "methodName": "getTimestamp",
                    "name": "timestamp",
                    "notNull": false,
                    "propertyName": "timestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "arguments": [
                        {
                            "methodName": "getTimestamp",
                            "name": "movies",
                            "notNull": false,
                            "propertyName": "getTimestamp",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "io.smallrye.graphql.index.app.Movie",
                                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                                "name": "Movie",
                                "type": "TYPE"
                            },
                            "wrapper": {
                                "array": false,
                                "collection": true,
                                "collectionOrArray": true,
                                "notEmpty": false,
                                "optional": false,
                                "unknown": false,
                                "wrapperClassName": "java.util.List",
                                "wrapperType": "COLLECTION"
                            },
                            "methodArgumentName": "movies",
                            "sourceArgument": true
                        }
                    ],
                    "className": "io.smallrye.graphql.index.app.MovieTriviaController",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    }
                }
            },
            "fields": {
                "director": {
                    "methodName": "getDirector",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "director",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "TYPE"
                    }
                },
                "idLongThatShouldChangeToInt": {
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.Integer",
                            "graphQlClassName": "java.lang.Integer",
                            "name": "Int",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "getIdLongThatShouldChangeToInt",
                    "name": "idLongThatShouldChangeToInt",
                    "notNull": false,
                    "propertyName": "idLongThatShouldChangeToInt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "releaseDate": {
                    "description": "ISO-8601",
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "field"
                                ]
                            }
                        }
                    ],
                    "methodName": "getReleaseDate",
                    "name": "releaseDate",
                    "notNull": false,
                    "propertyName": "releaseDate",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "title": {
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "getter"
                                ]
                            }
                        }
                    ],
                    "methodName": "getTitle",
                    "name": "title",
                    "notNull": false,
                    "propertyName": "title",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "topBilledCast": {
                    "methodName": "getTopBilledCast",
                    "name": "topBilledCast",
                    "notNull": false,
                    "propertyName": "topBilledCast",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
                "timestamp": {
                    "methodName": "getTimestamp",
                    "name": "timestamp",
                    "notNull": false,
                    "propertyName": "timestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "arguments": [
                        {
                            "methodName": "getTimestamp",
                            "name": "movie",
                            "notNull": false,
                            "propertyName": "getTimestamp",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "io.smallrye.graphql.index.app.Movie",
                                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                                "name": "Movie",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "movie",
                            "sourceArgument": true
                        }
                    ],
                    "className": "io.smallrye.graphql.index.app.MovieTriviaController",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    }
                }
            }
        },
        "ClassWithOptionalField": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.ClassWithOptionalField",
            "graphQlClassName": "io.smallrye.graphql.index.app.ClassWithOptionalField",
            "name": "ClassWithOptionalField",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "amount": {
                    "name": "amount",
                    "notNull": false,
                    "propertyName": "amount",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.OptionalDouble",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "maybe": {
                    "name": "maybe",
                    "notNull": false,
                    "propertyName": "maybe",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    }
                },
                "mapped": {
                    "mapping": {
                        "deserializeMethod": "<init>",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "mapped",
                    "notNull": false,
                    "propertyName": "mapped",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Mapped",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Mapped",
                        "name": "Mapped",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    }
                },
                "id": {
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.Integer",
                            "graphQlClassName": "java.lang.Integer",
                            "name": "Int",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    }
                },
                "maybeOneDay": {
                    "description": "dd MMM yyyy",
                    "name": "maybeOneDay",
                    "notNull": false,
                    "propertyName": "maybeOneDay",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": false,
                        "collectionOrArray": false,
                        "notEmpty": false,
                        "optional": true,
                        "unknown": false,
                        "wrapperClassName": "java.util.Optional",
                        "wrapperType": "OPTIONAL"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "Book": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Book",
            "graphQlClassName": "io.smallrye.graphql.index.app.Book",
            "name": "Book",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "isbn": {
                    "name": "isbn",
                    "notNull": false,
                    "propertyName": "isbn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "published": {
                    "description": "ISO-8601",
                    "name": "published",
                    "notNull": false,
                    "propertyName": "published",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "title": {
                    "name": "title",
                    "notNull": false,
                    "propertyName": "title",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "authors": {
                    "name": "authors",
                    "notNull": false,
                    "propertyName": "authors",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "Data": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.MappingResource$Data",
            "graphQlClassName": "io.smallrye.graphql.index.app.MappingResource$Data",
            "name": "Data",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "name": {
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "currency": {
                    "adapter": {
                        "adapterClass": "io.smallrye.graphql.index.app.CurrencyAdapter",
                        "adapterInterface": "javax.json.bind.adapter.JsonbAdapter",
                        "fromClass": "java.util.Currency",
                        "fromMethod": "adaptFromJson",
                        "jsonB": true,
                        "toClass": "javax.json.JsonObject",
                        "toMethod": "adaptToJson"
                    },
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "currency",
                    "notNull": false,
                    "propertyName": "currency",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "javax.json.JsonObject",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "email": {
                    "mapping": {
                        "deserializeMethod": "<init>",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "name": "email",
                    "notNull": false,
                    "propertyName": "email",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Email",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Email",
                        "name": "Email",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "Person": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Person",
            "graphQlClassName": "io.smallrye.graphql.index.app.Person",
            "name": "Person",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "email": {
                    "mapping": {
                        "deserializeMethod": "<init>",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "getEmail",
                    "name": "email",
                    "notNull": false,
                    "propertyName": "email",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Email",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Email",
                        "name": "Email",
                        "type": "TYPE"
                    }
                },
                "firstName": {
                    "methodName": "getFirstName",
                    "name": "firstName",
                    "notNull": false,
                    "propertyName": "firstName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "lastName": {
                    "methodName": "getLastName",
                    "name": "lastName",
                    "notNull": false,
                    "propertyName": "lastName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "phone": {
                    "mapping": {
                        "deserializeMethod": "fromString",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "getPhone",
                    "name": "phone",
                    "notNull": false,
                    "propertyName": "phone",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Phone",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Phone",
                        "name": "Phone",
                        "type": "TYPE"
                    }
                },
                "twitterHandle": {
                    "methodName": "getTwitterHandle",
                    "name": "twitterHandle",
                    "notNull": false,
                    "propertyName": "twitterHandle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.TwitterHandle",
                        "graphQlClassName": "io.smallrye.graphql.index.app.TwitterHandle",
                        "mapping": {
                            "deserializeMethod": "<init>",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "java.lang.String",
                                "graphQlClassName": "java.lang.String",
                                "name": "String",
                                "type": "SCALAR"
                            },
                            "serializeMethod": "toString"
                        },
                        "name": "TwitterHandle",
                        "type": "TYPE"
                    }
                },
                "website": {
                    "mapping": {
                        "deserializeMethod": "setValue",
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.String",
                            "graphQlClassName": "java.lang.String",
                            "name": "String",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "getWebsite",
                    "name": "website",
                    "notNull": false,
                    "propertyName": "website",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Website",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Website",
                        "name": "Website",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    }
}
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.creator.ReferenceCreator getNonIndexedReference
WARN: Class [io.smallrye.graphql.index.app.Person] is not indexed in Jandex. Can not scan Object Type, might not be mapped correctly. Kind = [CLASS]
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.creator.ReferenceCreator getNonIndexedReference
WARN: Class [io.smallrye.graphql.index.app.Person] is not indexed in Jandex. Can not scan Object Type, might not be mapped correctly. Kind = [CLASS]
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.creator.ReferenceCreator getNonIndexedReference
WARN: Class [io.smallrye.graphql.index.app.Person] is not indexed in Jandex. Can not scan Object Type, might not be mapped correctly. Kind = [CLASS]
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.creator.ReferenceCreator getNonIndexedReference
WARN: Class [io.smallrye.graphql.index.app.Person] is not indexed in Jandex. Can not scan Object Type, might not be mapped correctly. Kind = [CLASS]
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.schema.creator.ReferenceCreator getNonIndexedReference
WARN: Class [io.smallrye.graphql.index.app.Person] is not indexed in Jandex. Can not scan Object Type, might not be mapped correctly. Kind = [CLASS]
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.index.SchemaBuilderTest testSchemaWithDirectives
INFO: 
{
    "batchOperations": [
        {
            "methodName": "getTimestamp",
            "name": "timestamp",
            "notNull": false,
            "propertyName": "timestamp",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.List",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "getTimestamp",
                    "name": "movies",
                    "notNull": false,
                    "propertyName": "getTimestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "movies",
                    "sourceArgument": true
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": true,
            "sourceFieldOn": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            }
        }
    ],
    "directiveTypes": [
        {
            "argumentNames": [
                "value"
            ],
            "className": "io.smallrye.graphql.index.app.SomeDirective",
            "locations": [
                "INTERFACE",
                "FIELD",
                "OBJECT"
            ],
            "name": "someDirective"
        }
    ],
    "enums": {
    },
    "errors": {
    },
    "groupedMutations": {
    },
    "groupedQueries": {
    },
    "groupedSubscriptions": {
    },
    "inputs": {
        "MovieInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Movie",
            "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
            "name": "MovieInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "director": {
                    "methodName": "setDirector",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "director",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "INPUT"
                    }
                },
                "idLongThatShouldChangeToInt": {
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.Integer",
                            "graphQlClassName": "java.lang.Integer",
                            "name": "Int",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "setIdLongThatShouldChangeToInt",
                    "name": "idLongThatShouldChangeToInt",
                    "notNull": false,
                    "propertyName": "idLongThatShouldChangeToInt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "releaseDate": {
                    "description": "ISO-8601",
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "field"
                                ]
                            }
                        }
                    ],
                    "methodName": "setReleaseDate",
                    "name": "releaseDate",
                    "notNull": false,
                    "propertyName": "releaseDate",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "title": {
                    "methodName": "setTitle",
                    "name": "title",
                    "notNull": false,
                    "propertyName": "title",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "topBilledCast": {
                    "methodName": "setTopBilledCast",
                    "name": "topBilledCast",
                    "notNull": false,
                    "propertyName": "topBilledCast",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                }
            }
        }
    },
    "interfaces": {
    },
    "mutations": [
        {
            "methodName": "newMovie",
            "name": "newMovie",
            "notNull": false,
            "propertyName": "newMovie",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "newMovie",
                    "name": "movie",
                    "notNull": false,
                    "propertyName": "newMovie",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "MovieInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "movie",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "MUTATION",
            "sourceField": false
        }
    ],
    "queries": [
        {
            "methodName": "arrayDefault",
            "name": "arrayDefault",
            "notNull": false,
            "propertyName": "arrayDefault",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[Ljava.lang.String;",
                "wrapperType": "ARRAY"
            },
            "arguments": [
                {
                    "defaultValue": "[\"creature\",\"comfort\"]",
                    "methodName": "arrayDefault",
                    "name": "values",
                    "notNull": false,
                    "propertyName": "arrayDefault",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.lang.String;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "values",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "moviesDirectedBy",
            "name": "moviesDirectedBy",
            "notNull": false,
            "propertyName": "moviesDirectedBy",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "moviesDirectedBy",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "moviesDirectedBy",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "director",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "moviesReleasedAfter",
            "name": "moviesReleasedAfter",
            "notNull": false,
            "propertyName": "moviesReleasedAfter",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "description": "ISO-8601",
                    "methodName": "moviesReleasedAfter",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "moviesReleasedAfter",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "d",
                    "sourceArgument": false
                }
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "movies",
            "name": "movies",
            "notNull": false,
            "propertyName": "movies",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "io.smallrye.graphql.index.app.Movie",
                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                "name": "Movie",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Set",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "io.smallrye.graphql.index.app.MovieTriviaController",
            "operationType": "QUERY",
            "sourceField": false
        }
    ],
    "subscriptions": [
    ],
    "types": {
        "Movie": {
            "addParametrizedTypeNameExtension": false,
            "className": "io.smallrye.graphql.index.app.Movie",
            "directiveInstances": [
                {
                    "type": {
                        "argumentNames": [
                            "value"
                        ],
                        "className": "io.smallrye.graphql.index.app.SomeDirective",
                        "locations": [
                            "INTERFACE",
                            "FIELD",
                            "OBJECT"
                        ],
                        "name": "someDirective"
                    },
                    "values": {
                        "value": [
                            "foo",
                            "bar"
                        ]
                    }
                }
            ],
            "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
            "name": "Movie",
            "type": "TYPE",
            "batchOperations": {
                "timestamp": {
                    "methodName": "getTimestamp",
                    "name": "timestamp",
                    "notNull": false,
                    "propertyName": "timestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "arguments": [
                        {
                            "methodName": "getTimestamp",
                            "name": "movies",
                            "notNull": false,
                            "propertyName": "getTimestamp",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "io.smallrye.graphql.index.app.Movie",
                                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                                "name": "Movie",
                                "type": "TYPE"
                            },
                            "wrapper": {
                                "array": false,
                                "collection": true,
                                "collectionOrArray": true,
                                "notEmpty": false,
                                "optional": false,
                                "unknown": false,
                                "wrapperClassName": "java.util.List",
                                "wrapperType": "COLLECTION"
                            },
                            "methodArgumentName": "movies",
                            "sourceArgument": true
                        }
                    ],
                    "className": "io.smallrye.graphql.index.app.MovieTriviaController",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    }
                }
            },
            "fields": {
                "director": {
                    "methodName": "getDirector",
                    "name": "director",
                    "notNull": false,
                    "propertyName": "director",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "TYPE"
                    }
                },
                "idLongThatShouldChangeToInt": {
                    "mapping": {
                        "reference": {
                            "addParametrizedTypeNameExtension": false,
                            "className": "java.lang.Integer",
                            "graphQlClassName": "java.lang.Integer",
                            "name": "Int",
                            "type": "SCALAR"
                        },
                        "serializeMethod": "toString"
                    },
                    "methodName": "getIdLongThatShouldChangeToInt",
                    "name": "idLongThatShouldChangeToInt",
                    "notNull": false,
                    "propertyName": "idLongThatShouldChangeToInt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "releaseDate": {
                    "description": "ISO-8601",
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "field"
                                ]
                            }
                        }
                    ],
                    "methodName": "getReleaseDate",
                    "name": "releaseDate",
                    "notNull": false,
                    "propertyName": "releaseDate",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.Date",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "title": {
                    "directiveInstances": [
                        {
                            "type": {
                                "argumentNames": [
                                    "value"
                                ],
                                "className": "io.smallrye.graphql.index.app.SomeDirective",
                                "locations": [
                                    "INTERFACE",
                                    "FIELD",
                                    "OBJECT"
                                ],
                                "name": "someDirective"
                            },
                            "values": {
                                "value": [
                                    "getter"
                                ]
                            }
                        }
                    ],
                    "methodName": "getTitle",
                    "name": "title",
                    "notNull": false,
                    "propertyName": "title",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "topBilledCast": {
                    "methodName": "getTopBilledCast",
                    "name": "topBilledCast",
                    "notNull": false,
                    "propertyName": "topBilledCast",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Person",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Person",
                        "name": "Person",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
                "timestamp": {
                    "methodName": "getTimestamp",
                    "name": "timestamp",
                    "notNull": false,
                    "propertyName": "timestamp",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "arguments": [
                        {
                            "methodName": "getTimestamp",
                            "name": "movie",
                            "notNull": false,
                            "propertyName": "getTimestamp",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "io.smallrye.graphql.index.app.Movie",
                                "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                                "name": "Movie",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "movie",
                            "sourceArgument": true
                        }
                    ],
                    "className": "io.smallrye.graphql.index.app.MovieTriviaController",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "io.smallrye.graphql.index.app.Movie",
                        "graphQlClassName": "io.smallrye.graphql.index.app.Movie",
                        "name": "Movie",
                        "type": "TYPE"
                    }
                }
            }
        }
    }
}
Jan 30, 2023 6:27:44 PM io.smallrye.graphql.index.SchemaBuilderTest testSchemaWithDirectives
INFO: 
{
    "argumentNames": [
        "value"
    ],
    "className": "io.smallrye.graphql.index.app.SomeDirective",
    "locations": [
        "INTERFACE",
        "FIELD",
        "OBJECT"
    ],
    "name": "someDirective"
}
Jan 30, 2023 6:27:45 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:27:45 PM io.smallrye.graphql.index.SchemaBuilderTest testSchemaModelCreation
INFO: 
{
    "batchOperations": [
    ],
    "directiveTypes": [
    ],
    "enums": {
        "CountDown": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
            "name": "CountDown",
            "type": "ENUM",
            "values": [
                {
                    "value": "ONE"
                },
                {
                    "value": "THREE"
                },
                {
                    "value": "TWO"
                }
            ]
        },
        "ShirtSize": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
            "name": "ShirtSize",
            "type": "ENUM",
            "values": [
                {
                    "value": "HULK"
                },
                {
                    "value": "L"
                },
                {
                    "value": "M"
                },
                {
                    "value": "S"
                },
                {
                    "value": "XL"
                },
                {
                    "value": "XXL"
                }
            ]
        }
    },
    "errors": {
    },
    "groupedMutations": {
    },
    "groupedQueries": {
    },
    "groupedSubscriptions": {
    },
    "inputs": {
        "ScalarHolderInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "name": "ScalarHolderInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "anotherDateObject": {
                    "description": "This is another date (ISO-8601)",
                    "methodName": "setAnotherDateObject",
                    "name": "anotherDateObject",
                    "notNull": false,
                    "propertyName": "anotherDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "anotherDateTimeObject": {
                    "description": "This is another datetime (ISO-8601)",
                    "methodName": "setAnotherDateTimeObject",
                    "name": "anotherDateTimeObject",
                    "notNull": false,
                    "propertyName": "anotherDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "anotherTimeObject": {
                    "description": "This is another time (ISO-8601)",
                    "methodName": "setAnotherTimeObject",
                    "name": "anotherTimeObject",
                    "notNull": false,
                    "propertyName": "anotherTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "bigDecimalObject": {
                    "methodName": "setBigDecimalObject",
                    "name": "bigDecimalObject",
                    "notNull": false,
                    "propertyName": "bigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    }
                },
                "bigIntegerObject": {
                    "methodName": "setBigIntegerObject",
                    "name": "bigIntegerObject",
                    "notNull": false,
                    "propertyName": "bigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "booleanObject": {
                    "methodName": "setBooleanObject",
                    "name": "booleanObject",
                    "notNull": false,
                    "propertyName": "booleanObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Boolean",
                        "graphQlClassName": "java.lang.Boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "booleanPrimitive": {
                    "methodName": "setBooleanPrimitive",
                    "name": "booleanPrimitive",
                    "notNull": true,
                    "propertyName": "booleanPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "byteObject": {
                    "methodName": "setByteObject",
                    "name": "byteObject",
                    "notNull": false,
                    "propertyName": "byteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "bytePrimitive": {
                    "methodName": "setBytePrimitive",
                    "name": "bytePrimitive",
                    "notNull": true,
                    "propertyName": "bytePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "charArray": {
                    "methodName": "setCharArray",
                    "name": "charArray",
                    "notNull": false,
                    "propertyName": "charArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[C",
                        "wrapperType": "ARRAY"
                    }
                },
                "charObject": {
                    "methodName": "setCharObject",
                    "name": "charObject",
                    "notNull": false,
                    "propertyName": "charObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Character",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "charPrimitive": {
                    "methodName": "setCharPrimitive",
                    "name": "charPrimitive",
                    "notNull": true,
                    "propertyName": "charPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateObject": {
                    "defaultValue": "1978-07-03",
                    "description": "ISO-8601",
                    "methodName": "setDateObject",
                    "name": "dateObject",
                    "notNull": false,
                    "propertyName": "dateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "dateTimeObject": {
                    "description": "ISO-8601",
                    "methodName": "setDateTimeObject",
                    "name": "dateTimeObject",
                    "notNull": false,
                    "propertyName": "dateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "doubleObject": {
                    "methodName": "setDoubleObject",
                    "name": "doubleObject",
                    "notNull": false,
                    "propertyName": "doubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "doublePrimitive": {
                    "methodName": "setDoublePrimitive",
                    "name": "doublePrimitive",
                    "notNull": true,
                    "propertyName": "doublePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatObject": {
                    "methodName": "setFloatObject",
                    "name": "floatObject",
                    "notNull": false,
                    "propertyName": "floatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatPrimitive": {
                    "methodName": "setFloatPrimitive",
                    "name": "floatPrimitive",
                    "notNull": true,
                    "propertyName": "floatPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "formattedBigDecimalObject": {
                    "description": "#,###.## en-GB",
                    "methodName": "setFormattedBigDecimalObject",
                    "name": "formattedBigDecimalObject",
                    "notNull": false,
                    "propertyName": "formattedBigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#,###.##",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedBigIntegerObject": {
                    "description": "¤000 en-US",
                    "methodName": "setFormattedBigIntegerObject",
                    "name": "formattedBigIntegerObject",
                    "notNull": false,
                    "propertyName": "formattedBigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedByteObject": {
                    "description": "¤00 en-ZA",
                    "methodName": "setFormattedByteObject",
                    "name": "formattedByteObject",
                    "notNull": false,
                    "propertyName": "formattedByteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤00",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedDateObject": {
                    "description": "This is a formatted date (MM dd yyyy)",
                    "methodName": "setFormattedDateObject",
                    "name": "formattedDateObject",
                    "notNull": false,
                    "propertyName": "formattedDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDateTimeObject": {
                    "description": "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)",
                    "methodName": "setFormattedDateTimeObject",
                    "name": "formattedDateTimeObject",
                    "notNull": false,
                    "propertyName": "formattedDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy 'at' hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDoubleObject": {
                    "description": "This is a formatted number (#0.0 en-GB)",
                    "methodName": "setFormattedDoubleObject",
                    "name": "formattedDoubleObject",
                    "notNull": false,
                    "propertyName": "formattedDoubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedFloatObject": {
                    "description": "#0.0 en-GB",
                    "methodName": "setFormattedFloatObject",
                    "name": "formattedFloatObject",
                    "notNull": false,
                    "propertyName": "formattedFloatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedIntObject": {
                    "description": "en-US",
                    "methodName": "setFormattedIntObject",
                    "name": "formattedIntObject",
                    "notNull": false,
                    "propertyName": "formattedIntObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedLongObject": {
                    "description": "is-IS",
                    "methodName": "setFormattedLongObject",
                    "name": "formattedLongObject",
                    "notNull": false,
                    "propertyName": "formattedLongObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedLongPrimitive": {
                    "description": "is-IS",
                    "methodName": "setFormattedLongPrimitive",
                    "name": "formattedLongPrimitive",
                    "notNull": true,
                    "propertyName": "formattedLongPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedShortObject": {
                    "description": "¤000 en-ZA",
                    "methodName": "setFormattedShortObject",
                    "name": "formattedShortObject",
                    "notNull": false,
                    "propertyName": "formattedShortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedTimeObject": {
                    "description": "This is a formatted time (hh:mm:ss)",
                    "methodName": "setFormattedTimeObject",
                    "name": "formattedTimeObject",
                    "notNull": false,
                    "propertyName": "formattedTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "id": {
                    "methodName": "setId",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "intObject": {
                    "methodName": "setIntObject",
                    "name": "intObject",
                    "notNull": false,
                    "propertyName": "intObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitive": {
                    "methodName": "setIntPrimitive",
                    "name": "intPrimitive",
                    "notNull": true,
                    "propertyName": "intPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitiveId": {
                    "methodName": "setIntPrimitiveId",
                    "name": "intPrimitiveId",
                    "notNull": true,
                    "propertyName": "intPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "int",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "integerObjectId": {
                    "methodName": "setIntegerObjectId",
                    "name": "integerObjectId",
                    "notNull": false,
                    "propertyName": "integerObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longObject": {
                    "methodName": "setLongObject",
                    "name": "longObject",
                    "notNull": false,
                    "propertyName": "longObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longObjectId": {
                    "methodName": "setLongObjectId",
                    "name": "longObjectId",
                    "notNull": false,
                    "propertyName": "longObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.Long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longPrimitive": {
                    "methodName": "setLongPrimitive",
                    "name": "longPrimitive",
                    "notNull": true,
                    "propertyName": "longPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longPrimitiveId": {
                    "methodName": "setLongPrimitiveId",
                    "name": "longPrimitiveId",
                    "notNull": true,
                    "propertyName": "longPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "shortObject": {
                    "methodName": "setShortObject",
                    "name": "shortObject",
                    "notNull": false,
                    "propertyName": "shortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "shortPrimitive": {
                    "methodName": "setShortPrimitive",
                    "name": "shortPrimitive",
                    "notNull": true,
                    "propertyName": "shortPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "stringObject": {
                    "methodName": "setStringObject",
                    "name": "stringObject",
                    "notNull": false,
                    "propertyName": "stringObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "timeObject": {
                    "description": "ISO-8601",
                    "methodName": "setTimeObject",
                    "name": "timeObject",
                    "notNull": false,
                    "propertyName": "timeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "uuidId": {
                    "methodName": "setUuidId",
                    "name": "uuidId",
                    "notNull": false,
                    "propertyName": "uuidId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.UUID",
                        "graphQlClassName": "java.util.UUID",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                }
            }
        },
        "SuperHeroInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "name": "SuperHeroInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "bankBalance": {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "setBankBalance",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "bankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "beenThere": {
                    "methodName": "setBeenThere",
                    "name": "beenThere",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                },
                "dateOfBirth": {
                    "description": "dd MMMM yyyy",
                    "methodName": "setBirthday",
                    "name": "dateOfBirth",
                    "notNull": false,
                    "propertyName": "birthday",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    }
                },
                "colorOfCostume": {
                    "methodName": "setCostumeColor",
                    "name": "colorOfCostume",
                    "notNull": false,
                    "propertyName": "costumeColor",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateOfLastCheckin": {
                    "description": "MM/dd/yyyy",
                    "methodName": "setDateOfLastCheckin",
                    "name": "dateOfLastCheckin",
                    "notNull": false,
                    "propertyName": "dateOfLastCheckin",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "equipment": {
                    "methodName": "setEquipment",
                    "name": "equipment",
                    "notNull": false,
                    "propertyName": "equipment",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "ItemInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "favouriteDrinkSize": {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "setFavouriteDrinkSize",
                    "name": "favouriteDrinkSize",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "idNumber": {
                    "description": "ID-########",
                    "methodName": "setIdNumber",
                    "name": "idNumber",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-########",
                        "jsonB": true,
                        "type": "NUMBER"
                    }
                },
                "calendarEntries": {
                    "description": "dd/MM/yy",
                    "methodName": "setImportantDates",
                    "name": "calendarEntries",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd/MM/yy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "kidsAges": {
                    "description": "0 'years old'",
                    "methodName": "setKidsAges",
                    "name": "kidsAges",
                    "notNull": false,
                    "propertyName": "kidsAges",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "0 'years old'",
                        "jsonB": false,
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "lastKnownCoordinates": {
                    "methodName": "setLastKnownCoordinates",
                    "name": "lastKnownCoordinates",
                    "notNull": false,
                    "propertyName": "lastKnownCoordinates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "description": "Super hero name/nickname",
                    "methodName": "setName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "netWorth": {
                    "description": "¤ 000.00 en-US",
                    "methodName": "setNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "netWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "patrolStartTime": {
                    "description": "HH:mm",
                    "methodName": "setPatrolStartTime",
                    "name": "patrolStartTime",
                    "notNull": false,
                    "propertyName": "patrolStartTime",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "primaryLocation": {
                    "methodName": "setPrimaryLocation",
                    "name": "primaryLocation",
                    "notNull": false,
                    "propertyName": "primaryLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "realName": {
                    "methodName": "setRealName",
                    "name": "realName",
                    "notNull": false,
                    "propertyName": "realName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "tshirtSize": {
                    "methodName": "setSizeOfTShirt",
                    "name": "tshirtSize",
                    "notNull": false,
                    "propertyName": "sizeOfTShirt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "name": "ShirtSize",
                        "type": "ENUM"
                    }
                },
                "superPowers": {
                    "description": "Powers that make this hero super",
                    "methodName": "setSuperPowers",
                    "name": "superPowers",
                    "notNull": false,
                    "propertyName": "superPowers",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "teamAffiliations": {
                    "methodName": "setTeamAffiliations",
                    "name": "teamAffiliations",
                    "notNull": false,
                    "propertyName": "teamAffiliations",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "timeOfLastBattle": {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "setTimeOfLastBattle",
                    "name": "timeOfLastBattle",
                    "notNull": false,
                    "propertyName": "timeOfLastBattle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "track": {
                    "methodName": "setTrack",
                    "name": "track",
                    "notNull": false,
                    "propertyName": "track",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                }
            }
        },
        "TeamInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "name": "TeamInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "dailyStandupMeeting": {
                    "description": "HH:mm 'offset' Z en-ZA",
                    "methodName": "setDailyStandupMeeting",
                    "name": "dailyStandupMeeting",
                    "notNull": false,
                    "propertyName": "dailyStandupMeeting",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm 'offset' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "members": {
                    "methodName": "setMembers",
                    "name": "members",
                    "notNull": false,
                    "propertyName": "members",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "methodName": "setName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "rivalTeam": {
                    "methodName": "setRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    }
                }
            }
        },
        "ItemInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "name": "ItemInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "description": "Something of use to a super hero",
            "fields": {
                "canWield": {
                    "methodName": "setCanWield",
                    "name": "canWield",
                    "notNull": false,
                    "propertyName": "canWield",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Collection",
                        "wrapperType": "COLLECTION"
                    }
                },
                "dateCreated": {
                    "description": "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA",
                    "methodName": "setDateCreated",
                    "name": "dateCreated",
                    "notNull": false,
                    "propertyName": "dateCreated",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.ZonedDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy 'at' HH:mm 'in' VV",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "dateLastUsed": {
                    "description": "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA",
                    "methodName": "setDateLastUsed",
                    "name": "dateLastUsed",
                    "notNull": false,
                    "propertyName": "dateLastUsed",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy 'at' HH:mm 'in zone' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "description": {
                    "defaultValue": "An unidentified item",
                    "methodName": "setDescription",
                    "name": "description",
                    "notNull": false,
                    "propertyName": "description",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "height": {
                    "methodName": "setHeight",
                    "name": "height",
                    "notNull": true,
                    "propertyName": "height",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "methodName": "setId",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "name": {
                    "methodName": "setName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "powerLevel": {
                    "methodName": "setPowerLevel",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "powerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "supernatural": {
                    "defaultValue": "false",
                    "methodName": "setSupernatural",
                    "name": "supernatural",
                    "notNull": false,
                    "propertyName": "supernatural",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "weight": {
                    "methodName": "setWeight",
                    "name": "weight",
                    "notNull": true,
                    "propertyName": "weight",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                }
            }
        },
        "BasicMessageInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "name": "BasicMessageInput",
            "type": "INPUT",
            "creatorParameters": [
            ],
            "fields": {
                "countdownPlace": {
                    "methodName": "setCountdownPlace",
                    "name": "countdownPlace",
                    "notNull": false,
                    "propertyName": "countdownPlace",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "name": "CountDown",
                        "type": "ENUM"
                    }
                },
                "message": {
                    "methodName": "setMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            }
        }
    },
    "interfaces": {
        "Character": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
            "name": "Character",
            "type": "TYPE",
            "batchOperations": {
            },
            "description": "Basically any sentient being with a name",
            "fields": {
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "BasicInterface": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
            "name": "BasicInterface",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    },
    "mutations": [
        {
            "description": "Check in a superhero",
            "methodName": "checkInWithCorrectDateFormat",
            "name": "checkInWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "checkInWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "checkInWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "checkInWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "MM/dd/yyyy",
                    "methodName": "checkInWithCorrectDateFormat",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "checkInWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localDate",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes equipment from a hero",
            "methodName": "removeItemFromHero",
            "name": "removeItemFromHero",
            "notNull": false,
            "propertyName": "removeItemFromHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeItemFromHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeItemFromHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "removeItemFromHero",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "removeItemFromHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHeroes",
            "name": "createNewHeroes",
            "notNull": false,
            "propertyName": "createNewHeroes",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "createNewHeroes",
                    "name": "heroes",
                    "notNull": false,
                    "propertyName": "createNewHeroes",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "newHeroes",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last few places the hero was seen",
            "methodName": "trackHero",
            "name": "trackHero",
            "notNull": false,
            "propertyName": "trackHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "trackHero",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "trackHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "trackHero",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "trackHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's back account in USD",
            "methodName": "updateNetWorthInUSD",
            "name": "updateNetWorthInUSD",
            "notNull": false,
            "propertyName": "updateNetWorthInUSD",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateNetWorthInUSD",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateNetWorthInUSD",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "¤ 000.00 en-US",
                    "methodName": "updateNetWorthInUSD",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "updateNetWorthInUSD",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "netWorth",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Gives a hero new equipment",
            "methodName": "provisionHero",
            "name": "provisionHero",
            "notNull": false,
            "propertyName": "provisionHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "provisionHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "provisionHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "defaultValue": "{   \"id\": 1000,   \"name\": \"Cape\",   \"powerLevel\": 3,   \"height\": 1.2,   \"weight\": 0.3,   \"supernatural\": false,   \"dateCreated\": \"19 February 1900 at 12:00 in Africa/Johannesburg\",   \"dateLastUsed\": \"29 Jan 2020 at 09:45 in zone +0200\"}",
                    "methodName": "provisionHero",
                    "name": "item",
                    "notNull": false,
                    "propertyName": "provisionHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "ItemInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "item",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the time a hero started patrolling",
            "methodName": "startPatrolling",
            "name": "startPatrolling",
            "notNull": false,
            "propertyName": "startPatrolling",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "startPatrolling",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "startPatrolling",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "startPatrolling",
                    "name": "time",
                    "notNull": false,
                    "propertyName": "startPatrolling",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's bank account in US Dollar",
            "methodName": "updateBankBalanceInUS",
            "name": "updateBankBalanceInUS",
            "notNull": false,
            "propertyName": "updateBankBalanceInUS",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateBankBalanceInUS",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateBankBalanceInUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "updateBankBalanceInUS",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "updateBankBalanceInUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "bankBalance",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Check in a superhero",
            "methodName": "checkIn",
            "name": "checkIn",
            "notNull": false,
            "propertyName": "checkIn",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "checkIn",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "checkIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "checkIn",
                    "name": "date",
                    "notNull": false,
                    "propertyName": "checkIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localDate",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set all the important dates (US format) for a certain hero",
            "methodName": "importantDatesUS",
            "name": "importantDatesUS",
            "notNull": false,
            "propertyName": "importantDatesUS",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "importantDatesUS",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "importantDatesUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "MM/dd/yyyy",
                    "methodName": "importantDatesUS",
                    "name": "dates",
                    "notNull": false,
                    "propertyName": "importantDatesUS",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "localDates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes a hero... permanently...",
            "methodName": "removeHero",
            "name": "removeHero",
            "notNull": false,
            "propertyName": "removeHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "removeHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the ID Number for a hero",
            "methodName": "idNumberWithCorrectFormat",
            "name": "idNumberWithCorrectFormat",
            "notNull": false,
            "propertyName": "idNumberWithCorrectFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "idNumberWithCorrectFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "idNumberWithCorrectFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ID-00000000",
                    "methodName": "idNumberWithCorrectFormat",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "idNumberWithCorrectFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-00000000",
                        "jsonB": true,
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "idNumber",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewTeam",
            "name": "createNewTeam",
            "notNull": false,
            "propertyName": "createNewTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "createNewTeam",
                    "name": "newTeam",
                    "notNull": false,
                    "propertyName": "createNewTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "newTeam",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (using an array)",
            "methodName": "logLocationWithArray",
            "name": "logLocationWithArray",
            "notNull": false,
            "propertyName": "logLocationWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationWithArray",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "logLocationWithArray",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.math.BigDecimal;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "setRivalTeam",
            "name": "setRivalTeam",
            "notNull": false,
            "propertyName": "setRivalTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "setRivalTeam",
                    "name": "teamName",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                },
                {
                    "methodName": "setRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "TeamInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "rivalTeam",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update an item's powerLevel in percentage",
            "methodName": "updateItemPowerLevelPercentage",
            "name": "updateItemPowerLevelPercentage",
            "notNull": false,
            "propertyName": "updateItemPowerLevelPercentage",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateItemPowerLevelPercentage",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevelPercentage",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                },
                {
                    "description": "##'%'",
                    "methodName": "updateItemPowerLevelPercentage",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevelPercentage",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "##'%'",
                        "jsonB": true,
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "newLevel",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Start a battle",
            "methodName": "battle",
            "name": "battle",
            "notNull": false,
            "propertyName": "battle",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "battle",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "battle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "battle",
                    "name": "dateTime",
                    "notNull": false,
                    "propertyName": "battle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "localDateTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's net worth",
            "methodName": "updateNetWorth",
            "name": "updateNetWorth",
            "notNull": false,
            "propertyName": "updateNetWorth",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateNetWorth",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateNetWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "updateNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "updateNetWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "netWorth",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "All the places this hero has been",
            "methodName": "beenThere",
            "name": "beenThere",
            "notNull": false,
            "propertyName": "beenThere",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "beenThere",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "beenThere",
                    "name": "places",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "places",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set all the important dates for a certain hero",
            "methodName": "importantDates",
            "name": "importantDates",
            "notNull": false,
            "propertyName": "importantDates",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "importantDates",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "ISO-8601",
                    "methodName": "importantDates",
                    "name": "dates",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "localDates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "removeTeam",
            "name": "removeTeam",
            "notNull": false,
            "propertyName": "removeTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeTeam",
                    "name": "teamName",
                    "notNull": false,
                    "propertyName": "removeTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's bank account",
            "methodName": "updateBankBalance",
            "name": "updateBankBalance",
            "notNull": false,
            "propertyName": "updateBankBalance",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateBankBalance",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "updateBankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "updateBankBalance",
                    "name": "bankBalance",
                    "notNull": true,
                    "propertyName": "updateBankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "bankBalance",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the time a hero started patrolling (using formatted time)",
            "methodName": "startPatrollingWithCorrectDateFormat",
            "name": "startPatrollingWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "startPatrollingWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "startPatrollingWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "startPatrollingWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "HH:mm",
                    "methodName": "startPatrollingWithCorrectDateFormat",
                    "name": "time",
                    "notNull": false,
                    "propertyName": "startPatrollingWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen",
            "methodName": "logLocation",
            "name": "logLocation",
            "notNull": false,
            "propertyName": "logLocation",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocation",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "logLocation",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.LinkedList",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Start a battle",
            "methodName": "battleWithCorrectDateFormat",
            "name": "battleWithCorrectDateFormat",
            "notNull": false,
            "propertyName": "battleWithCorrectDateFormat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "battleWithCorrectDateFormat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "battleWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "battleWithCorrectDateFormat",
                    "name": "dateTime",
                    "notNull": false,
                    "propertyName": "battleWithCorrectDateFormat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    },
                    "methodArgumentName": "localDateTime",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Testing transformed number as a response (number # en-GB)",
            "methodName": "transformedNumber",
            "name": "transformedNumber",
            "notNull": false,
            "propertyName": "transformedNumber",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Integer",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "transformation": {
                "format": "number #",
                "jsonB": false,
                "locale": "en-GB",
                "type": "NUMBER"
            },
            "arguments": [
                {
                    "methodName": "transformedNumber",
                    "name": "input",
                    "notNull": false,
                    "propertyName": "transformedNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "input",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Set the ID Number for a hero",
            "methodName": "idNumber",
            "name": "idNumber",
            "notNull": false,
            "propertyName": "idNumber",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "idNumber",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "idNumber",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "idNumber",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "settlement",
            "name": "settlement",
            "notNull": false,
            "propertyName": "settlement",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (Long Lat)",
            "methodName": "logLocationLongLat",
            "name": "logLocationLongLat",
            "notNull": false,
            "propertyName": "logLocationLongLat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationLongLat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "logLocationLongLat",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHeroesWithArray",
            "name": "createNewHeroesWithArray",
            "notNull": false,
            "propertyName": "createNewHeroesWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[Lorg.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero;",
                "wrapperType": "ARRAY"
            },
            "arguments": [
                {
                    "methodName": "createNewHeroesWithArray",
                    "name": "heroes",
                    "notNull": false,
                    "propertyName": "createNewHeroesWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Lorg.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "newHeroes",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's favourite drink size",
            "methodName": "favouriteDrinkSize",
            "name": "favouriteDrinkSize",
            "notNull": false,
            "propertyName": "favouriteDrinkSize",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "favouriteDrinkSize",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "methodName": "favouriteDrinkSize",
                    "name": "size",
                    "notNull": true,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "size",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update an item's powerLevel",
            "methodName": "updateItemPowerLevel",
            "name": "updateItemPowerLevel",
            "notNull": false,
            "propertyName": "updateItemPowerLevel",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "updateItemPowerLevel",
                    "name": "itemID",
                    "notNull": true,
                    "propertyName": "updateItemPowerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "itemID",
                    "sourceArgument": false
                },
                {
                    "defaultValue": "5",
                    "methodName": "updateItemPowerLevel",
                    "name": "powerLevel",
                    "notNull": false,
                    "propertyName": "updateItemPowerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "newLevel",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "setScalarHolder",
            "name": "scalarHolder",
            "notNull": false,
            "propertyName": "setScalarHolder",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "name": "ScalarHolder",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "setScalarHolder",
                    "name": "scalarHolder",
                    "notNull": false,
                    "propertyName": "scalarHolder",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                        "name": "ScalarHolderInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "scalarHolder",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Removes a hero to the specified team and returns the updated team.",
            "methodName": "removeHeroFromTeam",
            "name": "removeHeroFromTeam",
            "notNull": false,
            "propertyName": "removeHeroFromTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "removeHeroFromTeam",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "removeHeroFromTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "removeHeroFromTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "removeHeroFromTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "methodName": "createNewHero",
            "name": "createNewHero",
            "notNull": false,
            "propertyName": "createNewHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "createNewHero",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "createNewHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "newHero",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last place the hero was seen (Long Lat) using an array",
            "methodName": "logLocationLongLatWithArray",
            "name": "logLocationLongLatWithArray",
            "notNull": false,
            "propertyName": "logLocationLongLatWithArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "logLocationLongLatWithArray",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "logLocationLongLatWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "logLocationLongLatWithArray",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "logLocationLongLatWithArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[Ljava.math.BigDecimal;",
                        "wrapperType": "ARRAY"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Adds a hero to the specified team and returns the updated team.",
            "methodName": "addHeroToTeam",
            "name": "addHeroToTeam",
            "notNull": false,
            "propertyName": "addHeroToTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "addHeroToTeam",
                    "name": "hero",
                    "notNull": false,
                    "propertyName": "addHeroToTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "heroName",
                    "sourceArgument": false
                },
                {
                    "methodName": "addHeroToTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "addHeroToTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Log the last few places the hero was seen (Long Lat)",
            "methodName": "trackHeroLongLat",
            "name": "trackHeroLongLat",
            "notNull": false,
            "propertyName": "trackHeroLongLat",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "trackHeroLongLat",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "trackHeroLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "00.0000000 longlat en-GB",
                    "methodName": "trackHeroLongLat",
                    "name": "coordinates",
                    "notNull": false,
                    "propertyName": "trackHeroLongLat",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "00.0000000 longlat",
                        "jsonB": false,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    },
                    "methodArgumentName": "coordinates",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        },
        {
            "description": "Update a hero's favourite drink size in milliliters",
            "methodName": "favouriteDrinkSizeInML",
            "name": "favouriteDrinkSizeInML",
            "notNull": false,
            "propertyName": "favouriteDrinkSizeInML",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "favouriteDrinkSizeInML",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSizeInML",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                },
                {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "favouriteDrinkSizeInML",
                    "name": "size",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSizeInML",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": false,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    },
                    "methodArgumentName": "size",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "MUTATION",
            "sourceField": false
        }
    ],
    "queries": [
        {
            "description": "Testing the whitelist for Runtime Exceptions",
            "methodName": "weakness",
            "name": "weakness",
            "notNull": false,
            "propertyName": "weakness",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "weakness",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "weakness",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "stringObject",
            "name": "testStringObject",
            "notNull": false,
            "propertyName": "stringObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "character",
            "name": "character",
            "notNull": false,
            "propertyName": "character",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                "name": "Character",
                "type": "INTERFACE"
            },
            "arguments": [
                {
                    "methodName": "character",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "character",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "doubleObject",
            "name": "testDoubleObject",
            "notNull": false,
            "propertyName": "doubleObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Double",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "superHero",
            "name": "superHero",
            "notNull": false,
            "propertyName": "superHero",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "superHero",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "superHero",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getScalarHolder",
            "name": "testScalarsInPojo",
            "notNull": false,
            "propertyName": "scalarHolder",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
                "name": "ScalarHolder",
                "type": "TYPE"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getItemById",
            "name": "itemById",
            "notNull": false,
            "propertyName": "itemById",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                "name": "Item",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "getItemById",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "getItemById",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "id",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the default blacklist for Runtime Exceptions",
            "methodName": "villian",
            "name": "villian",
            "notNull": false,
            "propertyName": "villian",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "villian",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "villian",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getShortPrimitive",
            "name": "shortPrimitive",
            "notNull": true,
            "propertyName": "shortPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "short",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getCurrentLocation",
            "name": "currentLocation",
            "notNull": false,
            "propertyName": "currentLocation",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "methodName": "getCurrentLocation",
                    "name": "superHero",
                    "notNull": false,
                    "propertyName": "getCurrentLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHeroInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "hero",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "bigDecimalObject",
            "name": "testBigDecimalObject",
            "notNull": false,
            "propertyName": "bigDecimalObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.math.BigDecimal",
                "graphQlClassName": "java.math.BigDecimal",
                "name": "BigDecimal",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesInTeam",
            "name": "allHeroesInTeam",
            "notNull": false,
            "propertyName": "allHeroesInTeam",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "allHeroesInTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "allHeroesInTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "longPrimitive",
            "name": "testLongPrimitive",
            "notNull": true,
            "propertyName": "longPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "long",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "bigIntegerObject",
            "name": "testBigIntegerObject",
            "notNull": false,
            "propertyName": "bigIntegerObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.math.BigInteger",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "dateTimeObject",
            "name": "testDateTimeObject",
            "notNull": false,
            "propertyName": "dateTimeObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDateTime",
                "graphQlClassName": "java.lang.String",
                "name": "DateTime",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "testNonNullParameter",
            "name": "testNonNullParameter",
            "notNull": false,
            "propertyName": "testNonNullParameter",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
                {
                    "methodName": "testNonNullParameter",
                    "name": "param",
                    "notNull": true,
                    "propertyName": "testNonNullParameter",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "param",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "isBooleanPrimitive",
            "name": "booleanPrimitive",
            "notNull": true,
            "propertyName": "booleanPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "boolean",
                "graphQlClassName": "boolean",
                "name": "Boolean",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "timeObject",
            "name": "testTimeObject",
            "notNull": false,
            "propertyName": "timeObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalTime",
                "graphQlClassName": "java.lang.String",
                "name": "Time",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "intObject",
            "name": "testIntObject",
            "notNull": false,
            "propertyName": "intObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Integer",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "ISO-8601",
            "methodName": "dateObject",
            "name": "testDateObject",
            "notNull": false,
            "propertyName": "dateObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDate",
                "graphQlClassName": "java.lang.String",
                "name": "Date",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "isBooleanObject",
            "name": "booleanObject",
            "notNull": false,
            "propertyName": "booleanObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Boolean",
                "graphQlClassName": "java.lang.Boolean",
                "name": "Boolean",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the blacklist of Checked Exceptions",
            "methodName": "exportToFile",
            "name": "exportToFile",
            "notNull": false,
            "propertyName": "exportToFile",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "exportToFile",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "exportToFile",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "bytePrimitive",
            "name": "testBytePrimitive",
            "notNull": true,
            "propertyName": "bytePrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "byte",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getShortObject",
            "name": "shortObject",
            "notNull": false,
            "propertyName": "shortObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Short",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing transformed date as a response (dd MMM yyyy en-GB)",
            "methodName": "transformedDate",
            "name": "transformedDate",
            "notNull": false,
            "propertyName": "transformedDate",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.time.LocalDate",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "transformation": {
                "format": "dd MMM yyyy",
                "jsonB": false,
                "locale": "en-GB",
                "type": "DATE"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "id",
            "name": "testId",
            "notNull": false,
            "propertyName": "id",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "ID",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesIn",
            "name": "allHeroesIn",
            "notNull": false,
            "propertyName": "allHeroesIn",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "defaultValue": "New York, NY",
                    "methodName": "allHeroesIn",
                    "name": "city",
                    "notNull": false,
                    "propertyName": "allHeroesIn",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "city",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charPrimitive",
            "name": "testCharPrimitive",
            "notNull": true,
            "propertyName": "charPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "char",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allTeams",
            "name": "allTeams",
            "notNull": false,
            "propertyName": "allTeams",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing Errors, as in Java Error",
            "methodName": "wreakHavoc",
            "name": "wreakHavoc",
            "notNull": false,
            "propertyName": "wreakHavoc",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "wreakHavoc",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "wreakHavoc",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "doublePrimitive",
            "name": "testDoublePrimitive",
            "notNull": true,
            "propertyName": "doublePrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "double",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "floatObject",
            "name": "testFloatObject",
            "notNull": false,
            "propertyName": "floatObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Float",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the whitelist for transitive Runtime Exceptions",
            "methodName": "findFlaw",
            "name": "findFlaw",
            "notNull": false,
            "propertyName": "findFlaw",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "findFlaw",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "findFlaw",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "List all super heroes in the database",
            "methodName": "allHeroes",
            "name": "allHeroes",
            "notNull": false,
            "propertyName": "allHeroes",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getaway",
            "name": "getaway",
            "notNull": false,
            "propertyName": "getaway",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.String",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithError",
            "name": "allHeroesWithError",
            "notNull": false,
            "propertyName": "allHeroesWithError",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithSpecificError",
            "name": "allHeroesWithSpecificError",
            "notNull": false,
            "propertyName": "allHeroesWithSpecificError",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "floatPrimitive",
            "name": "testFloatPrimitive",
            "notNull": true,
            "propertyName": "floatPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "float",
                "graphQlClassName": "java.lang.Float",
                "name": "Float",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "description": "Testing the blacklist of transitive Checked Exceptions",
            "methodName": "exportToCSVFile",
            "name": "exportToCSVFile",
            "notNull": false,
            "propertyName": "exportToCSVFile",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "description": "Super hero name, not real name",
                    "methodName": "exportToCSVFile",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "exportToCSVFile",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "name",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "longObject",
            "name": "testLongObject",
            "notNull": false,
            "propertyName": "longObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Long",
                "graphQlClassName": "java.math.BigInteger",
                "name": "BigInteger",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "getTeam",
            "name": "team",
            "notNull": false,
            "propertyName": "team",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                "name": "Team",
                "type": "TYPE"
            },
            "arguments": [
                {
                    "methodName": "getTeam",
                    "name": "team",
                    "notNull": false,
                    "propertyName": "getTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "teamName",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "allHeroesWithPower",
            "name": "allHeroesWithPower",
            "notNull": false,
            "propertyName": "allHeroesWithPower",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                "name": "SuperHero",
                "type": "TYPE"
            },
            "wrapper": {
                "array": false,
                "collection": true,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "java.util.Collection",
                "wrapperType": "COLLECTION"
            },
            "arguments": [
                {
                    "methodName": "allHeroesWithPower",
                    "name": "power",
                    "notNull": false,
                    "propertyName": "allHeroesWithPower",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "methodArgumentName": "power",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charObject",
            "name": "testCharObject",
            "notNull": false,
            "propertyName": "charObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Character",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "basicMessageEcho",
            "name": "basicMessageEcho",
            "notNull": false,
            "propertyName": "basicMessageEcho",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                "name": "BasicInterface",
                "type": "INTERFACE"
            },
            "arguments": [
                {
                    "methodName": "basicMessageEcho",
                    "name": "input",
                    "notNull": false,
                    "propertyName": "basicMessageEcho",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
                        "name": "BasicMessageInput",
                        "type": "INPUT"
                    },
                    "methodArgumentName": "input",
                    "sourceArgument": false
                }
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "byteObject",
            "name": "testByteObject",
            "notNull": false,
            "propertyName": "byteObject",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "java.lang.Byte",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "charArray",
            "name": "testCharArray",
            "notNull": false,
            "propertyName": "charArray",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "char",
                "graphQlClassName": "java.lang.String",
                "name": "String",
                "type": "SCALAR"
            },
            "wrapper": {
                "array": true,
                "collection": false,
                "collectionOrArray": true,
                "notEmpty": false,
                "optional": false,
                "unknown": false,
                "wrapperClassName": "[C",
                "wrapperType": "ARRAY"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        },
        {
            "methodName": "intPrimitive",
            "name": "testIntPrimitive",
            "notNull": true,
            "propertyName": "intPrimitive",
            "reference": {
                "addParametrizedTypeNameExtension": false,
                "className": "int",
                "graphQlClassName": "java.lang.Integer",
                "name": "Int",
                "type": "SCALAR"
            },
            "arguments": [
            ],
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarTestApi",
            "operationType": "QUERY",
            "sourceField": false
        }
    ],
    "subscriptions": [
    ],
    "types": {
        "SuperHero": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
            "name": "SuperHero",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "bankBalance": {
                    "description": "¤ ###,###.## en-US",
                    "methodName": "getBankBalance",
                    "name": "bankBalance",
                    "notNull": false,
                    "propertyName": "bankBalance",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ ###,###.##",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "beenThere": {
                    "methodName": "getBeenThere",
                    "name": "beenThere",
                    "notNull": false,
                    "propertyName": "beenThere",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.Set",
                        "wrapperType": "COLLECTION"
                    }
                },
                "birthday": {
                    "description": "dd MMMM yyyy",
                    "methodName": "getBirthday",
                    "name": "birthday",
                    "notNull": false,
                    "propertyName": "birthday",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy",
                        "jsonB": false,
                        "type": "DATE"
                    }
                },
                "colorOfCostume": {
                    "methodName": "getCostumeColor",
                    "name": "colorOfCostume",
                    "notNull": false,
                    "propertyName": "costumeColor",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateOfLastCheckin": {
                    "description": "MM/dd/yyyy",
                    "methodName": "getDateOfLastCheckin",
                    "name": "dateOfLastCheckin",
                    "notNull": false,
                    "propertyName": "dateOfLastCheckin",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM/dd/yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "equipment": {
                    "methodName": "getEquipment",
                    "name": "equipment",
                    "notNull": false,
                    "propertyName": "equipment",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
                        "name": "Item",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "favouriteDrinkSize": {
                    "description": "###.## 'ml' en-GB",
                    "methodName": "getFavouriteDrinkSize",
                    "name": "favouriteDrinkSize",
                    "notNull": false,
                    "propertyName": "favouriteDrinkSize",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "###.## 'ml'",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "idNumber": {
                    "description": "ID-########",
                    "methodName": "getIdNumber",
                    "name": "idNumber",
                    "notNull": false,
                    "propertyName": "idNumber",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "ID-########",
                        "jsonB": true,
                        "type": "NUMBER"
                    }
                },
                "importantDates": {
                    "description": "dd/MM",
                    "methodName": "getImportantDates",
                    "name": "importantDates",
                    "notNull": false,
                    "propertyName": "importantDates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd/MM",
                        "jsonB": false,
                        "type": "DATE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "agesOfKids": {
                    "description": "0 'years'",
                    "methodName": "getKidsAges",
                    "name": "agesOfKids",
                    "notNull": false,
                    "propertyName": "kidsAges",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "0 'years'",
                        "jsonB": false,
                        "type": "NUMBER"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "lastKnownCoordinates": {
                    "methodName": "getLastKnownCoordinates",
                    "name": "lastKnownCoordinates",
                    "notNull": false,
                    "propertyName": "lastKnownCoordinates",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "description": "Super hero name/nickname",
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "knownEnemies": {
                    "methodName": "getNamesOfKnownEnemies",
                    "name": "knownEnemies",
                    "notNull": false,
                    "propertyName": "namesOfKnownEnemies",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "netWorth": {
                    "description": "¤ 000.00 en-US",
                    "methodName": "getNetWorth",
                    "name": "netWorth",
                    "notNull": false,
                    "propertyName": "netWorth",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤ 000.00",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "patrolStartTime": {
                    "description": "HH:mm",
                    "methodName": "getPatrolStartTime",
                    "name": "patrolStartTime",
                    "notNull": false,
                    "propertyName": "patrolStartTime",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "primaryLocation": {
                    "description": "Location where you are most likely to find this hero",
                    "methodName": "getPrimaryLocation",
                    "name": "primaryLocation",
                    "notNull": false,
                    "propertyName": "primaryLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "realName": {
                    "methodName": "getRealName",
                    "name": "realName",
                    "notNull": false,
                    "propertyName": "realName",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "sizeOfTShirt": {
                    "methodName": "getSizeOfTShirt",
                    "name": "sizeOfTShirt",
                    "notNull": false,
                    "propertyName": "sizeOfTShirt",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero$ShirtSize",
                        "name": "ShirtSize",
                        "type": "ENUM"
                    }
                },
                "superPowers": {
                    "methodName": "getSuperPowers",
                    "name": "superPowers",
                    "notNull": false,
                    "propertyName": "superPowers",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "teamAffiliations": {
                    "methodName": "getTeamAffiliations",
                    "name": "teamAffiliations",
                    "notNull": false,
                    "propertyName": "teamAffiliations",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "Team",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "timeOfLastBattle": {
                    "description": "HH:mm:ss dd-MM-yyyy",
                    "methodName": "getTimeOfLastBattle",
                    "name": "timeOfLastBattle",
                    "notNull": false,
                    "propertyName": "timeOfLastBattle",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm:ss dd-MM-yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "track": {
                    "methodName": "getTrack",
                    "name": "track",
                    "notNull": false,
                    "propertyName": "track",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapper": {
                            "array": false,
                            "collection": true,
                            "collectionOrArray": true,
                            "notEmpty": false,
                            "optional": false,
                            "unknown": false,
                            "wrapperClassName": "java.util.List",
                            "wrapperType": "COLLECTION"
                        },
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "name": "Character",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
                "secretToken": {
                    "methodName": "generateSecretToken",
                    "name": "secretToken",
                    "notNull": false,
                    "propertyName": "generateSecretToken",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
                        "name": "TopSecretToken",
                        "type": "TYPE"
                    },
                    "arguments": [
                        {
                            "methodName": "generateSecretToken",
                            "name": "hero",
                            "notNull": false,
                            "propertyName": "generateSecretToken",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "name": "SuperHero",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "hero",
                            "sourceArgument": true
                        },
                        {
                            "defaultValue": "true",
                            "methodName": "generateSecretToken",
                            "name": "maskFirstPart",
                            "notNull": false,
                            "propertyName": "generateSecretToken",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "boolean",
                                "graphQlClassName": "boolean",
                                "name": "Boolean",
                                "type": "SCALAR"
                            },
                            "methodArgumentName": "maskFirstPart",
                            "sourceArgument": false
                        }
                    ],
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                },
                "currentLocation": {
                    "methodName": "getCurrentLocation",
                    "name": "currentLocation",
                    "notNull": false,
                    "propertyName": "currentLocation",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "arguments": [
                        {
                            "methodName": "getCurrentLocation",
                            "name": "superHero",
                            "notNull": false,
                            "propertyName": "getCurrentLocation",
                            "reference": {
                                "addParametrizedTypeNameExtension": false,
                                "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                                "name": "SuperHero",
                                "type": "TYPE"
                            },
                            "methodArgumentName": "hero",
                            "sourceArgument": true
                        }
                    ],
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder",
                    "operationType": "QUERY",
                    "sourceField": true,
                    "sourceFieldOn": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                }
            }
        },
        "Item": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Item",
            "name": "Item",
            "type": "TYPE",
            "batchOperations": {
            },
            "description": "Something of use to a super hero",
            "fields": {
                "dateCreated": {
                    "description": "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA",
                    "methodName": "getDateCreated",
                    "name": "dateCreated",
                    "notNull": false,
                    "propertyName": "dateCreated",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.ZonedDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMMM yyyy 'at' HH:mm 'in' VV",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "dateLastUsed": {
                    "description": "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA",
                    "methodName": "getDateLastUsed",
                    "name": "dateLastUsed",
                    "notNull": false,
                    "propertyName": "dateLastUsed",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "dd MMM yyyy 'at' HH:mm 'in zone' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "description": {
                    "methodName": "getDescription",
                    "name": "description",
                    "notNull": false,
                    "propertyName": "description",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "height": {
                    "methodName": "getHeight",
                    "name": "height",
                    "notNull": true,
                    "propertyName": "height",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "id": {
                    "methodName": "getId",
                    "name": "id",
                    "notNull": true,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "powerLevel": {
                    "methodName": "getPowerLevel",
                    "name": "powerLevel",
                    "notNull": true,
                    "propertyName": "powerLevel",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "weight": {
                    "methodName": "getWeight",
                    "name": "weight",
                    "notNull": true,
                    "propertyName": "weight",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "artificialIntelligenceRating": {
                    "methodName": "isArtificialIntelligenceRating",
                    "name": "artificialIntelligenceRating",
                    "notNull": true,
                    "propertyName": "artificialIntelligenceRating",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "supernatural": {
                    "defaultValue": "false",
                    "methodName": "isSupernatural",
                    "name": "supernatural",
                    "notNull": false,
                    "propertyName": "supernatural",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "BasicMessage": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicType",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicType",
            "name": "BasicMessage",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "name": "BasicInterface",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "TopSecretToken": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Token",
            "name": "TopSecretToken",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "value": {
                    "methodName": "getValue",
                    "name": "value",
                    "notNull": false,
                    "propertyName": "value",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "BasicInput": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInput",
            "name": "BasicInput",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "countdownPlace": {
                    "methodName": "getCountdownPlace",
                    "name": "countdownPlace",
                    "notNull": false,
                    "propertyName": "countdownPlace",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicEnum",
                        "name": "CountDown",
                        "type": "ENUM"
                    }
                },
                "message": {
                    "methodName": "getMessage",
                    "name": "message",
                    "notNull": false,
                    "propertyName": "message",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.BasicInterface",
                    "name": "BasicInterface",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "ScalarHolder": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.basic.api.ScalarHolder",
            "name": "ScalarHolder",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "anotherDateObject": {
                    "description": "This is another date (ISO-8601)",
                    "methodName": "getAnotherDateObject",
                    "name": "anotherDateObject",
                    "notNull": false,
                    "propertyName": "anotherDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "anotherDateTimeObject": {
                    "description": "This is another datetime (ISO-8601)",
                    "methodName": "getAnotherDateTimeObject",
                    "name": "anotherDateTimeObject",
                    "notNull": false,
                    "propertyName": "anotherDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "anotherTimeObject": {
                    "description": "This is another time (ISO-8601)",
                    "methodName": "getAnotherTimeObject",
                    "name": "anotherTimeObject",
                    "notNull": false,
                    "propertyName": "anotherTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "bigDecimalObject": {
                    "methodName": "getBigDecimalObject",
                    "name": "bigDecimalObject",
                    "notNull": false,
                    "propertyName": "bigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.math.BigDecimal",
                        "name": "BigDecimal",
                        "type": "SCALAR"
                    }
                },
                "bigIntegerObject": {
                    "methodName": "getBigIntegerObject",
                    "name": "bigIntegerObject",
                    "notNull": false,
                    "propertyName": "bigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "booleanObject": {
                    "methodName": "getBooleanObject",
                    "name": "booleanObject",
                    "notNull": false,
                    "propertyName": "booleanObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Boolean",
                        "graphQlClassName": "java.lang.Boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                },
                "byteObject": {
                    "methodName": "getByteObject",
                    "name": "byteObject",
                    "notNull": false,
                    "propertyName": "byteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "bytePrimitive": {
                    "methodName": "getBytePrimitive",
                    "name": "bytePrimitive",
                    "notNull": true,
                    "propertyName": "bytePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "byte",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "charArray": {
                    "methodName": "getCharArray",
                    "name": "charArray",
                    "notNull": false,
                    "propertyName": "charArray",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "wrapper": {
                        "array": true,
                        "collection": false,
                        "collectionOrArray": true,
                        "notEmpty": false,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "[C",
                        "wrapperType": "ARRAY"
                    }
                },
                "charObject": {
                    "methodName": "getCharObject",
                    "name": "charObject",
                    "notNull": false,
                    "propertyName": "charObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Character",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "charPrimitive": {
                    "methodName": "getCharPrimitive",
                    "name": "charPrimitive",
                    "notNull": true,
                    "propertyName": "charPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "char",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "dateObject": {
                    "defaultValue": "1978-07-03",
                    "description": "ISO-8601",
                    "methodName": "getDateObject",
                    "name": "dateObject",
                    "notNull": false,
                    "propertyName": "dateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "Date",
                        "type": "SCALAR"
                    }
                },
                "dateTimeObject": {
                    "description": "ISO-8601",
                    "methodName": "getDateTimeObject",
                    "name": "dateTimeObject",
                    "notNull": false,
                    "propertyName": "dateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "DateTime",
                        "type": "SCALAR"
                    }
                },
                "doubleObject": {
                    "methodName": "getDoubleObject",
                    "name": "doubleObject",
                    "notNull": false,
                    "propertyName": "doubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "doublePrimitive": {
                    "methodName": "getDoublePrimitive",
                    "name": "doublePrimitive",
                    "notNull": true,
                    "propertyName": "doublePrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "double",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatObject": {
                    "methodName": "getFloatObject",
                    "name": "floatObject",
                    "notNull": false,
                    "propertyName": "floatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "floatPrimitive": {
                    "methodName": "getFloatPrimitive",
                    "name": "floatPrimitive",
                    "notNull": true,
                    "propertyName": "floatPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "float",
                        "graphQlClassName": "java.lang.Float",
                        "name": "Float",
                        "type": "SCALAR"
                    }
                },
                "formattedBigDecimalObject": {
                    "description": "#,###.## en-GB",
                    "methodName": "getFormattedBigDecimalObject",
                    "name": "formattedBigDecimalObject",
                    "notNull": false,
                    "propertyName": "formattedBigDecimalObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigDecimal",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#,###.##",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedBigIntegerObject": {
                    "description": "¤000 en-US",
                    "methodName": "getFormattedBigIntegerObject",
                    "name": "formattedBigIntegerObject",
                    "notNull": false,
                    "propertyName": "formattedBigIntegerObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.math.BigInteger",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedByteObject": {
                    "description": "¤00 en-ZA",
                    "methodName": "getFormattedByteObject",
                    "name": "formattedByteObject",
                    "notNull": false,
                    "propertyName": "formattedByteObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Byte",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤00",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedDateObject": {
                    "description": "This is a formatted date (MM dd yyyy)",
                    "methodName": "getFormattedDateObject",
                    "name": "formattedDateObject",
                    "notNull": false,
                    "propertyName": "formattedDateObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDate",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDateTimeObject": {
                    "description": "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)",
                    "methodName": "getFormattedDateTimeObject",
                    "name": "formattedDateTimeObject",
                    "notNull": false,
                    "propertyName": "formattedDateTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalDateTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "MM dd yyyy 'at' hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "formattedDoubleObject": {
                    "description": "This is a formatted number (#0.0 en-GB)",
                    "methodName": "getFormattedDoubleObject",
                    "name": "formattedDoubleObject",
                    "notNull": false,
                    "propertyName": "formattedDoubleObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Double",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedFloatObject": {
                    "description": "#0.0 en-GB",
                    "methodName": "getFormattedFloatObject",
                    "name": "formattedFloatObject",
                    "notNull": false,
                    "propertyName": "formattedFloatObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Float",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "#0.0",
                        "jsonB": true,
                        "locale": "en-GB",
                        "type": "NUMBER"
                    }
                },
                "formattedIntObject": {
                    "description": "en-US",
                    "methodName": "getFormattedIntObject",
                    "name": "formattedIntObject",
                    "notNull": false,
                    "propertyName": "formattedIntObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "en-US",
                        "type": "NUMBER"
                    }
                },
                "formattedLongObject": {
                    "description": "is-IS",
                    "methodName": "getFormattedLongObject",
                    "name": "formattedLongObject",
                    "notNull": false,
                    "propertyName": "formattedLongObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedLongPrimitive": {
                    "description": "is-IS",
                    "methodName": "getFormattedLongPrimitive",
                    "name": "formattedLongPrimitive",
                    "notNull": true,
                    "propertyName": "formattedLongPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "jsonB": true,
                        "locale": "is-IS",
                        "type": "NUMBER"
                    }
                },
                "formattedShortObject": {
                    "description": "¤000 en-ZA",
                    "methodName": "getFormattedShortObject",
                    "name": "formattedShortObject",
                    "notNull": false,
                    "propertyName": "formattedShortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "¤000",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "NUMBER"
                    }
                },
                "formattedTimeObject": {
                    "description": "This is a formatted time (hh:mm:ss)",
                    "methodName": "getFormattedTimeObject",
                    "name": "formattedTimeObject",
                    "notNull": false,
                    "propertyName": "formattedTimeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "hh:mm:ss",
                        "jsonB": true,
                        "type": "DATE"
                    }
                },
                "id": {
                    "methodName": "getId",
                    "name": "id",
                    "notNull": false,
                    "propertyName": "id",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "intObject": {
                    "methodName": "getIntObject",
                    "name": "intObject",
                    "notNull": false,
                    "propertyName": "intObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitive": {
                    "methodName": "getIntPrimitive",
                    "name": "intPrimitive",
                    "notNull": true,
                    "propertyName": "intPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "intPrimitiveId": {
                    "methodName": "getIntPrimitiveId",
                    "name": "intPrimitiveId",
                    "notNull": true,
                    "propertyName": "intPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "int",
                        "graphQlClassName": "int",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "integerObjectId": {
                    "methodName": "getIntegerObjectId",
                    "name": "integerObjectId",
                    "notNull": false,
                    "propertyName": "integerObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Integer",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longObject": {
                    "methodName": "getLongObject",
                    "name": "longObject",
                    "notNull": false,
                    "propertyName": "longObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longObjectId": {
                    "methodName": "getLongObjectId",
                    "name": "longObjectId",
                    "notNull": false,
                    "propertyName": "longObjectId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Long",
                        "graphQlClassName": "java.lang.Long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "longPrimitive": {
                    "methodName": "getLongPrimitive",
                    "name": "longPrimitive",
                    "notNull": true,
                    "propertyName": "longPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "java.math.BigInteger",
                        "name": "BigInteger",
                        "type": "SCALAR"
                    }
                },
                "longPrimitiveId": {
                    "methodName": "getLongPrimitiveId",
                    "name": "longPrimitiveId",
                    "notNull": true,
                    "propertyName": "longPrimitiveId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "long",
                        "graphQlClassName": "long",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "shortObject": {
                    "methodName": "getShortObject",
                    "name": "shortObject",
                    "notNull": false,
                    "propertyName": "shortObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.Short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "shortPrimitive": {
                    "methodName": "getShortPrimitive",
                    "name": "shortPrimitive",
                    "notNull": true,
                    "propertyName": "shortPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "short",
                        "graphQlClassName": "java.lang.Integer",
                        "name": "Int",
                        "type": "SCALAR"
                    }
                },
                "stringObject": {
                    "methodName": "getStringObject",
                    "name": "stringObject",
                    "notNull": false,
                    "propertyName": "stringObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "timeObject": {
                    "description": "ISO-8601",
                    "methodName": "getTimeObject",
                    "name": "timeObject",
                    "notNull": false,
                    "propertyName": "timeObject",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.LocalTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "Time",
                        "type": "SCALAR"
                    }
                },
                "uuidId": {
                    "methodName": "getUuidId",
                    "name": "uuidId",
                    "notNull": false,
                    "propertyName": "uuidId",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.util.UUID",
                        "graphQlClassName": "java.util.UUID",
                        "name": "ID",
                        "type": "SCALAR"
                    }
                },
                "booleanPrimitive": {
                    "methodName": "isBooleanPrimitive",
                    "name": "booleanPrimitive",
                    "notNull": true,
                    "propertyName": "booleanPrimitive",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "boolean",
                        "graphQlClassName": "boolean",
                        "name": "Boolean",
                        "type": "SCALAR"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        },
        "Sidekick": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Sidekick",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Sidekick",
            "name": "Sidekick",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": false,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "superHeroSidekicked": {
                    "methodName": "getSuperHeroSidekicked",
                    "name": "superHeroSidekicked",
                    "notNull": false,
                    "propertyName": "superHeroSidekicked",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
                {
                    "addParametrizedTypeNameExtension": true,
                    "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Character",
                    "name": "Character",
                    "type": "INTERFACE"
                }
            ],
            "operations": {
            }
        },
        "Team": {
            "addParametrizedTypeNameExtension": false,
            "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
            "name": "Team",
            "type": "TYPE",
            "batchOperations": {
            },
            "fields": {
                "dailyStandupMeeting": {
                    "description": "HH:mm 'offset' Z en-ZA",
                    "methodName": "getDailyStandupMeeting",
                    "name": "dailyStandupMeeting",
                    "notNull": false,
                    "propertyName": "dailyStandupMeeting",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.time.OffsetTime",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    },
                    "transformation": {
                        "format": "HH:mm 'offset' Z",
                        "jsonB": true,
                        "locale": "en-ZA",
                        "type": "DATE"
                    }
                },
                "members": {
                    "methodName": "getMembers",
                    "name": "members",
                    "notNull": false,
                    "propertyName": "members",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.SuperHero",
                        "name": "SuperHero",
                        "type": "TYPE"
                    },
                    "wrapper": {
                        "array": false,
                        "collection": true,
                        "collectionOrArray": true,
                        "notEmpty": true,
                        "optional": false,
                        "unknown": false,
                        "wrapperClassName": "java.util.List",
                        "wrapperType": "COLLECTION"
                    }
                },
                "name": {
                    "methodName": "getName",
                    "name": "name",
                    "notNull": true,
                    "propertyName": "name",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "java.lang.String",
                        "graphQlClassName": "java.lang.String",
                        "name": "String",
                        "type": "SCALAR"
                    }
                },
                "rivalTeam": {
                    "methodName": "getRivalTeam",
                    "name": "rivalTeam",
                    "notNull": false,
                    "propertyName": "rivalTeam",
                    "reference": {
                        "addParametrizedTypeNameExtension": false,
                        "className": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "graphQlClassName": "org.eclipse.microprofile.graphql.tck.apps.superhero.model.Team",
                        "name": "Team",
                        "type": "TYPE"
                    }
                }
            },
            "interface": false,
            "interfaces": [
            ],
            "operations": {
            }
        }
    }
}
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.464 s - in io.smallrye.graphql.index.SchemaBuilderTest
[INFO] Running io.smallrye.graphql.schema.AnnotationsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in io.smallrye.graphql.schema.AnnotationsTest
[INFO] Running io.smallrye.graphql.schema.ClassesTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in io.smallrye.graphql.schema.ClassesTest
[INFO] Running io.smallrye.graphql.schema.creator.FieldCreatorTest
[INFO] Tests run: 30, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.17 s - in io.smallrye.graphql.schema.creator.FieldCreatorTest
[INFO] Running io.smallrye.graphql.schema.creator.FieldNameTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in io.smallrye.graphql.schema.creator.FieldNameTest
[INFO] Running io.smallrye.graphql.schema.creator.OperationCreatorTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in io.smallrye.graphql.schema.creator.OperationCreatorTest
[INFO] Running io.smallrye.graphql.schema.creator.ReferenceCreatorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in io.smallrye.graphql.schema.creator.ReferenceCreatorTest
[INFO] Running io.smallrye.graphql.schema.helper.FormatHelperTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in io.smallrye.graphql.schema.helper.FormatHelperTest
[INFO] Running io.smallrye.graphql.schema.helper.NonNullHelperTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in io.smallrye.graphql.schema.helper.NonNullHelperTest
[INFO] Running io.smallrye.graphql.schema.helper.MethodHelperTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in io.smallrye.graphql.schema.helper.MethodHelperTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 59, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --------------------< io.smallrye:smallrye-graphql >--------------------
[INFO] Building SmallRye: GraphQL Server :: Implementation 1.4.0-SNAPSHOT [9/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql ---
[INFO] Deleting /home/gabsko/breaking-updates/server/implementation/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 126
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         126 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql ---
[INFO] Processed 126 files in 00:00.375 (Already Sorted: 126, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 79 source files to /home/gabsko/breaking-updates/server/implementation/target/classes
[INFO] /home/gabsko/breaking-updates/server/implementation/src/main/java/io/smallrye/graphql/execution/datafetcher/AbstractDataFetcher.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/server/implementation/src/main/java/io/smallrye/graphql/execution/datafetcher/AbstractDataFetcher.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/server/implementation/src/main/java/io/smallrye/graphql/execution/datafetcher/helper/AbstractHelper.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/server/implementation/src/main/java/io/smallrye/graphql/execution/datafetcher/helper/AbstractHelper.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 47 source files to /home/gabsko/breaking-updates/server/implementation/target/test-classes
[INFO] /home/gabsko/breaking-updates/server/implementation/src/test/java/io/smallrye/graphql/execution/TestConfig.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/server/implementation/src/test/java/io/smallrye/graphql/execution/TestConfig.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.smallrye.graphql.transformation.CharTransformerTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 s - in io.smallrye.graphql.transformation.CharTransformerTest
[INFO] Running io.smallrye.graphql.transformation.DateTransformerTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s - in io.smallrye.graphql.transformation.DateTransformerTest
[INFO] Running io.smallrye.graphql.execution.event.EventEmitterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.277 s - in io.smallrye.graphql.execution.event.EventEmitterTest
[INFO] Running io.smallrye.graphql.execution.MutinyTest
Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Book {
  authors: [String]
  isbn: String
  "ISO-8601"
  published: Date
  title: String
}

"Query root"
type Query {
  book(name: String): Book
  failedBook(name: String): Book
}

Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  book(name: \"Lord of the Flies\"){\n    title\n    authors\n  }\n}"
}
Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  book(name: "Lord of the Flies"){
    title
    authors
  }
}]
Jan 30, 2023 6:27:48 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@40f8f5a8]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "book": {
            "title": "Lord of the Flies",
            "authors": [
                "William Golding"
            ]
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Book {
  authors: [String]
  isbn: String
  "ISO-8601"
  published: Date
  title: String
}

"Query root"
type Query {
  book(name: String): Book
  failedBook(name: String): Book
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  failedBook(name: \"Nekonomicon\"){\n    title\n    authors\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  failedBook(name: "Nekonomicon"){
    title
    authors
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.error.ExceptionHandler onException
ERROR: SRGQL012000: Data Fetching Error
io.smallrye.graphql.test.mutiny.CustomException
	at io.smallrye.graphql.test.mutiny.MutinyBookGraphQLApi.failedBook(MutinyBookGraphQLApi.java:25)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at io.smallrye.graphql.execution.datafetcher.helper.ReflectionInvoker.invoke(ReflectionInvoker.java:88)
	at io.smallrye.graphql.execution.datafetcher.UniDataFetcher.invokeAndTransform(UniDataFetcher.java:41)
	at io.smallrye.graphql.execution.datafetcher.AbstractDataFetcher.get(AbstractDataFetcher.java:53)
	at graphql.execution.ExecutionStrategy.fetchField(ExecutionStrategy.java:279)
	at graphql.execution.ExecutionStrategy.resolveFieldWithInfo(ExecutionStrategy.java:210)
	at graphql.execution.AsyncExecutionStrategy.execute(AsyncExecutionStrategy.java:60)
	at graphql.execution.Execution.executeOperation(Execution.java:159)
	at graphql.execution.Execution.execute(Execution.java:105)
	at graphql.GraphQL.execute(GraphQL.java:613)
	at graphql.GraphQL.parseValidateAndExecute(GraphQL.java:538)
	at graphql.GraphQL.executeAsync(GraphQL.java:502)
	at graphql.GraphQL.execute(GraphQL.java:433)
	at io.smallrye.graphql.execution.ExecutionService.execute(ExecutionService.java:126)
	at io.smallrye.graphql.execution.ExecutionTestBase.executeAndGetResult(ExecutionTestBase.java:77)
	at io.smallrye.graphql.execution.ExecutionTestBase.executeAndGetErrors(ExecutionTestBase.java:64)
	at io.smallrye.graphql.execution.MutinyTest.testFailureQuery(MutinyTest.java:36)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:725)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$7(TestMethodTestDescriptor.java:214)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:210)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:135)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:66)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:151)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:41)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:155)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:141)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:138)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:95)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:35)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:54)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@573284a5]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "errors": [
        {
            "message": "System error",
            "locations": [
                {
                    "line": 2,
                    "column": 3
                }
            ],
            "path": [
                "failedBook"
            ],
            "extensions": {
                "exception": "io.smallrye.graphql.test.mutiny.CustomException",
                "classification": "DataFetchingException",
                "code": "custom-error"
            }
        }
    ],
    "data": {
        "failedBook": null
    }
}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.635 s - in io.smallrye.graphql.execution.MutinyTest
[INFO] Running io.smallrye.graphql.execution.JsonbCreatorTest
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  creatorWithMultipleParameters(input: {string: \"Foobar\", localDate:\"2021-01-01\"}) {\n    string\n    integer\n    localDate\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  creatorWithMultipleParameters(input: {string: "Foobar", localDate:"2021-01-01"}) {
    string
    integer
    localDate
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@5f117b3d]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "creatorWithMultipleParameters": {
            "string": "Foobar",
            "integer": null,
            "localDate": "2021-01-01"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  withStaticFactory(input: {field: \"A\"}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  withStaticFactory(input: {field: "A"}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@9fc9f91]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "withStaticFactory": {
            "field": "A"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  creatorWithTransformation(input: {field: \"1\"}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  creatorWithTransformation(input: {field: "1"}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@292158f8]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "creatorWithTransformation": {
            "field": "1"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  creatorWithParameterDefault(input: {}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  creatorWithParameterDefault(input: {}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@78054f54]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "creatorWithParameterDefault": {
            "field": "Some value"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  withJsonbCreator(input: {field: \"A\"}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  withJsonbCreator(input: {field: "A"}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@69fe0ed4]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "withJsonbCreator": {
            "field": "A"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  creatorWithFieldDefault(input: {}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  creatorWithFieldDefault(input: {}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@46a145ba]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "creatorWithFieldDefault": {
            "field": "Some value"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type CreatorWithFieldDefault {
  field: String
}

type CreatorWithMultipleParameters {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

type CreatorWithParameterDefault {
  field: String
}

type CreatorWithTransformation {
  field: String
}

"Query root"
type Query {
  creatorWithFieldDefault(input: CreatorWithFieldDefaultInput): CreatorWithFieldDefault
  creatorWithMultipleParameters(input: CreatorWithMultipleParametersInput): CreatorWithMultipleParameters
  creatorWithParameterDefault(input: CreatorWithParameterDefaultInput): CreatorWithParameterDefault
  creatorWithTransformation(input: CreatorWithTransformationInput): CreatorWithTransformation
  withJsonbCreator(input: WithJsonbCreatorInput): WithJsonbCreator
  withStaticFactory(input: WithStaticFactoryInput): WithStaticFactory
}

type WithJsonbCreator {
  field: String
}

type WithStaticFactory {
  field: String
}

input CreatorWithFieldDefaultInput {
  field: String = "Some value"
}

input CreatorWithMultipleParametersInput {
  integer: Int
  "ISO-8601"
  localDate: Date
  string: String
}

input CreatorWithParameterDefaultInput {
  field: String = "Some value"
}

input CreatorWithTransformationInput {
  field: String
}

input WithJsonbCreatorInput {
  field: String
}

input WithStaticFactoryInput {
  field: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  withJsonbCreator(input: {}) {\n    field\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  withJsonbCreator(input: {}) {
    field
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@37468787]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "withJsonbCreator": {
            "field": null
        }
    }
}
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.267 s - in io.smallrye.graphql.execution.JsonbCreatorTest
[INFO] Running io.smallrye.graphql.execution.error.ExecutionErrorsServiceTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in io.smallrye.graphql.execution.error.ExecutionErrorsServiceTest
[INFO] Running io.smallrye.graphql.execution.CompletableFutureTest
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Book {
  authors: [String]
  isbn: String
  "ISO-8601"
  published: Date
  title: String
}

"Query root"
type Query {
  book(name: String): Book
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  book(name: \"Lord of the Flies\"){\n    title\n    authors\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  book(name: "Lord of the Flies"){
    title
    authors
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@e11ecfa]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "book": {
            "title": "Lord of the Flies",
            "authors": [
                "William Golding"
            ]
        }
    }
}
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s - in io.smallrye.graphql.execution.CompletableFutureTest
[INFO] Running io.smallrye.graphql.execution.GroupingTest
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

type Book {
  authors: [String]
  isbn: String
  "ISO-8601"
  published: Date
  title: String
}

"Mutation root"
type Mutation {
  "Allow all book releated APIs"
  books: booksMutation
}

"Query root"
type Query {
  "Allow all book releated APIs"
  books: booksQuery
}

"Allow all book releated APIs"
type booksMutation {
  addBook(book: BookInput): Book
}

"Allow all book releated APIs"
type booksQuery {
  allBooks: [Book]
  book(name: String): Book
}

input BookInput {
  authors: [String]
  isbn: String
  "ISO-8601"
  published: Date
  title: String
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  books{\n    book(name:\"Lord of the Flies\"){\n      title\n      authors\n      published\n    }\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  books{
    book(name:"Lord of the Flies"){
      title
      authors
      published
    }
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@290e8cab]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "books": {
            "book": {
                "title": "Lord of the Flies",
                "authors": [
                    "William Golding"
                ],
                "published": "1954-09-17"
            }
        }
    }
}
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s - in io.smallrye.graphql.execution.GroupingTest
[INFO] Running io.smallrye.graphql.execution.ContextTest
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  testContext {
    executionId
    path
    query
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
SmallRyeContext {
executionId = 5478536280,
request = {"query":"{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"},
operationName = null,
operationTypes = [QUERY],
parentTypeName = Query,
variables = null,
query = {
  testContext {
    executionId
    path
    query
  }
},
fieldName = testContext,
selectedFields = ["executionId","path","query"],
source = null,
arguments = graphql.collect.ImmutableMapWithNullValues@0,
fieldName = testContext,
path = /testContext
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@10947c4e]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "testContext": {
            "executionId": "5478536280",
            "path": "/testContext",
            "query": "{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"
        }
    }
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  testContext {
    executionId
    path
    query
  }
}]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
SmallRyeContext {
executionId = 17290456060,
request = {"query":"{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"},
operationName = null,
operationTypes = [QUERY],
parentTypeName = Query,
variables = null,
query = {
  testContext {
    executionId
    path
    query
  }
},
fieldName = testContext,
selectedFields = ["executionId","path","query"],
source = null,
arguments = graphql.collect.ImmutableMapWithNullValues@0,
fieldName = testContext,
path = /testContext
}
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@65bad087]
Jan 30, 2023 6:27:49 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "testContext": {
            "executionId": "17290456060",
            "path": "/testContext",
            "query": "{\n  testContext {\n    executionId\n    path\n    query\n  }\n}"
        }
    }
}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 s - in io.smallrye.graphql.execution.ContextTest
[INFO] Running io.smallrye.graphql.execution.LRUCacheTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 80.41 s - in io.smallrye.graphql.execution.LRUCacheTest
[INFO] Running io.smallrye.graphql.execution.MappingTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in io.smallrye.graphql.execution.MappingTest
[INFO] Running io.smallrye.graphql.execution.ExecutionGenericsTest
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  generic1 {\n    param1\n    name\n  }\n}"
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  generic1 {
    param1
    name
  }
}]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@10b4e7f8]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "generic1": {
            "param1": "my param 1",
            "name": "my name"
        }
    }
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  generic2 {\n    param1\n    name\n  }\n}"
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  generic2 {
    param1
    name
  }
}]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@2bc7db89]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "generic2": {
            "param1": 22,
            "name": "my name"
        }
    }
}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.033 s - in io.smallrye.graphql.execution.ExecutionGenericsTest
[INFO] Running io.smallrye.graphql.execution.ExecutionTest
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  testObject(yourname:\"Phillip\") {\n    id\n    name\n    timestamp {\n       value\n    }\n  }\n}"
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  testObject(yourname:"Phillip") {
    id
    name
    timestamp {
       value
    }
  }
}]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@25c2a9e3]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "testObject": {
            "id": "1d88cc39-7219-42be-9eb1-f8ebe77e1c9f",
            "name": "Phillip",
            "timestamp": {
                "value": "2023-01-30T18:29"
            }
        }
    }
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.bootstrap.Bootstrap createGraphQLObjectType
WARN: SRGQL010002: Operation [timestamp] also exist as a batch operation - ignoring the non-batch operation
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ================== Testing against: ====================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

interface InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

interface InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ClassWithOneGenericsParam_Int implements InterfaceWithOneGenericsParam_Int {
  name: String
  param1: Int
}

type ClassWithOneGenericsParam_String implements InterfaceWithOneGenericsParam_String {
  name: String
  param1: String
}

type ContextInfo {
  executionId: String
  path: String
  query: String
}

"Query root"
type Query {
  arrayDefault(values: [String] = ["creature", "comfort"]): [String]
  generic1: InterfaceWithOneGenericsParam_String
  generic2: InterfaceWithOneGenericsParam_Int
  listDefault(values: [String] = ["electric", "blue"]): [String]
  testContext: ContextInfo
  testObject(yourname: String): TestObject
  testObjects: [TestObject]
}

type TestListObject {
  amount: Float!
  id: Int!
}

type TestObject {
  amounts: [TestListObject]
  id: String
  name: String
  number: Number
  timestamp: TestSource
}

type TestSource {
  "yyyy-MM-dd'T'HH:mm"
  value: String
}

enum Number {
  ONE
  THREE
  TWO
}

Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase init
INFO: ========================================================
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "query": "{\n  testObjects {\n    id\n    name\n    timestamp {\n       value\n    }\n  }\n}"
}
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [{
  testObjects {
    id
    name
    timestamp {
       value
    }
  }
}]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011005: Payload In [Optional.empty]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionService execute
INFO: SRGQL011006: Payload Out [io.smallrye.graphql.execution.ExecutionResponse@67fa5045]
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.execution.ExecutionTestBase executeAndGetResult
INFO: 
{
    "data": {
        "testObjects": [
            {
                "id": "b145a3bd-fae3-4275-a854-a530dbd61b37",
                "name": "Phillip",
                "timestamp": {
                    "value": "2023-01-30T18:29"
                }
            },
            {
                "id": "9c425239-6b82-4831-b51f-aa94ed254df7",
                "name": "Charmaine",
                "timestamp": {
                    "value": "2023-01-30T18:29"
                }
            }
        ]
    }
}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s - in io.smallrye.graphql.execution.ExecutionTest
[INFO] Running io.smallrye.graphql.execution.datafetcher.CollectionHelperTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s - in io.smallrye.graphql.execution.datafetcher.CollectionHelperTest
[INFO] Running io.smallrye.graphql.schema.SchemaTest
Jan 30, 2023 6:29:10 PM io.smallrye.graphql.schema.SchemaTest testSchemaWithDirectives
INFO: "Directs the executor to include this field or fragment only when the `if` argument is true"
directive @include(
    "Included when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"Directs the executor to skip this field or fragment when the `if`'argument is true."
directive @skip(
    "Skipped when true."
    if: Boolean!
  ) on FIELD | FRAGMENT_SPREAD | INLINE_FRAGMENT

"test-description"
directive @intArrayTestDirective(value: [Int]) on OBJECT | INTERFACE

directive @fieldDirective on FIELD

"Marks the field, argument, input field or enum value as deprecated"
directive @deprecated(
    "The reason for the deprecation"
    reason: String = "No longer supported"
  ) on FIELD_DEFINITION | ARGUMENT_DEFINITION | ENUM_VALUE | INPUT_FIELD_DEFINITION

"Exposes a URL that specifies the behaviour of this scalar."
directive @specifiedBy(
    "The URL that specifies the behaviour of this scalar."
    url: String!
  ) on SCALAR

"Query root"
type Query {
  testTypeWithDirectives(arg: [String]): TestTypeWithDirectives
}

type TestTypeWithDirectives @intArrayTestDirective(value : [1, 2, 3]) {
  value: String @fieldDirective
}

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in io.smallrye.graphql.schema.SchemaTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 66, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] ------------------< io.smallrye:smallrye-graphql-cdi >------------------
[INFO] Building SmallRye: GraphQL Server :: CDI 1.4.0-SNAPSHOT          [10/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-cdi ---
[INFO] Deleting /home/gabsko/breaking-updates/server/implementation-cdi/target
[INFO] 
[INFO] --- maven-dependency-plugin:3.2.0:unpack (default) @ smallrye-graphql-cdi ---
[INFO] Configured Artifact: org.eclipse.microprofile.graphql:microprofile-graphql-tck:?:jar
[INFO] Unpacking /home/gabsko/.m2/repository/org/eclipse/microprofile/graphql/microprofile-graphql-tck/1.1.0/microprofile-graphql-tck-1.1.0.jar to /home/gabsko/breaking-updates/server/implementation-cdi/target/test-classes with includes "" and excludes "**/tests/,**/dynamic/,**/*Test.class,**/beans.xml"
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-cdi ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 24
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         24 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-cdi ---
[INFO] Processed 24 files in 00:00.086 (Already Sorted: 24, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-cdi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-cdi ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 21 source files to /home/gabsko/breaking-updates/server/implementation-cdi/target/classes
[INFO] /home/gabsko/breaking-updates/server/implementation-cdi/src/main/java/io/smallrye/graphql/cdi/tracing/TracingService.java: /home/gabsko/breaking-updates/server/implementation-cdi/src/main/java/io/smallrye/graphql/cdi/tracing/TracingService.java uses or overrides a deprecated API.
[INFO] /home/gabsko/breaking-updates/server/implementation-cdi/src/main/java/io/smallrye/graphql/cdi/tracing/TracingService.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-cdi ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/implementation-cdi/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-cdi ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 3 source files to /home/gabsko/breaking-updates/server/implementation-cdi/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-cdi ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running io.smallrye.graphql.execution.CdiExecutionTest
Jan 30, 2023 6:29:11 PM org.jboss.weld.bootstrap.WeldStartup <clinit>
INFO: WELD-000900: 3.1.7 (SP1)
Jan 30, 2023 6:29:12 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:12 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 193809c6-55cc-467f-9a9e-0900be4c9f19 initialized
Jan 30, 2023 6:29:12 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
SLF4J: Failed to load class "org.slf4j.impl.StaticLoggerBinder".
SLF4J: Defaulting to no-operation (NOP) logger implementation
SLF4J: See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details.
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder provisionHero
INFO: provisionHero invoked [Spider Man],[Item{id=1000, name=Cape, description=null, powerLevel=3, height=1.2, weight=0.3, supernatural=false, invisible=false, canWield=null, artificialIntelligenceRating=false}]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "provisionHero": {
            "name": "Spider Man",
            "equipment": [
                {
                    "id": "1000",
                    "name": "Cape",
                    "height": 1.2,
                    "weight": 0.3,
                    "powerLevel": 3,
                    "supernatural": false
                }
            ]
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 193809c6-55cc-467f-9a9e-0900be4c9f19 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 6f2d922f-31e3-49b6-af73-1f7f74b85256 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder superHero
INFO: superHero invoked [Iron Man]
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder getCurrentLocation
INFO: currentLocation invoked [SuperHero{, superPowers=[wealth, engineering], primaryLocation=Los Angeles, CA, name=Iron Man, realName=Tony Stark, dateOfLastCheckin=2019-09-09, patrolStartTime=08:00, timeOfLastBattle=2019-09-06T08:30:01, costumeColor=Red, namesOfKnownEnemies=[Whiplash, Mandarin], idNumber=12345678, sizeOfTShirt=null}]
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder generateSecretToken
INFO: generateSecretToken invoked [SuperHero{, superPowers=[wealth, engineering], primaryLocation=Los Angeles, CA, name=Iron Man, realName=Tony Stark, dateOfLastCheckin=2019-09-09, patrolStartTime=08:00, timeOfLastBattle=2019-09-06T08:30:01, costumeColor=Red, namesOfKnownEnemies=[Whiplash, Mandarin], idNumber=12345678, sizeOfTShirt=null}],[true]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "superHero": {
            "idNumber": "ID-12345678",
            "name": "Iron Man",
            "primaryLocation": "Los Angeles, CA",
            "realName": "Tony Stark",
            "superPowers": [
                "wealth",
                "engineering"
            ],
            "dateOfLastCheckin": "09/09/2019",
            "timeOfLastBattle": "08:30:01 06-09-2019",
            "patrolStartTime": "08:00",
            "bankBalance": null,
            "currentLocation": "Wachovia",
            "secretToken": {
                "value": "********-****-****-****-********a6f3"
            },
            "teamAffiliations": [
                {
                    "name": "Avengers",
                    "members": [
                        {
                            "name": "Iron Man"
                        },
                        {
                            "name": "Spider Man"
                        },
                        {
                            "name": "Wolverine"
                        }
                    ]
                }
            ]
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 6f2d922f-31e3-49b6-af73-1f7f74b85256 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 00199dba-ed6c-41f5-a27d-1c1cdc4af684 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder provisionHero
INFO: provisionHero invoked [Starlord],[Item{id=12345, name=Power Infinity Stone, description=An unidentified item, powerLevel=99, height=0.001, weight=0.2, supernatural=true, invisible=false, canWield=null, artificialIntelligenceRating=false}]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "provisionHero": {
            "name": "Starlord",
            "equipment": [
                {
                    "id": "12345",
                    "name": "Power Infinity Stone",
                    "height": 0.001,
                    "weight": 0.2,
                    "powerLevel": 99,
                    "supernatural": true
                }
            ]
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 00199dba-ed6c-41f5-a27d-1c1cdc4af684 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container e9dbcebb-11da-41c2-bdb7-a0753ce33ec8 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder idNumberWithCorrectFormat
INFO: idNumberWithCorrectFormat invoked [Starlord],[88,888,888]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "idNumberWithCorrectFormat": {
            "name": "Starlord",
            "idNumber": "ID-88888888"
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container e9dbcebb-11da-41c2-bdb7-a0753ce33ec8 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 316e6557-6fc6-4cdf-96d3-a27b86059960 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder createNewHero
INFO: createNewHero invoked [SuperHero{, superPowers=null, primaryLocation=null, name=Captain America, realName=Steven Rogers, dateOfLastCheckin=2019-09-25, patrolStartTime=13:00, timeOfLastBattle=2019-08-21T09:43:23, costumeColor=null, namesOfKnownEnemies=null, idNumber=null, sizeOfTShirt=XL}]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "createNewHero": {
            "name": "Captain America",
            "dateOfLastCheckin": "09/25/2019",
            "patrolStartTime": "13:00",
            "sizeOfTShirt": "XL"
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 316e6557-6fc6-4cdf-96d3-a27b86059960 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container dac5fd88-2b95-44d5-82db-83f69bee3b54 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder createNewHero
INFO: createNewHero invoked [SuperHero{, superPowers=[Super strength, Vibranium Shield], primaryLocation=New York, NY, name=Captain America, realName=Steven Rogers, dateOfLastCheckin=null, patrolStartTime=12:00, timeOfLastBattle=null, costumeColor=null, namesOfKnownEnemies=null, idNumber=65784312, sizeOfTShirt=null}]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "createNewHero": {
            "name": "Captain America",
            "primaryLocation": "New York, NY",
            "superPowers": [
                "Super strength",
                "Vibranium Shield"
            ],
            "realName": "Steven Rogers",
            "idNumber": "ID-65784312"
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container dac5fd88-2b95-44d5-82db-83f69bee3b54 shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 7ecf71cf-04b6-45f4-8c51-9533a82a690e initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:13 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder createNewHero
INFO: createNewHero invoked [SuperHero{, superPowers=[Top intellect], primaryLocation=Wakanda, Africa, name=Black Panther, realName=T'Challa, dateOfLastCheckin=null, patrolStartTime=12:00, timeOfLastBattle=null, costumeColor=null, namesOfKnownEnemies=null, idNumber=98701234, sizeOfTShirt=null}]
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "createNewHero": {
            "name": "Black Panther",
            "primaryLocation": "Wakanda, Africa",
            "superPowers": [
                "Top intellect"
            ],
            "realName": "T'Challa",
            "idNumber": "ID-98701234",
            "agesOfKids": [
                "3 years",
                "5 years"
            ]
        }
    }
}
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 7ecf71cf-04b6-45f4-8c51-9533a82a690e shut down
Jan 30, 2023 6:29:13 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:13 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 3fd0c539-2b76-4c17-a334-67f0a20fbac0 initialized
Jan 30, 2023 6:29:13 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetError
INFO: 
{
    "errors": [
        {
            "message": "Validation error of type WrongType: argument 'powerLevel' with value 'StringValue{value='Unlimited'}' is not a valid 'Int' @ 'updateItemPowerLevel'",
            "locations": [
                {
                    "line": 2,
                    "column": 37
                }
            ],
            "extensions": {
                "classification": "ValidationError"
            }
        }
    ],
    "data": {
        "updateItemPowerLevel": null
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 3fd0c539-2b76-4c17-a334-67f0a20fbac0 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container d9669363-9ef4-4480-94ff-f0b36c56de8a initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "testScalarsInPojo": {
            "timeObject": "11:46:34.263",
            "anotherTimeObject": "11:46:34.263"
        }
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container d9669363-9ef4-4480-94ff-f0b36c56de8a shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 8ffaba49-b235-463b-bd47-2721f98a86c2 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "transformedDate": "16 Aug 2016"
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 8ffaba49-b235-463b-bd47-2721f98a86c2 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container c25e9238-4245-49b6-8dfe-975921680651 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder startPatrolling
INFO: startPatrolling invoked [Starlord],[20:00]
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "startPatrolling": {
            "name": "Starlord",
            "patrolStartTime": "20:00"
        }
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container c25e9238-4245-49b6-8dfe-975921680651 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 5520e05f-92eb-45a2-825e-f7159972b128 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder createNewHeroesWithArray
INFO: createNewHeroesWithArray invoked [SuperHero{, superPowers=[Super strength, Vibranium Shield], primaryLocation=New York, NY, name=Captain America, realName=Steven Rogers, dateOfLastCheckin=null, patrolStartTime=12:00, timeOfLastBattle=null, costumeColor=null, namesOfKnownEnemies=null, idNumber=65784312, sizeOfTShirt=null}]
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "createNewHeroesWithArray": [
            {
                "name": "Captain America",
                "primaryLocation": "New York, NY",
                "superPowers": [
                    "Super strength",
                    "Vibranium Shield"
                ],
                "realName": "Steven Rogers",
                "idNumber": "ID-65784312"
            }
        ]
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 5520e05f-92eb-45a2-825e-f7159972b128 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 05b9c5eb-0568-4f43-b7f9-4de9c2ea2251 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder idNumber
INFO: idNumber invoked [Starlord],[77,777,777]
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "idNumber": {
            "name": "Starlord",
            "idNumber": "ID-77777777"
        }
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 05b9c5eb-0568-4f43-b7f9-4de9c2ea2251 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 3df151c8-f057-46fa-811f-e7a2bb797fe3 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder addHeroToTeam
INFO: addHeroToTeam invoked [Starlord],[Avengers]
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "addHeroToTeam": {
            "name": "Avengers",
            "members": [
                {
                    "name": "Iron Man"
                },
                {
                    "name": "Spider Man"
                },
                {
                    "name": "Wolverine"
                },
                {
                    "name": "Starlord"
                }
            ]
        }
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 3df151c8-f057-46fa-811f-e7a2bb797fe3 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 496abfec-2860-4a25-9e78-febba5072581 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "transformedNumber": "number 345"
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 496abfec-2860-4a25-9e78-febba5072581 shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 8350c262-625f-4f19-a2ae-2151acfeabba initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM org.eclipse.microprofile.graphql.tck.apps.superhero.api.HeroFinder createNewHeroes
INFO: createNewHeroes invoked [[SuperHero{, superPowers=[Super strength, Vibranium Shield], primaryLocation=New York, NY, name=Captain America, realName=Steven Rogers, dateOfLastCheckin=null, patrolStartTime=12:00, timeOfLastBattle=null, costumeColor=null, namesOfKnownEnemies=null, idNumber=65784312, sizeOfTShirt=null}]]
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetData
INFO: 
{
    "data": {
        "createNewHeroes": [
            {
                "name": "Captain America",
                "primaryLocation": "New York, NY",
                "superPowers": [
                    "Super strength",
                    "Vibranium Shield"
                ],
                "realName": "Steven Rogers",
                "idNumber": "ID-65784312"
            }
        ]
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 8350c262-625f-4f19-a2ae-2151acfeabba shut down
Jan 30, 2023 6:29:14 PM org.jboss.weld.bootstrap.WeldStartup startContainer
INFO: WELD-000101: Transactional services not available. Injection of @Inject UserTransaction not available. Transactional observers will be invoked synchronously.
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer fireContainerInitializedEvent
INFO: WELD-ENV-002003: Weld SE container 6a2be8df-c911-4553-b4c8-b9dbb4ae6380 initialized
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.CdiExecutionTest executeAndGetError
INFO: 
{
    "errors": [
        {
            "message": "Validation error of type WrongType: argument 'time' with value 'StringValue{value='Today'}' is not a valid 'Time' @ 'startPatrolling'",
            "locations": [
                {
                    "line": 2,
                    "column": 36
                }
            ],
            "extensions": {
                "classification": "ValidationError"
            }
        }
    ],
    "data": {
        "startPatrolling": null
    }
}
Jan 30, 2023 6:29:14 PM org.jboss.weld.environment.se.WeldContainer shutdown
INFO: WELD-ENV-002001: Weld SE container 6a2be8df-c911-4553-b4c8-b9dbb4ae6380 shut down
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.982 s - in io.smallrye.graphql.execution.CdiExecutionTest
[INFO] Running io.smallrye.graphql.execution.SchemaTest
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.schema.helper.NonNullHelper markAsNonNull
WARN: Ignoring non null on [java.lang.String] as there is a @DefaultValue
Jan 30, 2023 6:29:14 PM io.smallrye.graphql.execution.SchemaTest testSchemaModelCreation
INFO: interface BasicInterface {
  message: String
}

"Basically any sentient being with a name"
interface Character {
  name: String
}

type BasicInput implements BasicInterface {
  countdownPlace: CountDown
  message: String
}

type BasicMessage implements BasicInterface {
  message: String
}

"Something of use to a super hero"
type Item {
  artificialIntelligenceRating: Boolean!
  "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA"
  dateCreated: String
  "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA"
  dateLastUsed: String
  description: String
  height: Float!
  id: ID!
  name: String!
  powerLevel: Int!
  supernatural: Boolean
  weight: Float!
}

"Mutation root"
type Mutation {
  "Adds a hero to the specified team and returns the updated team."
  addHeroToTeam(hero: String, team: String): Team
  "Start a battle"
  battle(
    "ISO-8601"
    dateTime: DateTime, 
    name: String
  ): SuperHero
  "Start a battle"
  battleWithCorrectDateFormat(
    "HH:mm:ss dd-MM-yyyy"
    dateTime: String, 
    name: String
  ): SuperHero
  "All the places this hero has been"
  beenThere(name: String, places: [String]): SuperHero
  "Check in a superhero"
  checkIn(
    "ISO-8601"
    date: Date, 
    name: String
  ): SuperHero
  "Check in a superhero"
  checkInWithCorrectDateFormat(
    "MM/dd/yyyy"
    date: String, 
    name: String
  ): SuperHero
  createNewHero(hero: SuperHeroInput): SuperHero
  createNewHeroes(heroes: [SuperHeroInput]): [SuperHero]
  createNewHeroesWithArray(heroes: [SuperHeroInput]): [SuperHero]
  createNewTeam(newTeam: TeamInput): Team
  "Update a hero's favourite drink size"
  favouriteDrinkSize(name: String, size: Float!): SuperHero
  "Update a hero's favourite drink size in milliliters"
  favouriteDrinkSizeInML(
    name: String, 
    "###.## 'ml' en-GB"
    size: String
  ): SuperHero
  "Set the ID Number for a hero"
  idNumber(id: BigInteger, name: String): SuperHero
  "Set the ID Number for a hero"
  idNumberWithCorrectFormat(
    "ID-00000000"
    id: String, 
    name: String
  ): SuperHero
  "Set all the important dates for a certain hero"
  importantDates(
    "ISO-8601"
    dates: [Date], 
    name: String
  ): SuperHero
  "Set all the important dates (US format) for a certain hero"
  importantDatesUS(
    "MM/dd/yyyy"
    dates: [String], 
    name: String
  ): SuperHero
  "Log the last place the hero was seen"
  logLocation(coordinates: [BigDecimal], name: String): SuperHero
  "Log the last place the hero was seen (Long Lat)"
  logLocationLongLat(
    "00.0000000 longlat en-GB"
    coordinates: [String], 
    name: String
  ): SuperHero
  "Log the last place the hero was seen (Long Lat) using an array"
  logLocationLongLatWithArray(
    "00.0000000 longlat en-GB"
    coordinates: [String], 
    name: String
  ): SuperHero
  "Log the last place the hero was seen (using an array)"
  logLocationWithArray(coordinates: [BigDecimal], name: String): SuperHero
  "Gives a hero new equipment"
  provisionHero(hero: String, item: ItemInput = {dateCreated : "19 February 1900 at 12:00 in Africa/Johannesburg", dateLastUsed : "29 Jan 2020 at 09:45 in zone +0200", height : 1.2, id : 1000, name : "Cape", powerLevel : 3, supernatural : false, weight : 0.3}): SuperHero
  "Removes a hero... permanently..."
  removeHero(hero: String): [SuperHero]
  "Removes a hero to the specified team and returns the updated team."
  removeHeroFromTeam(hero: String, team: String): Team
  "Removes equipment from a hero"
  removeItemFromHero(hero: String, itemID: BigInteger!): SuperHero
  removeTeam(teamName: String): Team
  scalarHolder(scalarHolder: ScalarHolderInput): ScalarHolder
  setRivalTeam(rivalTeam: TeamInput, teamName: String): Team
  settlement: String
  "Set the time a hero started patrolling"
  startPatrolling(
    name: String, 
    "ISO-8601"
    time: Time
  ): SuperHero
  "Set the time a hero started patrolling (using formatted time)"
  startPatrollingWithCorrectDateFormat(
    name: String, 
    "HH:mm"
    time: String
  ): SuperHero
  "Log the last few places the hero was seen"
  trackHero(coordinates: [[BigDecimal]], name: String): SuperHero
  "Log the last few places the hero was seen (Long Lat)"
  trackHeroLongLat(
    "00.0000000 longlat en-GB"
    coordinates: [[String]], 
    name: String
  ): SuperHero
  "Testing transformed number as a response (number # en-GB)"
  transformedNumber(input: Int): String
  "Update a hero's bank account"
  updateBankBalance(bankBalance: Float!, name: String): SuperHero
  "Update a hero's bank account in US Dollar"
  updateBankBalanceInUS(
    "¤ ###,###.## en-US"
    bankBalance: String, 
    name: String
  ): SuperHero
  "Update an item's powerLevel"
  updateItemPowerLevel(itemID: BigInteger!, powerLevel: Int = 5): Item
  "Update an item's powerLevel in percentage"
  updateItemPowerLevelPercentage(
    itemID: BigInteger!, 
    "##'%'"
    powerLevel: String!
  ): Item
  "Update a hero's net worth"
  updateNetWorth(name: String, netWorth: BigDecimal): SuperHero
  "Update a hero's back account in USD"
  updateNetWorthInUSD(
    name: String, 
    "¤ 000.00 en-US"
    netWorth: String
  ): SuperHero
}

"Query root"
type Query {
  "List all super heroes in the database"
  allHeroes: [SuperHero]
  allHeroesIn(city: String = "New York, NY"): [SuperHero]
  allHeroesInTeam(team: String): [SuperHero]
  allHeroesWithError: [SuperHero]
  allHeroesWithPower(power: String): [SuperHero]
  allHeroesWithSpecificError: [SuperHero]
  allTeams: [Team]
  basicMessageEcho(input: BasicMessageInput): BasicInterface
  booleanObject: Boolean
  booleanPrimitive: Boolean!
  character(name: String): Character
  currentLocation(superHero: SuperHeroInput): String
  "Testing the blacklist of transitive Checked Exceptions"
  exportToCSVFile(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  "Testing the blacklist of Checked Exceptions"
  exportToFile(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  "Testing the whitelist for transitive Runtime Exceptions"
  findFlaw(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  getaway: String
  itemById(id: BigInteger!): Item
  shortObject: Int
  shortPrimitive: Int!
  superHero(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  team(team: String): Team
  testBigDecimalObject: BigDecimal
  testBigIntegerObject: BigInteger
  testByteObject: Int
  testBytePrimitive: Int!
  testCharArray: [String]
  testCharObject: String
  testCharPrimitive: String!
  "ISO-8601"
  testDateObject: Date
  "ISO-8601"
  testDateTimeObject: DateTime
  testDoubleObject: Float
  testDoublePrimitive: Float!
  testFloatObject: Float
  testFloatPrimitive: Float!
  testId: ID
  testIntObject: Int
  testIntPrimitive: Int!
  testLongObject: BigInteger
  testLongPrimitive: BigInteger!
  testNonNullParameter(param: String!): String
  testScalarsInPojo: ScalarHolder
  testStringObject: String
  "ISO-8601"
  testTimeObject: Time
  "Testing transformed date as a response (dd MMM yyyy en-GB)"
  transformedDate: String
  "Testing the default blacklist for Runtime Exceptions"
  villian(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  "Testing the whitelist for Runtime Exceptions"
  weakness(
    "Super hero name, not real name"
    name: String
  ): SuperHero
  "Testing Errors, as in Java Error"
  wreakHavoc(
    "Super hero name, not real name"
    name: String
  ): SuperHero
}

type ScalarHolder {
  "This is another date (ISO-8601)"
  anotherDateObject: Date
  "This is another datetime (ISO-8601)"
  anotherDateTimeObject: DateTime
  "This is another time (ISO-8601)"
  anotherTimeObject: Time
  bigDecimalObject: BigDecimal
  bigIntegerObject: BigInteger
  booleanObject: Boolean
  booleanPrimitive: Boolean!
  byteObject: Int
  bytePrimitive: Int!
  charArray: [String]
  charObject: String
  charPrimitive: String!
  "ISO-8601"
  dateObject: Date
  "ISO-8601"
  dateTimeObject: DateTime
  doubleObject: Float
  doublePrimitive: Float!
  floatObject: Float
  floatPrimitive: Float!
  "#,###.## en-GB"
  formattedBigDecimalObject: String
  "¤000 en-US"
  formattedBigIntegerObject: String
  "¤00 en-ZA"
  formattedByteObject: String
  "This is a formatted date (MM dd yyyy)"
  formattedDateObject: String
  "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)"
  formattedDateTimeObject: String
  "This is a formatted number (#0.0 en-GB)"
  formattedDoubleObject: String
  "#0.0 en-GB"
  formattedFloatObject: String
  "en-US"
  formattedIntObject: String
  "is-IS"
  formattedLongObject: String
  "is-IS"
  formattedLongPrimitive: String!
  "¤000 en-ZA"
  formattedShortObject: String
  "This is a formatted time (hh:mm:ss)"
  formattedTimeObject: String
  id: ID
  intObject: Int
  intPrimitive: Int!
  intPrimitiveId: ID!
  integerObjectId: ID
  longObject: BigInteger
  longObjectId: ID
  longPrimitive: BigInteger!
  longPrimitiveId: ID!
  shortObject: Int
  shortPrimitive: Int!
  stringObject: String
  "ISO-8601"
  timeObject: Time
  uuidId: ID
}

type Sidekick implements Character {
  name: String
  superHeroSidekicked: SuperHero
}

type SuperHero implements Character {
  "0 'years'"
  agesOfKids: [String]
  "¤ ###,###.## en-US"
  bankBalance: String
  beenThere: [String]
  "dd MMMM yyyy"
  birthday: String
  colorOfCostume: String
  currentLocation: String
  "MM/dd/yyyy"
  dateOfLastCheckin: String
  equipment: [Item]
  "###.## 'ml' en-GB"
  favouriteDrinkSize: String
  "ID-########"
  idNumber: String
  "dd/MM"
  importantDates: [String]
  knownEnemies: [String]
  lastKnownCoordinates: [BigDecimal]
  "Super hero name/nickname"
  name: String
  "¤ 000.00 en-US"
  netWorth: String
  "HH:mm"
  patrolStartTime: String
  "Location where you are most likely to find this hero"
  primaryLocation: String
  realName: String
  secretToken(maskFirstPart: Boolean = true): TopSecretToken
  sizeOfTShirt: ShirtSize
  superPowers: [String!]
  teamAffiliations: [Team]
  "HH:mm:ss dd-MM-yyyy"
  timeOfLastBattle: String
  track: [[BigDecimal]]
}

type Team {
  "HH:mm 'offset' Z en-ZA"
  dailyStandupMeeting: String
  members: [SuperHero!]
  name: String!
  rivalTeam: Team
}

type TopSecretToken {
  value: String
}

enum CountDown {
  ONE
  THREE
  TWO
}

enum ShirtSize {
  HULK
  L
  M
  S
  XL
  XXL
}

"Scalar for BigDecimal"
scalar BigDecimal

"Scalar for BigInteger"
scalar BigInteger

"Scalar for Date"
scalar Date

"Scalar for DateTime"
scalar DateTime

"Scalar for Time"
scalar Time

input BasicMessageInput {
  countdownPlace: CountDown
  message: String
}

"Something of use to a super hero"
input ItemInput {
  canWield: [SuperHeroInput]
  "dd MMMM yyyy 'at' HH:mm 'in' VV en-ZA"
  dateCreated: String
  "dd MMM yyyy 'at' HH:mm 'in zone' Z en-ZA"
  dateLastUsed: String
  description: String = "An unidentified item"
  height: Float!
  id: ID!
  name: String!
  powerLevel: Int!
  supernatural: Boolean = false
  weight: Float!
}

input ScalarHolderInput {
  "This is another date (ISO-8601)"
  anotherDateObject: Date
  "This is another datetime (ISO-8601)"
  anotherDateTimeObject: DateTime
  "This is another time (ISO-8601)"
  anotherTimeObject: Time
  bigDecimalObject: BigDecimal
  bigIntegerObject: BigInteger
  booleanObject: Boolean
  booleanPrimitive: Boolean!
  byteObject: Int
  bytePrimitive: Int!
  charArray: [String]
  charObject: String
  charPrimitive: String!
  "ISO-8601"
  dateObject: Date = "1978-07-03"
  "ISO-8601"
  dateTimeObject: DateTime
  doubleObject: Float
  doublePrimitive: Float!
  floatObject: Float
  floatPrimitive: Float!
  "#,###.## en-GB"
  formattedBigDecimalObject: String
  "¤000 en-US"
  formattedBigIntegerObject: String
  "¤00 en-ZA"
  formattedByteObject: String
  "This is a formatted date (MM dd yyyy)"
  formattedDateObject: String
  "This is a formatted datetime (MM dd yyyy 'at' hh:mm:ss)"
  formattedDateTimeObject: String
  "This is a formatted number (#0.0 en-GB)"
  formattedDoubleObject: String
  "#0.0 en-GB"
  formattedFloatObject: String
  "en-US"
  formattedIntObject: String
  "is-IS"
  formattedLongObject: String
  "is-IS"
  formattedLongPrimitive: String!
  "¤000 en-ZA"
  formattedShortObject: String
  "This is a formatted time (hh:mm:ss)"
  formattedTimeObject: String
  id: ID
  intObject: Int
  intPrimitive: Int!
  intPrimitiveId: ID!
  integerObjectId: ID
  longObject: BigInteger
  longObjectId: ID
  longPrimitive: BigInteger!
  longPrimitiveId: ID!
  shortObject: Int
  shortPrimitive: Int!
  stringObject: String
  "ISO-8601"
  timeObject: Time
  uuidId: ID
}

input SuperHeroInput {
  "¤ ###,###.## en-US"
  bankBalance: String
  beenThere: [String]
  "dd/MM/yy"
  calendarEntries: [String]
  colorOfCostume: String
  "dd MMMM yyyy"
  dateOfBirth: String
  "MM/dd/yyyy"
  dateOfLastCheckin: String
  equipment: [ItemInput!]
  "###.## 'ml' en-GB"
  favouriteDrinkSize: String
  "ID-########"
  idNumber: String
  "0 'years old'"
  kidsAges: [String]
  lastKnownCoordinates: [BigDecimal]
  "Super hero name/nickname"
  name: String!
  "¤ 000.00 en-US"
  netWorth: String
  "HH:mm"
  patrolStartTime: String
  primaryLocation: String
  realName: String
  "Powers that make this hero super"
  superPowers: [String!]
  teamAffiliations: [TeamInput]
  "HH:mm:ss dd-MM-yyyy"
  timeOfLastBattle: String
  track: [[BigDecimal]]
  tshirtSize: ShirtSize
}

input TeamInput {
  "HH:mm 'offset' Z en-ZA"
  dailyStandupMeeting: String
  members: [SuperHeroInput]
  name: String
  rivalTeam: TeamInput
}

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.233 s - in io.smallrye.graphql.execution.SchemaTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] ----------------< io.smallrye:smallrye-graphql-servlet >----------------
[INFO] Building SmallRye: GraphQL Server :: Servlet 1.4.0-SNAPSHOT      [11/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-servlet ---
[INFO] Deleting /home/gabsko/breaking-updates/server/implementation-servlet/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-servlet ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 6
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         6 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-servlet ---
[INFO] Processed 6 files in 00:00.034 (Already Sorted: 6, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-servlet ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/implementation-servlet/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-servlet ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 6 source files to /home/gabsko/breaking-updates/server/implementation-servlet/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-servlet ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/implementation-servlet/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-servlet ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-servlet ---
[INFO] No tests to run.
[INFO] 
[INFO] ------------------< io.smallrye:smallrye-graphql-tck >------------------
[INFO] Building SmallRye: GraphQL Server :: TCK 1.4.0-SNAPSHOT          [12/39]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:2.5:clean (default-clean) @ smallrye-graphql-tck ---
[INFO] Deleting /home/gabsko/breaking-updates/server/tck/target
[INFO] 
[INFO] --- formatter-maven-plugin:2.16.0:format (default) @ smallrye-graphql-tck ---
[INFO] Using 'UTF-8' encoding to format source files.
[INFO] Number of files to be formatted: 106
[INFO] Successfully formatted:          0 file(s)
[INFO] Fail to format:                  0 file(s)
[INFO] Skipped:                         106 file(s)
[INFO] Read only skipped:               0 file(s)
[INFO] Approximate time taken:          0s
[INFO] 
[INFO] --- impsort-maven-plugin:1.6.2:sort (sort-imports) @ smallrye-graphql-tck ---
[INFO] Processed 106 files in 00:00.179 (Already Sorted: 106, Needed Sorting: 0)
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ smallrye-graphql-tck ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/server/tck/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ smallrye-graphql-tck ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ smallrye-graphql-tck ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 189 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ smallrye-graphql-tck ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 106 source files to /home/gabsko/breaking-updates/server/tck/target/test-classes
[INFO] /home/gabsko/breaking-updates/server/tck/src/test/java/io/smallrye/graphql/test/apps/profile/api/IEntity.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/server/tck/src/test/java/io/smallrye/graphql/test/apps/profile/api/IEntity.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/server/tck/src/test/java/io/smallrye/graphql/test/apps/generics/api/ControllerWithGenerics.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/server/tck/src/test/java/io/smallrye/graphql/test/apps/generics/api/ControllerWithGenerics.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ smallrye-graphql-tck ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running TestSuite
java.nio.file.NoSuchFileException: src/test/resources/overrides
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileSystemProvider.newDirectoryStream(UnixFileSystemProvider.java:432)
	at java.base/java.nio.file.Files.newDirectoryStream(Files.java:472)
	at io.smallrye.graphql.TestInterceptor.loadExecutionOverride(TestInterceptor.java:84)
	at io.smallrye.graphql.TestInterceptor.<init>(TestInterceptor.java:59)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at java.base/java.lang.Class.newInstance(Class.java:584)
	at org.testng.internal.ClassHelper.newInstance(ClassHelper.java:69)
	at org.testng.TestNG.addListeners(TestNG.java:949)
	at org.testng.TestNG.initializeConfiguration(TestNG.java:912)
	at org.testng.TestNG.initializeEverything(TestNG.java:996)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
java.nio.file.NoSuchFileException: src/test/resources/overrides
	at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)
	at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:116)
	at java.base/sun.nio.fs.UnixFileSystemProvider.newDirectoryStream(UnixFileSystemProvider.java:432)
	at java.base/java.nio.file.Files.newDirectoryStream(Files.java:472)
	at io.smallrye.graphql.TestInterceptor.loadSchemaOverride(TestInterceptor.java:67)
	at io.smallrye.graphql.TestInterceptor.<init>(TestInterceptor.java:60)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at java.base/java.lang.Class.newInstance(Class.java:584)
	at org.testng.internal.ClassHelper.newInstance(ClassHelper.java:69)
	at org.testng.TestNG.addListeners(TestNG.java:949)
	at org.testng.TestNG.initializeConfiguration(TestNG.java:912)
	at org.testng.TestNG.initializeEverything(TestNG.java:996)
	at org.testng.TestNG.run(TestNG.java:1009)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Jan 30, 2023 6:29:17 PM org.eclipse.jetty.util.log.Log initialized
INFO: Logging initialized @927ms to org.eclipse.jetty.util.log.JavaUtilLog
Jan 30, 2023 6:29:17 PM org.jboss.arquillian.container.jetty.embedded_9.JettyEmbeddedContainer start
INFO: Starting Jetty Embedded Server 9.4.44.v20210927 [id:26928827]
Jan 30, 2023 6:29:17 PM org.eclipse.jetty.server.Server doStart
INFO: jetty-9.4.44.v20210927; built: 2021-09-27T23:02:44.612Z; git: 8da83308eeca865e495e53ef315a249d63ba9332; jvm 11.0.17+8-post-Ubuntu-1ubuntu218.04
[ERROR] Tests run: 894, Failures: 1, Errors: 0, Skipped: 893, Time elapsed: 1.552 s <<< FAILURE! - in TestSuite
[ERROR] arquillianBeforeSuite(org.eclipse.microprofile.graphql.tck.dynamic.SchemaDynamicValidityTest)  Time elapsed: 0.58 s  <<< FAILURE!
org.jboss.arquillian.container.spi.client.container.LifecycleException: Could not start container
Caused by: java.io.IOException: Failed to bind to localhost/127.0.0.1:9090
Caused by: java.net.BindException: Address already in use

[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   SchemaDynamicValidityTest>Arquillian.arquillianBeforeSuite:65 » Lifecycle Coul...
[INFO] 
[ERROR] Tests run: 10, Failures: 1, Errors: 0, Skipped: 9
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for SmallRye: GraphQL Parent 1.4.0-SNAPSHOT:
[INFO] 
[INFO] SmallRye: GraphQL Parent ........................... SUCCESS [  0.524 s]
[INFO] SmallRye: GraphQL UI ............................... SUCCESS [  0.009 s]
[INFO] SmallRye: GraphQL UI :: Graphiql ................... SUCCESS [  0.702 s]
[INFO] SmallRye: GraphQL Common ........................... SUCCESS [  0.007 s]
[INFO] SmallRye: GraphQL Common :: Schema Model ........... SUCCESS [  1.859 s]
[INFO] SmallRye: GraphQL Server ........................... SUCCESS [  0.006 s]
[INFO] SmallRye: GraphQL Server :: API .................... SUCCESS [  0.442 s]
[INFO] SmallRye: GraphQL Common :: Schema Builder ......... SUCCESS [  2.933 s]
[INFO] SmallRye: GraphQL Server :: Implementation ......... SUCCESS [01:25 min]
[INFO] SmallRye: GraphQL Server :: CDI .................... SUCCESS [  4.651 s]
[INFO] SmallRye: GraphQL Server :: Servlet ................ SUCCESS [  0.257 s]
[INFO] SmallRye: GraphQL Server :: TCK .................... FAILURE [  3.447 s]
[INFO] SmallRye: GraphQL Server :: Runner ................. SKIPPED
[INFO] SmallRye: GraphQL Client ........................... SKIPPED
[INFO] SmallRye: GraphQL Client :: API .................... SKIPPED
[INFO] SmallRye: GraphQL Client :: Implementation ......... SKIPPED
[INFO] SmallRye: GraphQL Client :: TCK .................... SKIPPED
[INFO] SmallRye: GraphQL Client :: Implementation :: Vert.x SKIPPED
[INFO] SmallRye: GraphQL Server :: Integration Tests ...... SKIPPED
[INFO] smallrye-graphql-federation-parent ................. SKIPPED
[INFO] smallrye-graphql-federation-api .................... SKIPPED
[INFO] smallrye-graphql-federation-runtime ................ SKIPPED
[INFO] SmallRye: GraphQL Client :: Generator .............. SKIPPED
[INFO] SmallRye: GraphQL Client :: Generator Test ......... SKIPPED
[INFO] SmallRye: GraphQL Tools ............................ SKIPPED
[INFO] SmallRye: GraphQL Tools :: Maven ................... SKIPPED
[INFO] SmallRye: GraphQL Tools :: Gradle .................. SKIPPED
[INFO] SmallRye: GraphQL Tools :: Maven plugin tests ...... SKIPPED
[INFO] Power Annotations Parent POM ....................... SKIPPED
[INFO] Power Annotations Annotations ...................... SKIPPED
[INFO] Power Annotations Utils Parent POM ................. SKIPPED
[INFO] Power Annotations Utils API ........................ SKIPPED
[INFO] Power Annotations Jandex Common .................... SKIPPED
[INFO] Power Annotations Jandex Runtime Scanner ........... SKIPPED
[INFO] Power Annotations Utils Impl for Jandex ............ SKIPPED
[INFO] Power Annotations TCK .............................. SKIPPED
[INFO] Power Annotations Jandex Maven Plugin .............. SKIPPED
[INFO] SmallRye GraphQL : Documentation ................... SKIPPED
[INFO] Empty Release Project to Avoid Maven Bug ........... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:40 min
[INFO] Finished at: 2023-01-30T18:29:19Z
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.22.2:test (default-test) on project smallrye-graphql-tck: There are test failures.
[ERROR] 
[ERROR] Please refer to /home/gabsko/breaking-updates/server/tck/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream.
[ERROR] -> [Help 1]
[ERROR] 
[ERROR] To see the full stack trace of the errors, re-run Maven with the -e switch.
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <args> -rf :smallrye-graphql-tck
