[INFO] Scanning for projects...
[INFO] Inspecting build with total of 7 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 7 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Cassandre trading bot                                              [pom]
[INFO] Trading bot spring boot autoconfigure                              [jar]
[INFO] Trading bot spring boot starter                                    [jar]
[INFO] Trading bot spring boot autoconfigure test                         [jar]
[INFO] Trading bot spring boot starter test                               [jar]
[INFO] Cassandre trading bot basic archetype                  [maven-archetype]
[INFO] Cassandre trading bot basic ta4j archetype             [maven-archetype]
[INFO] 
[INFO] ------< tech.cassandre.trading.bot:cassandre-trading-bot-project >------
[INFO] Building Cassandre trading bot 4.1.2-SNAPSHOT                      [1/7]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-project ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-autoconfigure >--
[INFO] Building Trading bot spring boot autoconfigure 4.1.2-SNAPSHOT      [2/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target
[INFO] 
[INFO] --- lombok-maven-plugin:1.18.20.0:delombok (default) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Delombok complete.
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 116 source files to /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/classes
[INFO] /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/src/main/java/tech/cassandre/trading/bot/service/xchange/TradeServiceXChangeImplementation.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/src/main/java/tech/cassandre/trading/bot/service/xchange/TradeServiceXChangeImplementation.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 131 source files to /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running tech.cassandre.trading.bot.test.domain.OrderTest
14:24:34.495 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:24:34.502 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:24:34.526 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.OrderTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:24:34.534 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.OrderTest], using SpringBootContextLoader
14:24:34.536 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: class path resource [tech/cassandre/trading/bot/test/domain/OrderTest-context.xml] does not exist
14:24:34.537 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: class path resource [tech/cassandre/trading/bot/test/domain/OrderTestContext.groovy] does not exist
14:24:34.537 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:24:34.537 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: OrderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:24:34.607 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:24:34.608 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.OrderTest
14:24:34.660 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.OrderTest]: using defaults.
14:24:34.661 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:24:34.667 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:24:34.672 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1fa1cab1, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@70f02c32, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@51fadaff, org.springframework.test.context.support.DirtiesContextTestExecutionListener@401f7633, org.springframework.test.context.transaction.TransactionalTestExecutionListener@31ff43be, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5b6ec132, org.springframework.test.context.event.EventPublishingTestExecutionListener@5c44c582, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@67d18ed7, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2c78d320, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a67e3c6]
14:24:34.673 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3daf7722 testClass = OrderTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78641d23 testClass = OrderTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3f6b0be5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48f278eb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@52af26ee, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@342c38f8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21282ed8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:24:34.713 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3daf7722 testClass = OrderTest, testInstance = tech.cassandre.trading.bot.test.domain.OrderTest@3fc9504b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78641d23 testClass = OrderTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3f6b0be5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@48f278eb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@52af26ee, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@342c38f8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@21282ed8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:24:34.726 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:24:34.728 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:34 - Starting OrderTest using Java 11.0.17 on repairnator with PID 19868 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:34 - The following profiles are active: schedule-disabled
14:24:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:35 - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
14:24:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:35 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:24:35 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:35 - HikariPool-1 - Starting...
14:24:36 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:36 - HikariPool-1 - Start completed.
14:24:36 - Successfully acquired change log lock
14:24:36 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:36 - Reading from PUBLIC.DATABASECHANGELOG
14:24:36 - Successfully released change log lock
14:24:36 - Successfully acquired change log lock
Skipping auto-registration
14:24:36 - Skipping auto-registration
14:24:36 - Table EXCHANGE_ACCOUNTS created
14:24:36 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:36 - Table STRATEGIES created
14:24:36 - Auto-increment added to STRATEGIES.ID
14:24:36 - Table POSITIONS created
14:24:36 - Auto-increment added to POSITIONS.ID
14:24:36 - Table ORDERS created
14:24:36 - Auto-increment added to ORDERS.ID
14:24:36 - Table TRADES created
14:24:36 - Auto-increment added to TRADES.ID
14:24:36 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:36 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:36 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:36 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:36 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:36 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:36 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:36 - Index IDX_POSITIONS_POSITION_ID created
14:24:36 - Index IDX_POSITIONS_STATUS created
14:24:36 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:36 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:36 - Index IDX_ORDERS_ORDER_ID created
14:24:36 - Index IDX_TRADES_TRADE_ID created
14:24:36 - Index IDX_TRADES_ORDER_ID created
14:24:36 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:24:36 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:36 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:36 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:36 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:36 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:36 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:36 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:24:36 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:36 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:24:36 - Successfully released change log lock
14:24:36 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:36 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:24:37 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:24:37 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:37 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:38 - Calling Remote Init...
14:24:38 - ExchangeConfiguration - Dry mode is OFF
14:24:38 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:38 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:38 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:38 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:38 - Started OrderTest in 4.162 seconds (JVM running for 4.938)
14:24:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:38 - HikariPool-1 - Shutdown initiated...
14:24:38 - HikariPool-1 - Shutdown completed.
14:24:38 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:38 - Starting OrderTest using Java 11.0.17 on repairnator with PID 19868 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:38 - The following profiles are active: schedule-disabled
14:24:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:39 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:24:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:39 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:24:39 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:39 - HikariPool-2 - Starting...
14:24:39 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:39 - HikariPool-2 - Start completed.
14:24:39 - Successfully acquired change log lock
14:24:39 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:39 - Reading from PUBLIC.DATABASECHANGELOG
14:24:39 - Successfully released change log lock
14:24:39 - Successfully acquired change log lock
Skipping auto-registration
14:24:39 - Skipping auto-registration
14:24:39 - Table EXCHANGE_ACCOUNTS created
14:24:39 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:39 - Table STRATEGIES created
14:24:39 - Auto-increment added to STRATEGIES.ID
14:24:39 - Table POSITIONS created
14:24:39 - Auto-increment added to POSITIONS.ID
14:24:39 - Table ORDERS created
14:24:39 - Auto-increment added to ORDERS.ID
14:24:39 - Table TRADES created
14:24:39 - Auto-increment added to TRADES.ID
14:24:39 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:39 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:39 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:39 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:39 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:39 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:39 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:39 - Index IDX_POSITIONS_POSITION_ID created
14:24:39 - Index IDX_POSITIONS_STATUS created
14:24:39 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:39 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:39 - Index IDX_ORDERS_ORDER_ID created
14:24:39 - Index IDX_TRADES_TRADE_ID created
14:24:39 - Index IDX_TRADES_ORDER_ID created
14:24:39 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
14:24:39 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:39 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:39 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:39 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:39 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:39 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:39 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:24:39 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:39 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
14:24:39 - Successfully released change log lock
14:24:39 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:39 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:39 - Calling Remote Init...
14:24:39 - ExchangeConfiguration - Dry mode is OFF
14:24:39 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:39 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:39 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:39 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:39 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:39 - Started OrderTest in 0.852 seconds (JVM running for 5.816)
14:24:39 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:39 - HikariPool-2 - Shutdown initiated...
14:24:39 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:39 - Starting OrderTest using Java 11.0.17 on repairnator with PID 19868 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:39 - The following profiles are active: schedule-disabled
14:24:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:40 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
14:24:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:40 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:24:40 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:40 - HikariPool-3 - Starting...
14:24:40 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:40 - HikariPool-3 - Start completed.
14:24:40 - Successfully acquired change log lock
14:24:40 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:40 - Reading from PUBLIC.DATABASECHANGELOG
14:24:40 - Successfully released change log lock
14:24:40 - Successfully acquired change log lock
Skipping auto-registration
14:24:40 - Skipping auto-registration
14:24:40 - Table EXCHANGE_ACCOUNTS created
14:24:40 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:40 - Table STRATEGIES created
14:24:40 - Auto-increment added to STRATEGIES.ID
14:24:40 - Table POSITIONS created
14:24:40 - Auto-increment added to POSITIONS.ID
14:24:40 - Table ORDERS created
14:24:40 - Auto-increment added to ORDERS.ID
14:24:40 - Table TRADES created
14:24:40 - Auto-increment added to TRADES.ID
14:24:40 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:40 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:40 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:40 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:40 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:40 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:40 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:40 - Index IDX_POSITIONS_POSITION_ID created
14:24:40 - Index IDX_POSITIONS_STATUS created
14:24:40 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:40 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:40 - Index IDX_ORDERS_ORDER_ID created
14:24:40 - Index IDX_TRADES_TRADE_ID created
14:24:40 - Index IDX_TRADES_ORDER_ID created
14:24:40 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 16ms
14:24:40 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:40 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:40 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:40 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:40 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:40 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:40 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:24:40 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:40 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:24:40 - Successfully released change log lock
14:24:40 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:40 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:40 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:40 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:40 - Calling Remote Init...
14:24:40 - ExchangeConfiguration - Dry mode is OFF
14:24:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:40 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:40 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:40 - Started OrderTest in 0.594 seconds (JVM running for 6.59)
14:24:40 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=BACKUP_ORDER_03, type=ASK, strategy=StrategyDTO(id=1, strategyId=001, type=null, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:24:40 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_03, currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=TRADE MY_REF_3, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:24:41 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=11, orderId=BACKUP_ORDER_03, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00002 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.145 s - in tech.cassandre.trading.bot.test.domain.OrderTest
14:24:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:41 - HikariPool-3 - Shutdown initiated...
14:24:41 - HikariPool-3 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.TradeTest
14:24:42.714 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:24:42.721 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:24:42.745 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.TradeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:24:42.752 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.TradeTest], using SpringBootContextLoader
14:24:42.755 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: class path resource [tech/cassandre/trading/bot/test/domain/TradeTest-context.xml] does not exist
14:24:42.755 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: class path resource [tech/cassandre/trading/bot/test/domain/TradeTestContext.groovy] does not exist
14:24:42.755 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:24:42.756 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: TradeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:24:42.837 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:24:42.837 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.TradeTest
14:24:42.889 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.TradeTest]: using defaults.
14:24:42.889 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:24:42.894 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:24:42.900 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f02c32, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@62010f5c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@51fadaff, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@401f7633, org.springframework.test.context.support.DirtiesContextTestExecutionListener@31ff43be, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b6ec132, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c44c582, org.springframework.test.context.event.EventPublishingTestExecutionListener@67d18ed7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c78d320, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6cc558c6]
14:24:42.901 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@78641d23 testClass = TradeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74589991 testClass = TradeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@611889f4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2f217633, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@c88a337, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@36916eb0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f9fcf7f], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:24:42.941 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@78641d23 testClass = TradeTest, testInstance = tech.cassandre.trading.bot.test.domain.TradeTest@6d025197, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74589991 testClass = TradeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@611889f4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2f217633, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@c88a337, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@36916eb0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f9fcf7f], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:24:42.953 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:24:42.956 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:43 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20387 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:43 - The following profiles are active: schedule-disabled
14:24:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:43 - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
14:24:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:43 - Finished Spring Data repository scanning in 8 ms. Found 5 JPA repository interfaces.
14:24:44 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:44 - HikariPool-1 - Starting...
14:24:44 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:44 - HikariPool-1 - Start completed.
14:24:44 - Successfully acquired change log lock
14:24:44 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:44 - Reading from PUBLIC.DATABASECHANGELOG
14:24:45 - Successfully released change log lock
14:24:45 - Successfully acquired change log lock
Skipping auto-registration
14:24:45 - Skipping auto-registration
14:24:45 - Table EXCHANGE_ACCOUNTS created
14:24:45 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:45 - Table STRATEGIES created
14:24:45 - Auto-increment added to STRATEGIES.ID
14:24:45 - Table POSITIONS created
14:24:45 - Auto-increment added to POSITIONS.ID
14:24:45 - Table ORDERS created
14:24:45 - Auto-increment added to ORDERS.ID
14:24:45 - Table TRADES created
14:24:45 - Auto-increment added to TRADES.ID
14:24:45 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:45 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:45 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:45 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:45 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:45 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:45 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:45 - Index IDX_POSITIONS_POSITION_ID created
14:24:45 - Index IDX_POSITIONS_STATUS created
14:24:45 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:45 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:45 - Index IDX_ORDERS_ORDER_ID created
14:24:45 - Index IDX_TRADES_TRADE_ID created
14:24:45 - Index IDX_TRADES_ORDER_ID created
14:24:45 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:24:45 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:45 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:45 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:45 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:45 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:45 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:45 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:24:45 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:45 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:24:45 - Successfully released change log lock
14:24:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:45 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:24:45 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:24:45 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:45 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:46 - Calling Remote Init...
14:24:46 - ExchangeConfiguration - Dry mode is OFF
14:24:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:46 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:46 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:46 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:47 - Started TradeTest in 4.134 seconds (JVM running for 4.971)
14:24:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:47 - HikariPool-1 - Shutdown initiated...
14:24:47 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:47 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20387 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:47 - The following profiles are active: schedule-disabled
14:24:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:47 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
14:24:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:47 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:24:47 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:47 - HikariPool-2 - Starting...
14:24:47 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:47 - HikariPool-2 - Start completed.
14:24:47 - Successfully acquired change log lock
14:24:47 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:47 - Reading from PUBLIC.DATABASECHANGELOG
14:24:47 - Successfully released change log lock
14:24:47 - Successfully acquired change log lock
Skipping auto-registration
14:24:47 - Skipping auto-registration
14:24:47 - Table EXCHANGE_ACCOUNTS created
14:24:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:47 - Table STRATEGIES created
14:24:47 - Auto-increment added to STRATEGIES.ID
14:24:47 - Table POSITIONS created
14:24:47 - Auto-increment added to POSITIONS.ID
14:24:47 - Table ORDERS created
14:24:47 - Auto-increment added to ORDERS.ID
14:24:47 - Table TRADES created
14:24:47 - Auto-increment added to TRADES.ID
14:24:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:47 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:47 - Index IDX_POSITIONS_POSITION_ID created
14:24:47 - Index IDX_POSITIONS_STATUS created
14:24:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:47 - Index IDX_ORDERS_ORDER_ID created
14:24:47 - Index IDX_TRADES_TRADE_ID created
14:24:47 - Index IDX_TRADES_ORDER_ID created
14:24:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 27ms
14:24:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:24:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:24:47 - Successfully released change log lock
14:24:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:47 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:47 - Calling Remote Init...
14:24:47 - ExchangeConfiguration - Dry mode is OFF
14:24:47 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:47 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:47 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:47 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:47 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:47 - Started TradeTest in 0.807 seconds (JVM running for 5.801)
14:24:48 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=My reference !, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:24:49 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, currencyPair=ETH/BTC, amount=1.100002 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Updated reference, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:24:50 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, currencyPair=ETH/BTC, amount=1.100003 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Updated reference, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:24:50 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:50 - HikariPool-2 - Shutdown initiated...
14:24:50 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:50 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20387 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:50 - The following profiles are active: schedule-disabled
14:24:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:50 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
14:24:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:50 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:24:50 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:50 - HikariPool-3 - Starting...
14:24:50 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:50 - HikariPool-3 - Start completed.
14:24:50 - Successfully acquired change log lock
14:24:50 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:50 - Reading from PUBLIC.DATABASECHANGELOG
14:24:50 - Successfully released change log lock
14:24:50 - Successfully acquired change log lock
Skipping auto-registration
14:24:50 - Skipping auto-registration
14:24:50 - Table EXCHANGE_ACCOUNTS created
14:24:50 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:50 - Table STRATEGIES created
14:24:50 - Auto-increment added to STRATEGIES.ID
14:24:50 - Table POSITIONS created
14:24:50 - Auto-increment added to POSITIONS.ID
14:24:50 - Table ORDERS created
14:24:50 - Auto-increment added to ORDERS.ID
14:24:50 - Table TRADES created
14:24:50 - Auto-increment added to TRADES.ID
14:24:50 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:50 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:50 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:50 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:50 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:50 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:50 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:50 - Index IDX_POSITIONS_POSITION_ID created
14:24:50 - Index IDX_POSITIONS_STATUS created
14:24:50 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:50 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:50 - Index IDX_ORDERS_ORDER_ID created
14:24:50 - Index IDX_TRADES_TRADE_ID created
14:24:50 - Index IDX_TRADES_ORDER_ID created
14:24:50 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
14:24:50 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:50 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:50 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:50 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:50 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:50 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:50 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:24:50 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:50 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:24:50 - Successfully released change log lock
14:24:50 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:50 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:50 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:50 - Calling Remote Init...
14:24:50 - ExchangeConfiguration - Dry mode is OFF
14:24:50 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:50 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:50 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:50 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:50 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:50 - Started TradeTest in 0.681 seconds (JVM running for 8.679)
14:24:50 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:50 - HikariPool-3 - Shutdown initiated...
14:24:50 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:50 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20387 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:50 - The following profiles are active: schedule-disabled
14:24:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:50 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
14:24:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:50 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:24:51 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:51 - HikariPool-4 - Starting...
14:24:51 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:51 - HikariPool-4 - Start completed.
14:24:51 - Successfully acquired change log lock
14:24:51 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:51 - Reading from PUBLIC.DATABASECHANGELOG
14:24:51 - Successfully released change log lock
14:24:51 - Successfully acquired change log lock
Skipping auto-registration
14:24:51 - Skipping auto-registration
14:24:51 - Table EXCHANGE_ACCOUNTS created
14:24:51 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:51 - Table STRATEGIES created
14:24:51 - Auto-increment added to STRATEGIES.ID
14:24:51 - Table POSITIONS created
14:24:51 - Auto-increment added to POSITIONS.ID
14:24:51 - Table ORDERS created
14:24:51 - Auto-increment added to ORDERS.ID
14:24:51 - Table TRADES created
14:24:51 - Auto-increment added to TRADES.ID
14:24:51 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:51 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:51 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:51 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:51 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:51 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:51 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:51 - Index IDX_POSITIONS_POSITION_ID created
14:24:51 - Index IDX_POSITIONS_STATUS created
14:24:51 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:51 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:51 - Index IDX_ORDERS_ORDER_ID created
14:24:51 - Index IDX_TRADES_TRADE_ID created
14:24:51 - Index IDX_TRADES_ORDER_ID created
14:24:51 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 18ms
14:24:51 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:51 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:51 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:51 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:51 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:51 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:51 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:24:51 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:51 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:24:51 - Successfully released change log lock
14:24:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:51 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:51 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:51 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:51 - Calling Remote Init...
14:24:51 - ExchangeConfiguration - Dry mode is OFF
14:24:51 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:51 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:51 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:51 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:51 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:51 - Started TradeTest in 0.639 seconds (JVM running for 9.375)
14:24:51 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=NEW_ORDER, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=null, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:24:51 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=NEW_TRADE, type=BID, orderId=NEW_ORDER, currencyPair=ETH/BTC, amount=1.100003 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=null, timestamp=2020-09-01T00:00Z[Etc/UTC])

[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.836 s - in tech.cassandre.trading.bot.test.domain.TradeTest
14:24:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:51 - HikariPool-4 - Shutdown initiated...
14:24:51 - HikariPool-4 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
14:24:52.557 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:24:52.564 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:24:52.589 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:24:52.596 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest], using SpringBootContextLoader
14:24:52.599 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountExistingTest-context.xml] does not exist
14:24:52.599 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountExistingTestContext.groovy] does not exist
14:24:52.600 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:24:52.600 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: ExchangeAccountExistingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:24:52.671 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:24:52.672 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
14:24:52.726 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: using defaults.
14:24:52.726 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:24:52.733 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:24:52.739 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1339e7aa, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fb669c3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@49c66ade, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6239aba6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e6104fc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12359a82, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68df9280, org.springframework.test.context.event.EventPublishingTestExecutionListener@479460a6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7164ca4c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a220c9a]
14:24:52.741 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@132e0cc testClass = ExchangeAccountExistingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = ExchangeAccountExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:24:52.750 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@132e0cc testClass = ExchangeAccountExistingTest, testInstance = tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest@4b41dd5c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = ExchangeAccountExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:24:52.764 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:24:52.767 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:52 - Starting ExchangeAccountExistingTest using Java 11.0.17 on repairnator with PID 20912 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:52 - The following profiles are active: schedule-disabled
14:24:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:53 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
14:24:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:53 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
14:24:54 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:54 - HikariPool-1 - Starting...
14:24:54 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:54 - HikariPool-1 - Start completed.
14:24:54 - Successfully acquired change log lock
14:24:54 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:54 - Reading from PUBLIC.DATABASECHANGELOG
14:24:54 - Successfully released change log lock
14:24:54 - Successfully acquired change log lock
Skipping auto-registration
14:24:54 - Skipping auto-registration
14:24:54 - Table EXCHANGE_ACCOUNTS created
14:24:54 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:54 - Table STRATEGIES created
14:24:54 - Auto-increment added to STRATEGIES.ID
14:24:54 - Table POSITIONS created
14:24:54 - Auto-increment added to POSITIONS.ID
14:24:54 - Table ORDERS created
14:24:54 - Auto-increment added to ORDERS.ID
14:24:54 - Table TRADES created
14:24:54 - Auto-increment added to TRADES.ID
14:24:54 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:54 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:54 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:54 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:54 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:54 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:54 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:54 - Index IDX_POSITIONS_POSITION_ID created
14:24:54 - Index IDX_POSITIONS_STATUS created
14:24:54 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:54 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:54 - Index IDX_ORDERS_ORDER_ID created
14:24:54 - Index IDX_TRADES_TRADE_ID created
14:24:54 - Index IDX_TRADES_ORDER_ID created
14:24:54 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:24:54 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:54 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:54 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:54 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:54 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:54 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:54 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:24:54 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:54 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:24:54 - Successfully released change log lock
14:24:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:55 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:24:55 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:24:55 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:56 - Calling Remote Init...
14:24:56 - ExchangeConfiguration - Dry mode is OFF
14:24:56 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:56 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:56 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:56 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:57 - Started ExchangeAccountExistingTest in 4.277 seconds (JVM running for 5.088)
14:24:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:57 - HikariPool-1 - Shutdown initiated...
14:24:57 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:57 - Starting ExchangeAccountExistingTest using Java 11.0.17 on repairnator with PID 20912 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:57 - The following profiles are active: schedule-disabled
14:24:57 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:57 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:24:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:57 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:24:57 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:24:57 - HikariPool-2 - Starting...
14:24:57 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:24:57 - HikariPool-2 - Start completed.
14:24:57 - Successfully acquired change log lock
14:24:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:24:57 - Reading from PUBLIC.DATABASECHANGELOG
14:24:57 - Successfully released change log lock
14:24:57 - Successfully acquired change log lock
Skipping auto-registration
14:24:57 - Skipping auto-registration
14:24:57 - Table EXCHANGE_ACCOUNTS created
14:24:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:24:57 - Table STRATEGIES created
14:24:57 - Auto-increment added to STRATEGIES.ID
14:24:57 - Table POSITIONS created
14:24:57 - Auto-increment added to POSITIONS.ID
14:24:57 - Table ORDERS created
14:24:57 - Auto-increment added to ORDERS.ID
14:24:57 - Table TRADES created
14:24:57 - Auto-increment added to TRADES.ID
14:24:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:24:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:24:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:24:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:24:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:24:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:24:57 - Index IDX_STRATEGIES_STRATEGY_ID created
14:24:57 - Index IDX_POSITIONS_POSITION_ID created
14:24:57 - Index IDX_POSITIONS_STATUS created
14:24:57 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:24:57 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:24:57 - Index IDX_ORDERS_ORDER_ID created
14:24:57 - Index IDX_TRADES_TRADE_ID created
14:24:57 - Index IDX_TRADES_ORDER_ID created
14:24:57 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:24:57 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:24:57 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:24:57 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:24:57 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:24:57 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:24:57 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:24:57 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:24:57 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:24:57 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:24:57 - Successfully released change log lock
14:24:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:24:57 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:24:57 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:24:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:24:57 - Calling Remote Init...
14:24:57 - ExchangeConfiguration - Dry mode is OFF
14:24:57 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:24:57 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:24:57 - StrategyConfiguration - Accounts available : 'null/null'.
14:24:57 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:24:57 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:24:57 - Started ExchangeAccountExistingTest in 0.784 seconds (JVM running for 5.894)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.401 s - in tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
14:24:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:24:57 - HikariPool-2 - Shutdown initiated...
14:24:57 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
14:24:58.980 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:24:58.987 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:24:59.012 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:24:59.020 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest], using SpringBootContextLoader
14:24:59.022 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountTest-context.xml] does not exist
14:24:59.022 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountTestContext.groovy] does not exist
14:24:59.023 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:24:59.023 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: ExchangeAccountTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:24:59.105 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:24:59.106 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
14:24:59.162 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: using defaults.
14:24:59.163 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:24:59.168 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:24:59.173 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@12359a82, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@68df9280, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@479460a6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7164ca4c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4f3bbf68, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5be46f9d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3f91b517, org.springframework.test.context.event.EventPublishingTestExecutionListener@68702e03, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@338c99c8, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@21ba0741]
14:24:59.175 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@15713d56 testClass = ExchangeAccountTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63f259c3 testClass = ExchangeAccountTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3232a28a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@28f2a10f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1e04fa0a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@2c35e847, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c7f66c4, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:24:59.185 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@15713d56 testClass = ExchangeAccountTest, testInstance = tech.cassandre.trading.bot.test.domain.ExchangeAccountTest@56928307, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@63f259c3 testClass = ExchangeAccountTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3232a28a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@28f2a10f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1e04fa0a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@2c35e847, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c7f66c4, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:24:59.197 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:24:59.202 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:24:59 - Starting ExchangeAccountTest using Java 11.0.17 on repairnator with PID 21313 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:24:59 - The following profiles are active: schedule-disabled
14:24:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:24:59 - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
14:25:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:00 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:25:00 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:00 - HikariPool-1 - Starting...
14:25:00 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:00 - HikariPool-1 - Start completed.
14:25:00 - Successfully acquired change log lock
14:25:01 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:01 - Reading from PUBLIC.DATABASECHANGELOG
14:25:01 - Successfully released change log lock
14:25:01 - Successfully acquired change log lock
Skipping auto-registration
14:25:01 - Skipping auto-registration
14:25:01 - Table EXCHANGE_ACCOUNTS created
14:25:01 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:01 - Table STRATEGIES created
14:25:01 - Auto-increment added to STRATEGIES.ID
14:25:01 - Table POSITIONS created
14:25:01 - Auto-increment added to POSITIONS.ID
14:25:01 - Table ORDERS created
14:25:01 - Auto-increment added to ORDERS.ID
14:25:01 - Table TRADES created
14:25:01 - Auto-increment added to TRADES.ID
14:25:01 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:01 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:01 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:01 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:01 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:01 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:01 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:01 - Index IDX_POSITIONS_POSITION_ID created
14:25:01 - Index IDX_POSITIONS_STATUS created
14:25:01 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:01 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:01 - Index IDX_ORDERS_ORDER_ID created
14:25:01 - Index IDX_TRADES_TRADE_ID created
14:25:01 - Index IDX_TRADES_ORDER_ID created
14:25:01 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:25:01 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:01 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:01 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:01 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:01 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:01 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:01 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 3ms
14:25:01 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:01 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:01 - Successfully released change log lock
14:25:01 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:01 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:01 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:01 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:02 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:03 - Calling Remote Init...
14:25:03 - ExchangeConfiguration - Dry mode is OFF
14:25:03 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:03 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:03 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:03 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:03 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:03 - Started ExchangeAccountTest in 4.164 seconds (JVM running for 4.998)
14:25:03 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:03 - HikariPool-1 - Shutdown initiated...
14:25:03 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:03 - Starting ExchangeAccountTest using Java 11.0.17 on repairnator with PID 21313 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:03 - The following profiles are active: schedule-disabled
14:25:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:03 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:25:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:03 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:25:03 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:03 - HikariPool-2 - Starting...
14:25:03 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:03 - HikariPool-2 - Start completed.
14:25:03 - Successfully acquired change log lock
14:25:03 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:03 - Reading from PUBLIC.DATABASECHANGELOG
14:25:03 - Successfully released change log lock
14:25:03 - Successfully acquired change log lock
Skipping auto-registration
14:25:03 - Skipping auto-registration
14:25:03 - Table EXCHANGE_ACCOUNTS created
14:25:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:03 - Table STRATEGIES created
14:25:03 - Auto-increment added to STRATEGIES.ID
14:25:03 - Table POSITIONS created
14:25:03 - Auto-increment added to POSITIONS.ID
14:25:03 - Table ORDERS created
14:25:03 - Auto-increment added to ORDERS.ID
14:25:03 - Table TRADES created
14:25:03 - Auto-increment added to TRADES.ID
14:25:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:03 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:03 - Index IDX_POSITIONS_POSITION_ID created
14:25:03 - Index IDX_POSITIONS_STATUS created
14:25:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:03 - Index IDX_ORDERS_ORDER_ID created
14:25:03 - Index IDX_TRADES_TRADE_ID created
14:25:03 - Index IDX_TRADES_ORDER_ID created
14:25:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
14:25:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:25:03 - Successfully released change log lock
14:25:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:03 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:04 - Calling Remote Init...
14:25:04 - ExchangeConfiguration - Dry mode is OFF
14:25:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:04 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:04 - Started ExchangeAccountTest in 0.779 seconds (JVM running for 5.799)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.297 s - in tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
14:25:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:04 - HikariPool-2 - Shutdown initiated...
14:25:04 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.PositionTest
14:25:05.286 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:25:05.293 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:25:05.317 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.PositionTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:25:05.325 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.PositionTest], using SpringBootContextLoader
14:25:05.327 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: class path resource [tech/cassandre/trading/bot/test/domain/PositionTest-context.xml] does not exist
14:25:05.327 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: class path resource [tech/cassandre/trading/bot/test/domain/PositionTestContext.groovy] does not exist
14:25:05.328 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:25:05.328 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: PositionTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:25:05.399 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:25:05.399 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.PositionTest
14:25:05.453 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.PositionTest]: using defaults.
14:25:05.453 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:25:05.459 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:25:05.464 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@70f02c32, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@62010f5c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@51fadaff, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@401f7633, org.springframework.test.context.support.DirtiesContextTestExecutionListener@31ff43be, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5b6ec132, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5c44c582, org.springframework.test.context.event.EventPublishingTestExecutionListener@67d18ed7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2c78d320, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6cc558c6]
14:25:05.466 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@78641d23 testClass = PositionTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74589991 testClass = PositionTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@611889f4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2f217633, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@c88a337, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@36916eb0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:25:05.507 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@78641d23 testClass = PositionTest, testInstance = tech.cassandre.trading.bot.test.domain.PositionTest@6d025197, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@74589991 testClass = PositionTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@611889f4, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2f217633, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@c88a337, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@36916eb0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:25:05.519 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:25:05.522 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:05 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21645 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:05 - The following profiles are active: schedule-disabled
14:25:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:06 - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
14:25:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:06 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:25:06 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:06 - HikariPool-1 - Starting...
14:25:06 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:06 - HikariPool-1 - Start completed.
14:25:07 - Successfully acquired change log lock
14:25:07 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:07 - Reading from PUBLIC.DATABASECHANGELOG
14:25:07 - Successfully released change log lock
14:25:07 - Successfully acquired change log lock
Skipping auto-registration
14:25:07 - Skipping auto-registration
14:25:07 - Table EXCHANGE_ACCOUNTS created
14:25:07 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:07 - Table STRATEGIES created
14:25:07 - Auto-increment added to STRATEGIES.ID
14:25:07 - Table POSITIONS created
14:25:07 - Auto-increment added to POSITIONS.ID
14:25:07 - Table ORDERS created
14:25:07 - Auto-increment added to ORDERS.ID
14:25:07 - Table TRADES created
14:25:07 - Auto-increment added to TRADES.ID
14:25:07 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:07 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:07 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:07 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:07 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:07 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:07 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:07 - Index IDX_POSITIONS_POSITION_ID created
14:25:07 - Index IDX_POSITIONS_STATUS created
14:25:07 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:07 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:07 - Index IDX_ORDERS_ORDER_ID created
14:25:07 - Index IDX_TRADES_TRADE_ID created
14:25:07 - Index IDX_TRADES_ORDER_ID created
14:25:07 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:25:07 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:07 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:07 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:07 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:07 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:07 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:07 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:07 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:07 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:07 - Successfully released change log lock
14:25:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:07 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:07 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:07 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:08 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:09 - Calling Remote Init...
14:25:09 - ExchangeConfiguration - Dry mode is ON
14:25:09 - Adding account 'main'
14:25:09 - - Adding balance 99.0001 BTC
14:25:09 - Adding account 'savings'
14:25:09 - - Adding balance 1.1 BTC
14:25:09 - - Adding balance 2.2 USDT
14:25:09 - - Adding balance 3.3 ETH
14:25:09 - Adding account 'trade'
14:25:09 - - Adding balance 0.99962937 BTC
14:25:09 - - Adding balance 1000 USDT
14:25:09 - - Adding balance 10 ETH
14:25:09 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:09 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:25:09 - StrategyConfiguration - Accounts available : 'main/main'.
14:25:09 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:25:09 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:09 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:09 - Started PositionTest in 4.336 seconds (JVM running for 5.16)
14:25:09 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:09 - HikariPool-1 - Shutdown initiated...
14:25:09 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:09 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21645 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:09 - The following profiles are active: schedule-disabled
14:25:09 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:25:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:10 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:25:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:10 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:25:10 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:10 - HikariPool-2 - Starting...
14:25:10 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:10 - HikariPool-2 - Start completed.
14:25:10 - Successfully acquired change log lock
14:25:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:10 - Reading from PUBLIC.DATABASECHANGELOG
14:25:10 - Successfully released change log lock
14:25:10 - Successfully acquired change log lock
Skipping auto-registration
14:25:10 - Skipping auto-registration
14:25:10 - Table EXCHANGE_ACCOUNTS created
14:25:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:10 - Table STRATEGIES created
14:25:10 - Auto-increment added to STRATEGIES.ID
14:25:10 - Table POSITIONS created
14:25:10 - Auto-increment added to POSITIONS.ID
14:25:10 - Table ORDERS created
14:25:10 - Auto-increment added to ORDERS.ID
14:25:10 - Table TRADES created
14:25:10 - Auto-increment added to TRADES.ID
14:25:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:10 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:10 - Index IDX_POSITIONS_POSITION_ID created
14:25:10 - Index IDX_POSITIONS_STATUS created
14:25:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:10 - Index IDX_ORDERS_ORDER_ID created
14:25:10 - Index IDX_TRADES_TRADE_ID created
14:25:10 - Index IDX_TRADES_ORDER_ID created
14:25:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:25:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:25:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:25:10 - Successfully released change log lock
14:25:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:10 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:10 - Calling Remote Init...
14:25:10 - ExchangeConfiguration - Dry mode is ON
14:25:10 - Adding account 'main'
14:25:10 - - Adding balance 99.0001 BTC
14:25:10 - Adding account 'savings'
14:25:10 - - Adding balance 1.1 BTC
14:25:10 - - Adding balance 2.2 USDT
14:25:10 - - Adding balance 3.3 ETH
14:25:10 - Adding account 'trade'
14:25:10 - - Adding balance 0.99962937 BTC
14:25:10 - - Adding balance 1000 USDT
14:25:10 - - Adding balance 10 ETH
14:25:10 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:10 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:25:10 - StrategyConfiguration - Accounts available : 'main/main'.
14:25:10 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:25:10 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:10 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:10 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:25:10 - Started PositionTest in 0.858 seconds (JVM running for 6.045)
14:25:10 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:10 - HikariPool-2 - Shutdown initiated...
14:25:10 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:10 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21645 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:10 - The following profiles are active: schedule-disabled
14:25:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:10 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
14:25:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:10 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:25:11 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:11 - HikariPool-3 - Starting...
14:25:11 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:11 - HikariPool-3 - Start completed.
14:25:11 - Successfully acquired change log lock
14:25:11 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:11 - Reading from PUBLIC.DATABASECHANGELOG
14:25:11 - Successfully released change log lock
14:25:11 - Successfully acquired change log lock
Skipping auto-registration
14:25:11 - Skipping auto-registration
14:25:11 - Table EXCHANGE_ACCOUNTS created
14:25:11 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:11 - Table STRATEGIES created
14:25:11 - Auto-increment added to STRATEGIES.ID
14:25:11 - Table POSITIONS created
14:25:11 - Auto-increment added to POSITIONS.ID
14:25:11 - Table ORDERS created
14:25:11 - Auto-increment added to ORDERS.ID
14:25:11 - Table TRADES created
14:25:11 - Auto-increment added to TRADES.ID
14:25:11 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:11 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:11 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:11 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:11 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:11 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:11 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:11 - Index IDX_POSITIONS_POSITION_ID created
14:25:11 - Index IDX_POSITIONS_STATUS created
14:25:11 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:11 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:11 - Index IDX_ORDERS_ORDER_ID created
14:25:11 - Index IDX_TRADES_TRADE_ID created
14:25:11 - Index IDX_TRADES_ORDER_ID created
14:25:11 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 16ms
14:25:11 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:11 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:11 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:11 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:11 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:11 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:11 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:25:11 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:11 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:25:11 - Successfully released change log lock
14:25:11 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:11 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:11 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:11 - Calling Remote Init...
14:25:11 - ExchangeConfiguration - Dry mode is ON
14:25:11 - Adding account 'main'
14:25:11 - - Adding balance 99.0001 BTC
14:25:11 - Adding account 'savings'
14:25:11 - - Adding balance 1.1 BTC
14:25:11 - - Adding balance 2.2 USDT
14:25:11 - - Adding balance 3.3 ETH
14:25:11 - Adding account 'trade'
14:25:11 - - Adding balance 0.99962937 BTC
14:25:11 - - Adding balance 1000 USDT
14:25:11 - - Adding balance 10 ETH
14:25:11 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:11 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:25:11 - StrategyConfiguration - Accounts available : 'main/main'.
14:25:11 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:25:11 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:11 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:11 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:25:11 - Started PositionTest in 0.608 seconds (JVM running for 6.776)
14:25:11 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:25:12 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:25:12 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:12 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:25:13 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:13 - HikariPool-3 - Shutdown initiated...
14:25:13 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:13 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21645 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:13 - The following profiles are active: schedule-disabled
14:25:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:13 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
14:25:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:13 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:25:13 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:13 - HikariPool-4 - Starting...
14:25:13 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:13 - HikariPool-4 - Start completed.
14:25:13 - Successfully acquired change log lock
14:25:13 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:13 - Reading from PUBLIC.DATABASECHANGELOG
14:25:13 - Successfully released change log lock
14:25:13 - Successfully acquired change log lock
Skipping auto-registration
14:25:13 - Skipping auto-registration
14:25:13 - Table EXCHANGE_ACCOUNTS created
14:25:13 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:13 - Table STRATEGIES created
14:25:13 - Auto-increment added to STRATEGIES.ID
14:25:13 - Table POSITIONS created
14:25:13 - Auto-increment added to POSITIONS.ID
14:25:13 - Table ORDERS created
14:25:13 - Auto-increment added to ORDERS.ID
14:25:13 - Table TRADES created
14:25:13 - Auto-increment added to TRADES.ID
14:25:13 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:13 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:13 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:13 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:13 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:13 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:13 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:13 - Index IDX_POSITIONS_POSITION_ID created
14:25:13 - Index IDX_POSITIONS_STATUS created
14:25:13 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:13 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:13 - Index IDX_ORDERS_ORDER_ID created
14:25:13 - Index IDX_TRADES_TRADE_ID created
14:25:13 - Index IDX_TRADES_ORDER_ID created
14:25:13 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 13ms
14:25:13 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:13 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:13 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:13 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:13 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:13 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:13 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:25:13 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:13 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:13 - Successfully released change log lock
14:25:13 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:13 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:14 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:14 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:14 - Calling Remote Init...
14:25:14 - ExchangeConfiguration - Dry mode is ON
14:25:14 - Adding account 'main'
14:25:14 - - Adding balance 99.0001 BTC
14:25:14 - Adding account 'savings'
14:25:14 - - Adding balance 1.1 BTC
14:25:14 - - Adding balance 2.2 USDT
14:25:14 - - Adding balance 3.3 ETH
14:25:14 - Adding account 'trade'
14:25:14 - - Adding balance 0.99962937 BTC
14:25:14 - - Adding balance 1000 USDT
14:25:14 - - Adding balance 10 ETH
14:25:14 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:14 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:25:14 - StrategyConfiguration - Accounts available : 'main/main'.
14:25:14 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:25:14 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:14 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:14 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:25:14 - Started PositionTest in 0.637 seconds (JVM running for 9.536)
14:25:14 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.01, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:25:14 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:15 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:15 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:15 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=0.01 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:25:16 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:16 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1 ETH, price=0.01 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:25:16 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:17 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=0.01 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:17 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:25:17.321186Z[Etc/UTC])

14:25:17 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=7, positionId=7, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0002 ETH, rules=No rules, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:18 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:18 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.02, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:25:18.334696Z[Etc/UTC])

14:25:18 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=7, positionId=7, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0002 ETH, rules=No rules, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:19 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:25:19 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.03, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:25:19.344658Z[Etc/UTC])

14:25:20 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.06 BTC, latestGainPrice=0.06 BTC)

14:25:20 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.005, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:25:20.357763Z[Etc/UTC])

14:25:21 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.02 BTC, highestGainPrice=0.06000000 BTC, latestGainPrice=0.02 BTC)

14:25:21 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.07, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:25:21.371683Z[Etc/UTC])

14:25:21 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=12, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:25:21 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=12, tradeId=000002, type=ASK, orderId=DRY_ORDER_000000002, currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

14:25:22 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.02000000 BTC, highestGainPrice=0.06000000 BTC, latestGainPrice=0.03 BTC)

14:25:22 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=13, tradeId=000003, type=ASK, orderId=DRY_ORDER_000000002, currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.2 s - in tech.cassandre.trading.bot.test.domain.PositionTest
14:25:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:22 - HikariPool-4 - Shutdown initiated...
14:25:22 - HikariPool-4 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.StrategyExistingTest
14:25:23.481 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:25:23.488 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:25:23.518 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:25:23.531 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest], using SpringBootContextLoader
14:25:23.534 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyExistingTest-context.xml] does not exist
14:25:23.535 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyExistingTestContext.groovy] does not exist
14:25:23.535 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:25:23.535 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: StrategyExistingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:25:23.606 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:25:23.606 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.StrategyExistingTest
14:25:23.660 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: using defaults.
14:25:23.660 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:25:23.666 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:25:23.671 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1339e7aa, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fb669c3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@49c66ade, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6239aba6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e6104fc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12359a82, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68df9280, org.springframework.test.context.event.EventPublishingTestExecutionListener@479460a6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7164ca4c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a220c9a]
14:25:23.673 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@132e0cc testClass = StrategyExistingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = StrategyExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:25:23.683 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@132e0cc testClass = StrategyExistingTest, testInstance = tech.cassandre.trading.bot.test.domain.StrategyExistingTest@4b41dd5c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = StrategyExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:25:23.695 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:25:23.698 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:23 - Starting StrategyExistingTest using Java 11.0.17 on repairnator with PID 22398 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:23 - The following profiles are active: schedule-disabled
14:25:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:24 - Finished Spring Data repository scanning in 149 ms. Found 5 JPA repository interfaces.
14:25:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:24 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:25:24 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:24 - HikariPool-1 - Starting...
14:25:25 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:25 - HikariPool-1 - Start completed.
14:25:25 - Successfully acquired change log lock
14:25:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:25 - Reading from PUBLIC.DATABASECHANGELOG
14:25:25 - Successfully released change log lock
14:25:25 - Successfully acquired change log lock
Skipping auto-registration
14:25:25 - Skipping auto-registration
14:25:25 - Table EXCHANGE_ACCOUNTS created
14:25:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:25 - Table STRATEGIES created
14:25:25 - Auto-increment added to STRATEGIES.ID
14:25:25 - Table POSITIONS created
14:25:25 - Auto-increment added to POSITIONS.ID
14:25:25 - Table ORDERS created
14:25:25 - Auto-increment added to ORDERS.ID
14:25:25 - Table TRADES created
14:25:25 - Auto-increment added to TRADES.ID
14:25:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:25 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:25 - Index IDX_POSITIONS_POSITION_ID created
14:25:25 - Index IDX_POSITIONS_STATUS created
14:25:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:25 - Index IDX_ORDERS_ORDER_ID created
14:25:25 - Index IDX_TRADES_TRADE_ID created
14:25:25 - Index IDX_TRADES_ORDER_ID created
14:25:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:25:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:25 - Successfully released change log lock
14:25:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:26 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:26 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:27 - Calling Remote Init...
14:25:27 - ExchangeConfiguration - Dry mode is OFF
14:25:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:27 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:27 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:27 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:27 - Started StrategyExistingTest in 4.272 seconds (JVM running for 5.065)
14:25:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:28 - HikariPool-1 - Shutdown initiated...
14:25:28 - HikariPool-1 - Shutdown completed.
14:25:28 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:28 - Starting StrategyExistingTest using Java 11.0.17 on repairnator with PID 22398 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:28 - The following profiles are active: schedule-disabled
14:25:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:28 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:25:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:28 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:25:28 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:28 - HikariPool-2 - Starting...
14:25:28 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:28 - HikariPool-2 - Start completed.
14:25:28 - Successfully acquired change log lock
14:25:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:28 - Reading from PUBLIC.DATABASECHANGELOG
14:25:28 - Successfully released change log lock
14:25:28 - Successfully acquired change log lock
Skipping auto-registration
14:25:28 - Skipping auto-registration
14:25:28 - Table EXCHANGE_ACCOUNTS created
14:25:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:28 - Table STRATEGIES created
14:25:28 - Auto-increment added to STRATEGIES.ID
14:25:28 - Table POSITIONS created
14:25:28 - Auto-increment added to POSITIONS.ID
14:25:28 - Table ORDERS created
14:25:28 - Auto-increment added to ORDERS.ID
14:25:28 - Table TRADES created
14:25:28 - Auto-increment added to TRADES.ID
14:25:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:28 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:28 - Index IDX_POSITIONS_POSITION_ID created
14:25:28 - Index IDX_POSITIONS_STATUS created
14:25:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:28 - Index IDX_ORDERS_ORDER_ID created
14:25:28 - Index IDX_TRADES_TRADE_ID created
14:25:28 - Index IDX_TRADES_ORDER_ID created
14:25:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
14:25:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
14:25:28 - Successfully released change log lock
14:25:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:28 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:28 - Calling Remote Init...
14:25:28 - ExchangeConfiguration - Dry mode is OFF
14:25:28 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:28 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:28 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:28 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

14:25:28 - Started StrategyExistingTest in 0.769 seconds (JVM running for 5.897)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.406 s - in tech.cassandre.trading.bot.test.domain.StrategyExistingTest
14:25:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:28 - HikariPool-2 - Shutdown initiated...
14:25:28 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.StrategyTest
14:25:29.812 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:25:29.819 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:25:29.845 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.StrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:25:29.853 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.StrategyTest], using SpringBootContextLoader
14:25:29.855 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyTest-context.xml] does not exist
14:25:29.856 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyTestContext.groovy] does not exist
14:25:29.856 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:25:29.856 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: StrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:25:29.925 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:25:29.926 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.StrategyTest
14:25:29.981 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.StrategyTest]: using defaults.
14:25:29.981 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:25:29.987 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:25:29.993 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1339e7aa, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fb669c3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@49c66ade, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6239aba6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3e6104fc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@12359a82, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@68df9280, org.springframework.test.context.event.EventPublishingTestExecutionListener@479460a6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7164ca4c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a220c9a]
14:25:29.994 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@132e0cc testClass = StrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = StrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:25:30.011 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@132e0cc testClass = StrategyTest, testInstance = tech.cassandre.trading.bot.test.domain.StrategyTest@4b41dd5c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b205dbd testClass = StrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:25:30.031 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:25:30.035 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:30 - Starting StrategyTest using Java 11.0.17 on repairnator with PID 22839 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:30 - The following profiles are active: schedule-disabled
14:25:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:30 - Finished Spring Data repository scanning in 138 ms. Found 5 JPA repository interfaces.
14:25:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:30 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:25:31 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:31 - HikariPool-1 - Starting...
14:25:31 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:31 - HikariPool-1 - Start completed.
14:25:31 - Successfully acquired change log lock
14:25:32 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:32 - Reading from PUBLIC.DATABASECHANGELOG
14:25:32 - Successfully released change log lock
14:25:32 - Successfully acquired change log lock
Skipping auto-registration
14:25:32 - Skipping auto-registration
14:25:32 - Table EXCHANGE_ACCOUNTS created
14:25:32 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:32 - Table STRATEGIES created
14:25:32 - Auto-increment added to STRATEGIES.ID
14:25:32 - Table POSITIONS created
14:25:32 - Auto-increment added to POSITIONS.ID
14:25:32 - Table ORDERS created
14:25:32 - Auto-increment added to ORDERS.ID
14:25:32 - Table TRADES created
14:25:32 - Auto-increment added to TRADES.ID
14:25:32 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:32 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:32 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:32 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:32 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:32 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:32 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:32 - Index IDX_POSITIONS_POSITION_ID created
14:25:32 - Index IDX_POSITIONS_STATUS created
14:25:32 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:32 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:32 - Index IDX_ORDERS_ORDER_ID created
14:25:32 - Index IDX_TRADES_TRADE_ID created
14:25:32 - Index IDX_TRADES_ORDER_ID created
14:25:32 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:25:32 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:32 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:32 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:32 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:32 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:32 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:32 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:32 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:32 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:32 - Successfully released change log lock
14:25:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:32 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:32 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:32 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:33 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:33 - Calling Remote Init...
14:25:33 - ExchangeConfiguration - Dry mode is OFF
14:25:33 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:33 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:34 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:34 - Started StrategyTest in 4.165 seconds (JVM running for 4.922)
14:25:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:34 - HikariPool-1 - Shutdown initiated...
14:25:34 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:34 - Starting StrategyTest using Java 11.0.17 on repairnator with PID 22839 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:34 - The following profiles are active: schedule-disabled
14:25:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:34 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
14:25:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:34 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:25:34 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:34 - HikariPool-2 - Starting...
14:25:34 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:34 - HikariPool-2 - Start completed.
14:25:34 - Successfully acquired change log lock
14:25:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:34 - Reading from PUBLIC.DATABASECHANGELOG
14:25:34 - Successfully released change log lock
14:25:34 - Successfully acquired change log lock
Skipping auto-registration
14:25:34 - Skipping auto-registration
14:25:34 - Table EXCHANGE_ACCOUNTS created
14:25:34 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:34 - Table STRATEGIES created
14:25:34 - Auto-increment added to STRATEGIES.ID
14:25:34 - Table POSITIONS created
14:25:34 - Auto-increment added to POSITIONS.ID
14:25:34 - Table ORDERS created
14:25:34 - Auto-increment added to ORDERS.ID
14:25:34 - Table TRADES created
14:25:34 - Auto-increment added to TRADES.ID
14:25:34 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:34 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:34 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:34 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:34 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:34 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:34 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:34 - Index IDX_POSITIONS_POSITION_ID created
14:25:34 - Index IDX_POSITIONS_STATUS created
14:25:34 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:34 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:34 - Index IDX_ORDERS_ORDER_ID created
14:25:34 - Index IDX_TRADES_TRADE_ID created
14:25:34 - Index IDX_TRADES_ORDER_ID created
14:25:34 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:25:34 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:34 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:34 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:34 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:34 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:34 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:34 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:34 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:34 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:25:34 - Successfully released change log lock
14:25:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:34 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:34 - Calling Remote Init...
14:25:34 - ExchangeConfiguration - Dry mode is OFF
14:25:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:34 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:34 - StrategyConfiguration - Accounts available : 'null/null'.
14:25:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:34 - Started StrategyTest in 0.739 seconds (JVM running for 5.686)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.243 s - in tech.cassandre.trading.bot.test.domain.StrategyTest
14:25:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:35 - HikariPool-2 - Shutdown initiated...
14:25:35 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.batch.AccountFluxTest
14:25:36.073 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:25:36.080 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:25:36.105 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:25:36.112 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest], using SpringBootContextLoader
14:25:36.115 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/AccountFluxTest-context.xml] does not exist
14:25:36.115 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/AccountFluxTestContext.groovy] does not exist
14:25:36.115 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:25:36.115 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: AccountFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:25:36.147 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]
14:25:36.189 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:25:36.190 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.AccountFluxTest
14:25:36.246 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: using defaults.
14:25:36.246 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:25:36.252 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:25:36.257 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8576fa0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7582ff54, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@67545b57, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6c2c1385, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5f354bcf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3daf7722, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78641d23, org.springframework.test.context.event.EventPublishingTestExecutionListener@74589991, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@146dfe6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4716be8b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1869fbd2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6af9fcb2]
14:25:36.259 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1458ed9c testClass = AccountFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10a9d961 testClass = AccountFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@130e116b key = [tech.cassandre.trading.bot.test.batch.AccountFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:25:36.301 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1458ed9c testClass = AccountFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.AccountFluxTest@177bea38, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10a9d961 testClass = AccountFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@130e116b key = [tech.cassandre.trading.bot.test.batch.AccountFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:25:36.313 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:36 - Starting AccountFluxTest using Java 11.0.17 on repairnator with PID 23125 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:36 - No active profile set, falling back to default profiles: default
14:25:36 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:37 - Finished Spring Data repository scanning in 149 ms. Found 5 JPA repository interfaces.
14:25:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:37 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:25:37 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:37 - HikariPool-1 - Starting...
14:25:37 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:37 - HikariPool-1 - Start completed.
14:25:38 - Successfully acquired change log lock
14:25:38 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:38 - Reading from PUBLIC.DATABASECHANGELOG
14:25:38 - Successfully released change log lock
14:25:38 - Successfully acquired change log lock
Skipping auto-registration
14:25:38 - Skipping auto-registration
14:25:38 - Table EXCHANGE_ACCOUNTS created
14:25:38 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:38 - Table STRATEGIES created
14:25:38 - Auto-increment added to STRATEGIES.ID
14:25:38 - Table POSITIONS created
14:25:38 - Auto-increment added to POSITIONS.ID
14:25:38 - Table ORDERS created
14:25:38 - Auto-increment added to ORDERS.ID
14:25:38 - Table TRADES created
14:25:38 - Auto-increment added to TRADES.ID
14:25:38 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:38 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:38 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:38 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:38 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:38 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:38 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:38 - Index IDX_POSITIONS_POSITION_ID created
14:25:38 - Index IDX_POSITIONS_STATUS created
14:25:38 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:38 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:38 - Index IDX_ORDERS_ORDER_ID created
14:25:38 - Index IDX_TRADES_TRADE_ID created
14:25:38 - Index IDX_TRADES_ORDER_ID created
14:25:38 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:25:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:38 - Successfully released change log lock
14:25:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:38 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:38 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:38 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 5
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 5
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
14:25:40 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
14:25:40 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
14:25:40 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
14:25:40 - 11 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 59
14:25:40 - Calling Remote Init...
14:25:40 - ExchangeConfiguration - Dry mode is OFF
14:25:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:40 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:40 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:40 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:25:40 - Started AccountFluxTest in 4.412 seconds (JVM running for 5.265)
14:25:41 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

14:25:42 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=02, name=Account 02, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1)})

14:25:43 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

14:25:44 - TestableStrategy-onAccountUpdate 004 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=5, withdrawing=2, depositing=2), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

14:25:45 - TestableStrategy-onAccountUpdate 005 : AccountDTO(accountId=02, name=Account 02, features=[], balances={BTC=BalanceDTO(currency=BTC, total=3, available=3, frozen=3, loaned=3, borrowed=3, withdrawing=3, depositing=3)})

14:25:46 - TestableStrategy-onAccountUpdate 006 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

14:25:47 - TestableStrategy-onAccountUpdate 007 : AccountDTO(accountId=03, name=Account 03, features=[], balances={BTC=BalanceDTO(currency=BTC, total=11, available=12, frozen=13, loaned=15, borrowed=14, withdrawing=16, depositing=17)})

14:25:52 - UserService - InterruptedException : null
14:25:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:25:52 - HikariPool-1 - Shutdown initiated...
14:25:52 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.755 s - in tech.cassandre.trading.bot.test.batch.AccountFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.TickerFluxTest
14:25:53.847 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:25:53.854 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:25:53.882 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:25:53.889 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest], using SpringBootContextLoader
14:25:53.892 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TickerFluxTest-context.xml] does not exist
14:25:53.892 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TickerFluxTestContext.groovy] does not exist
14:25:53.892 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:25:53.893 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: TickerFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:25:53.926 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]
14:25:53.970 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:25:53.971 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.TickerFluxTest
14:25:54.027 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: using defaults.
14:25:54.027 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:25:54.033 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:25:54.038 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@8576fa0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7582ff54, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@67545b57, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6c2c1385, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5f354bcf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3daf7722, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78641d23, org.springframework.test.context.event.EventPublishingTestExecutionListener@74589991, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@146dfe6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4716be8b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1869fbd2, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6af9fcb2]
14:25:54.040 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1458ed9c testClass = TickerFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10a9d961 testClass = TickerFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@130e116b key = [tech.cassandre.trading.bot.test.batch.TickerFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:25:54.101 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1458ed9c testClass = TickerFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.TickerFluxTest@177bea38, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@10a9d961 testClass = TickerFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@130e116b key = [tech.cassandre.trading.bot.test.batch.TickerFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:25:54.113 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:25:54 - Starting TickerFluxTest using Java 11.0.17 on repairnator with PID 23703 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:25:54 - No active profile set, falling back to default profiles: default
14:25:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:54 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
14:25:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:25:54 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:25:55 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:25:55 - HikariPool-1 - Starting...
14:25:55 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:25:55 - HikariPool-1 - Start completed.
14:25:55 - Successfully acquired change log lock
14:25:56 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:25:56 - Reading from PUBLIC.DATABASECHANGELOG
14:25:56 - Successfully released change log lock
14:25:56 - Successfully acquired change log lock
Skipping auto-registration
14:25:56 - Skipping auto-registration
14:25:56 - Table EXCHANGE_ACCOUNTS created
14:25:56 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:25:56 - Table STRATEGIES created
14:25:56 - Auto-increment added to STRATEGIES.ID
14:25:56 - Table POSITIONS created
14:25:56 - Auto-increment added to POSITIONS.ID
14:25:56 - Table ORDERS created
14:25:56 - Auto-increment added to ORDERS.ID
14:25:56 - Table TRADES created
14:25:56 - Auto-increment added to TRADES.ID
14:25:56 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:25:56 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:25:56 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:25:56 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:25:56 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:25:56 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:25:56 - Index IDX_STRATEGIES_STRATEGY_ID created
14:25:56 - Index IDX_POSITIONS_POSITION_ID created
14:25:56 - Index IDX_POSITIONS_STATUS created
14:25:56 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:25:56 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:25:56 - Index IDX_ORDERS_ORDER_ID created
14:25:56 - Index IDX_TRADES_TRADE_ID created
14:25:56 - Index IDX_TRADES_ORDER_ID created
14:25:56 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:25:56 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:25:56 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:25:56 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:25:56 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:25:56 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:25:56 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:25:56 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:25:56 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:25:56 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:25:56 - Successfully released change log lock
14:25:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:25:56 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:25:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:25:56 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:25:57 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:25:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:25:58 - Calling Remote Init...
14:25:58 - ExchangeConfiguration - Dry mode is OFF
14:25:58 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:25:58 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:25:58 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:25:58 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:25:58 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:25:58 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:25:58 - Started TickerFluxTest in 4.385 seconds (JVM running for 5.288)
14:25:59 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:25:59 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-17T14:25:57.763Z[Etc/UTC])

14:26:01 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=10, last=10, bid=10, ask=10, high=10, low=10, vwap=10, volume=10, quoteVolume=10, bidSize=10, askSize=10, timestamp=2023-01-17T14:25:57.771Z[Etc/UTC])

14:26:03 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=2, last=2, bid=2, ask=2, high=2, low=2, vwap=2, volume=2, quoteVolume=2, bidSize=2, askSize=2, timestamp=2023-01-17T14:25:57.765Z[Etc/UTC])

14:26:06 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=20, last=20, bid=20, ask=20, high=20, low=20, vwap=20, volume=20, quoteVolume=20, bidSize=20, askSize=20, timestamp=2023-01-17T14:25:57.772Z[Etc/UTC])

14:26:09 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=3, last=3, bid=3, ask=3, high=3, low=3, vwap=3, volume=3, quoteVolume=3, bidSize=3, askSize=3, timestamp=2023-01-17T14:25:57.766Z[Etc/UTC])

14:26:11 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=30, last=30, bid=30, ask=30, high=30, low=30, vwap=30, volume=30, quoteVolume=30, bidSize=30, askSize=30, timestamp=2023-01-17T14:25:57.773Z[Etc/UTC])

14:26:17 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/USDT, open=40, last=40, bid=40, ask=40, high=40, low=40, vwap=40, volume=40, quoteVolume=40, bidSize=40, askSize=40, timestamp=2023-01-17T14:25:57.774Z[Etc/UTC])

14:26:20 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/BTC, open=4, last=4, bid=4, ask=4, high=4, low=4, vwap=4, volume=4, quoteVolume=4, bidSize=4, askSize=4, timestamp=2023-01-17T14:25:57.761Z[Etc/UTC])

14:26:22 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/USDT, open=50, last=50, bid=50, ask=50, high=50, low=50, vwap=50, volume=50, quoteVolume=50, bidSize=50, askSize=50, timestamp=2023-01-17T14:25:57.775Z[Etc/UTC])

14:26:30 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/BTC, open=5, last=5, bid=5, ask=5, high=5, low=5, vwap=5, volume=5, quoteVolume=5, bidSize=5, askSize=5, timestamp=2023-01-17T14:25:57.767Z[Etc/UTC])

14:26:33 - TestableStrategy-onTickerUpdate 011 : TickerDTO(currencyPair=ETH/USDT, open=60, last=60, bid=60, ask=60, high=60, low=60, vwap=60, volume=60, quoteVolume=60, bidSize=60, askSize=60, timestamp=2023-01-17T14:25:57.776Z[Etc/UTC])

14:26:36 - TestableStrategy-onTickerUpdate 012 : TickerDTO(currencyPair=ETH/BTC, open=6, last=6, bid=6, ask=6, high=6, low=6, vwap=6, volume=6, quoteVolume=6, bidSize=6, askSize=6, timestamp=2023-01-17T14:25:57.768Z[Etc/UTC])

14:26:44 - TestableStrategy-onTickerUpdate 013 : TickerDTO(currencyPair=ETH/USDT, open=70, last=70, bid=70, ask=70, high=70, low=70, vwap=70, volume=70, quoteVolume=70, bidSize=70, askSize=70, timestamp=2023-01-17T14:25:57.777Z[Etc/UTC])

14:26:52 - TradeService - InterruptedException : null
14:26:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:26:52 - HikariPool-1 - Shutdown initiated...
14:26:52 - HikariPool-1 - Shutdown completed.
14:26:52 - TradeService - InterruptedException : null
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 58.751 s - in tech.cassandre.trading.bot.test.batch.TickerFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.OrderFluxTest
14:26:53.530 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:26:53.547 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:26:53.579 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:26:53.589 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest], using SpringBootContextLoader
14:26:53.592 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/OrderFluxTest-context.xml] does not exist
14:26:53.592 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/OrderFluxTestContext.groovy] does not exist
14:26:53.592 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:26:53.593 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: OrderFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:26:53.626 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]
14:26:53.670 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:26:53.670 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.OrderFluxTest
14:26:53.725 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: using defaults.
14:26:53.725 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:26:53.731 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:26:53.736 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1869fbd2, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6af9fcb2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7efaad5a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@291a7e3c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ca30bc1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1046d517, org.springframework.test.context.event.EventPublishingTestExecutionListener@3b7d3a38, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a362b6b]
14:26:53.738 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@66c61024 testClass = OrderFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61fe30 testClass = OrderFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@c9d0d6 key = [tech.cassandre.trading.bot.test.batch.OrderFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1de76cc7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5a56cdac, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@550dbc7a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6253c26, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7d4f9aae, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:26:53.780 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@66c61024 testClass = OrderFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.OrderFluxTest@33308786, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61fe30 testClass = OrderFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@c9d0d6 key = [tech.cassandre.trading.bot.test.batch.OrderFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1de76cc7, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5a56cdac, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@550dbc7a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6253c26, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7d4f9aae, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:26:53.794 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:26:54 - Starting OrderFluxTest using Java 11.0.17 on repairnator with PID 25821 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:26:54 - No active profile set, falling back to default profiles: default
14:26:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:26:54 - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
14:26:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:26:54 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:26:55 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:26:55 - HikariPool-1 - Starting...
14:26:55 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:26:55 - HikariPool-1 - Start completed.
14:26:55 - Successfully acquired change log lock
14:26:55 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:26:55 - Reading from PUBLIC.DATABASECHANGELOG
14:26:55 - Successfully released change log lock
14:26:55 - Successfully acquired change log lock
Skipping auto-registration
14:26:55 - Skipping auto-registration
14:26:55 - Table EXCHANGE_ACCOUNTS created
14:26:55 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:26:55 - Table STRATEGIES created
14:26:55 - Auto-increment added to STRATEGIES.ID
14:26:55 - Table POSITIONS created
14:26:55 - Auto-increment added to POSITIONS.ID
14:26:55 - Table ORDERS created
14:26:55 - Auto-increment added to ORDERS.ID
14:26:55 - Table TRADES created
14:26:55 - Auto-increment added to TRADES.ID
14:26:55 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:26:55 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:26:55 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:26:55 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:26:55 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:26:55 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:26:55 - Index IDX_STRATEGIES_STRATEGY_ID created
14:26:55 - Index IDX_POSITIONS_POSITION_ID created
14:26:55 - Index IDX_POSITIONS_STATUS created
14:26:55 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:26:55 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:26:55 - Index IDX_ORDERS_ORDER_ID created
14:26:55 - Index IDX_TRADES_TRADE_ID created
14:26:55 - Index IDX_TRADES_ORDER_ID created
14:26:55 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 27ms
14:26:55 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:26:55 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:26:55 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:26:55 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:26:55 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:26:55 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:26:55 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:26:55 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:26:55 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:26:55 - Successfully released change log lock
14:26:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:26:56 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:26:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:26:56 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:26:56 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:26:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:26:57 - Calling Remote Init...
14:26:57 - ExchangeConfiguration - Dry mode is OFF
14:26:57 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:26:57 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:26:57 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:26:57 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:26:57 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:26:58 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:26:58 - Started OrderFluxTest in 4.225 seconds (JVM running for 5.047)
14:26:58 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:26:58 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:26:58.047225Z[Etc/UTC], trades=[])

14:26:59 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=2 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:26:58.048384Z[Etc/UTC], trades=[])

14:27:00 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=3 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:26:58.048492Z[Etc/UTC], trades=[])

14:27:01 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=11 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=111 ETH, userReference=My reference, timestamp=2023-01-17T14:26:57.405Z[Etc/UTC], trades=[])

14:27:02 - TestableStrategy-onOrderUpdate 005 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=22 ETH, averagePrice=1 USDT, limitPrice=0 USDT, leverage=null, status=FILLED, cumulativeAmount=222 ETH, userReference=My reference, timestamp=2023-01-17T14:26:57.406Z[Etc/UTC], trades=[])

14:27:03 - TestableStrategy-onOrderUpdate 006 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=33 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=333 ETH, userReference=My reference, timestamp=2023-01-17T14:26:57.406Z[Etc/UTC], trades=[])

14:27:04 - TestableStrategy-onOrderUpdate 007 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=3333 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=33333 ETH, userReference=My reference, timestamp=2023-01-17T14:26:57.406Z[Etc/UTC], trades=[])

14:27:06 - TestableStrategy-onOrderUpdate 008 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=22 ETH, averagePrice=2 USDT, limitPrice=0 USDT, leverage=null, status=FILLED, cumulativeAmount=222 ETH, userReference=My reference, timestamp=2023-01-17T14:26:57.406Z[Etc/UTC], trades=[])

14:27:11 - TradeService - InterruptedException : null
14:27:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:27:11 - HikariPool-1 - Shutdown initiated...
14:27:11 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.682 s - in tech.cassandre.trading.bot.test.batch.OrderFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
14:27:12.209 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:27:12.216 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:27:12.240 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:27:12.247 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest], using SpringBootContextLoader
14:27:12.250 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/LongPositionFluxTest-context.xml] does not exist
14:27:12.250 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/LongPositionFluxTestContext.groovy] does not exist
14:27:12.250 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:27:12.251 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: LongPositionFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:27:12.284 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]
14:27:12.326 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:27:12.326 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
14:27:12.388 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: using defaults.
14:27:12.388 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:27:12.395 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:27:12.400 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146dfe6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@4716be8b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2f67b837, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1869fbd2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6af9fcb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cce16f4, org.springframework.test.context.event.EventPublishingTestExecutionListener@7efaad5a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5505ae1a]
14:27:12.404 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@a4add54 testClass = LongPositionFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = LongPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.batch.LongPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1a38c59b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:27:12.450 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@a4add54 testClass = LongPositionFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.LongPositionFluxTest@68b32e3e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = LongPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.batch.LongPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1a38c59b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:27:12.462 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:27:12 - Starting LongPositionFluxTest using Java 11.0.17 on repairnator with PID 26572 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:27:12 - No active profile set, falling back to default profiles: default
14:27:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:27:13 - Finished Spring Data repository scanning in 161 ms. Found 5 JPA repository interfaces.
14:27:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:27:13 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:27:13 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:27:13 - HikariPool-1 - Starting...
14:27:13 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:27:13 - HikariPool-1 - Start completed.
14:27:14 - Successfully acquired change log lock
14:27:14 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:27:14 - Reading from PUBLIC.DATABASECHANGELOG
14:27:14 - Successfully released change log lock
14:27:14 - Successfully acquired change log lock
Skipping auto-registration
14:27:14 - Skipping auto-registration
14:27:14 - Table EXCHANGE_ACCOUNTS created
14:27:14 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:27:14 - Table STRATEGIES created
14:27:14 - Auto-increment added to STRATEGIES.ID
14:27:14 - Table POSITIONS created
14:27:14 - Auto-increment added to POSITIONS.ID
14:27:14 - Table ORDERS created
14:27:14 - Auto-increment added to ORDERS.ID
14:27:14 - Table TRADES created
14:27:14 - Auto-increment added to TRADES.ID
14:27:14 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:27:14 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:27:14 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:27:14 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:27:14 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:27:14 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:27:14 - Index IDX_STRATEGIES_STRATEGY_ID created
14:27:14 - Index IDX_POSITIONS_POSITION_ID created
14:27:14 - Index IDX_POSITIONS_STATUS created
14:27:14 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:27:14 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:27:14 - Index IDX_ORDERS_ORDER_ID created
14:27:14 - Index IDX_TRADES_TRADE_ID created
14:27:14 - Index IDX_TRADES_ORDER_ID created
14:27:14 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:27:14 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:27:14 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:27:14 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:27:14 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:27:14 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:27:14 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:27:14 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:27:14 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:27:14 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:27:14 - Successfully released change log lock
14:27:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:27:14 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:27:14 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:27:15 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:27:15 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:27:15 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:27:16 - Calling Remote Init...
14:27:16 - ExchangeConfiguration - Dry mode is OFF
14:27:16 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:27:16 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:27:16 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:27:16 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:27:16 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:27:16 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:27:16 - Started LongPositionFluxTest in 4.434 seconds (JVM running for 5.294)
14:27:17 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:17 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:27:17 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921706Z[Etc/UTC], trades=[])

14:27:18 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:19 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921706Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:20 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:20 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:20.010866Z[Etc/UTC], trades=[])

14:27:21 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:22 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:20.010866Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:22 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-02T00:00Z[Etc/UTC])

14:27:23 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:23 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])

14:27:24 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:24 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:27:25 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:25 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:27:26 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:27 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:27 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.18, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:27.129033Z[Etc/UTC])

14:27:28 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.18 BTC, highestGainPrice=0.18 BTC, latestGainPrice=0.18 BTC)

14:27:28 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:28.158795Z[Etc/UTC])

14:27:29 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.06 BTC)

14:27:29 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.09, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:29.180658Z[Etc/UTC])

14:27:30 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06000000 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.09 BTC)

14:27:30 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:30.202628Z[Etc/UTC])

14:27:31 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.015 BTC)

14:27:31 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:31.208270Z[Etc/UTC])

14:27:32 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:32.226916Z[Etc/UTC])

14:27:32 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

14:27:33 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.03 USDT, fee=null, userReference=null, timestamp=null)

14:27:33 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:20.010Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:34 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:20.010Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:27:35 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:27:35.177741Z[Etc/UTC])

14:27:35 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

14:27:36 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

14:27:36 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163879Z[Etc/UTC], trades=[])

14:27:37 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163879Z[Etc/UTC], trades=[]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:27:38 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:27:38 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:27:39 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:27:39 - TestableStrategy-onPositionUpdate 018 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:27:40 - TestableStrategy-onPositionUpdate 019 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=2.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:27:40 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:27:41 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:16.921Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:27:35.163Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=2.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:27:41 - TestableStrategy-onTradeUpdate 009 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:27:42 - TradeService - InterruptedException : null
14:27:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:27:42 - HikariPool-1 - Shutdown initiated...
14:27:42 - HikariPool-1 - Shutdown completed.
14:27:42 - TradeService - InterruptedException : null
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 30.083 s - in tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.TradeFluxTest
14:27:43.287 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:27:43.297 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:27:43.337 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:27:43.345 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest], using SpringBootContextLoader
14:27:43.348 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TradeFluxTest-context.xml] does not exist
14:27:43.348 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TradeFluxTestContext.groovy] does not exist
14:27:43.348 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:27:43.348 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: TradeFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:27:43.380 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]
14:27:43.424 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:27:43.425 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.TradeFluxTest
14:27:43.493 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: using defaults.
14:27:43.494 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:27:43.499 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:27:43.504 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74589991, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@146dfe6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4716be8b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1fc32e4f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f67b837, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1869fbd2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6af9fcb2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6cce16f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@416c58f5]
14:27:43.506 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2fd953a6 testClass = TradeFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a4add54 testClass = TradeFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@141e5bef key = [tech.cassandre.trading.bot.test.batch.TradeFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@43dac38f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d0a1059, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@957e06, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e1a0406, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bd61f98, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:27:43.547 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2fd953a6 testClass = TradeFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.TradeFluxTest@19835e64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a4add54 testClass = TradeFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@141e5bef key = [tech.cassandre.trading.bot.test.batch.TradeFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@43dac38f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d0a1059, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@957e06, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e1a0406, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bd61f98, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:27:43.559 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:27:43 - Starting TradeFluxTest using Java 11.0.17 on repairnator with PID 27873 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:27:43 - No active profile set, falling back to default profiles: default
14:27:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:27:44 - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
14:27:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:27:44 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:27:44 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:27:44 - HikariPool-1 - Starting...
14:27:44 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:27:44 - HikariPool-1 - Start completed.
14:27:45 - Successfully acquired change log lock
14:27:45 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:27:45 - Reading from PUBLIC.DATABASECHANGELOG
14:27:45 - Successfully released change log lock
14:27:45 - Successfully acquired change log lock
Skipping auto-registration
14:27:45 - Skipping auto-registration
14:27:45 - Table EXCHANGE_ACCOUNTS created
14:27:45 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:27:45 - Table STRATEGIES created
14:27:45 - Auto-increment added to STRATEGIES.ID
14:27:45 - Table POSITIONS created
14:27:45 - Auto-increment added to POSITIONS.ID
14:27:45 - Table ORDERS created
14:27:45 - Auto-increment added to ORDERS.ID
14:27:45 - Table TRADES created
14:27:45 - Auto-increment added to TRADES.ID
14:27:45 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:27:45 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:27:45 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:27:45 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:27:45 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:27:45 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:27:45 - Index IDX_STRATEGIES_STRATEGY_ID created
14:27:45 - Index IDX_POSITIONS_POSITION_ID created
14:27:45 - Index IDX_POSITIONS_STATUS created
14:27:45 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:27:45 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:27:45 - Index IDX_ORDERS_ORDER_ID created
14:27:45 - Index IDX_TRADES_TRADE_ID created
14:27:45 - Index IDX_TRADES_ORDER_ID created
14:27:45 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:27:45 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:27:45 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:27:45 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:27:45 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:27:45 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:27:45 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:27:45 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:27:45 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:27:45 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:27:45 - Successfully released change log lock
14:27:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:27:45 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:27:45 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:27:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:27:46 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:27:46 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:27:47 - Calling Remote Init...
14:27:47 - ExchangeConfiguration - Dry mode is OFF
14:27:47 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:27:47 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:27:47 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:27:47 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:27:47 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:27:47 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:27:47 - Started TradeFluxTest in 4.323 seconds (JVM running for 5.198)
14:27:48 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:27:50 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=TRADE_0000001, type=BID, orderId=ORDER_0000001, currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000001, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:27:51 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=TRADE_0000002, type=BID, orderId=ORDER_0000001, currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000002, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:27:52 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=TRADE_0000003, type=BID, orderId=ORDER_0000002, currencyPair=ETH/USDT, amount=1.100001 ETH, price=2.200002 USDT, fee=3.300003 ETH, userReference=Ref TRADE_0000003, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:27:53 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=TRADE_0000004, type=BID, orderId=ORDER_0000001, currencyPair=ETH/BTC, amount=1 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000004, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:27:54 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=5, tradeId=TRADE_0000005, type=BID, orderId=ORDER_0000001, currencyPair=ETH/BTC, amount=1 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000005, timestamp=2020-09-01T00:00Z[Etc/UTC])

14:27:55 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=6, tradeId=TRADE_0000006, type=BID, orderId=ORDER_0000001, currencyPair=ETH/USDT, amount=1.100001 ETH, price=2.200002 USDT, fee=3.300003 USDT, userReference=Ref TRADE_0000006, timestamp=2018-08-01T00:00Z[Etc/UTC])

14:27:56 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=7, tradeId=TRADE_0000008, type=BID, orderId=ORDER_0000001, currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000008, timestamp=2020-09-02T00:00Z[Etc/UTC])

14:27:57 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=3, tradeId=TRADE_0000003, type=BID, orderId=ORDER_0000002, currencyPair=ETH/USDT, amount=1.110001 ETH, price=2.220002 USDT, fee=3.330003 BTC, userReference=Ref TRADE_0000003, timestamp=2021-09-01T00:00Z[Etc/UTC])

14:27:59 - TradeService - InterruptedException : null
14:27:59 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:27:59 - HikariPool-1 - Shutdown initiated...
14:27:59 - HikariPool-1 - Shutdown completed.
14:27:59 - TradeService - InterruptedException : null
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.797 s - in tech.cassandre.trading.bot.test.batch.TradeFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
14:28:00.093 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:28:00.100 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:28:00.124 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:28:00.131 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest], using SpringBootContextLoader
14:28:00.134 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/ShortPositionFluxTest-context.xml] does not exist
14:28:00.134 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/ShortPositionFluxTestContext.groovy] does not exist
14:28:00.134 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:28:00.135 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: ShortPositionFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:28:00.167 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]
14:28:00.210 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:28:00.210 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
14:28:00.266 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: using defaults.
14:28:00.266 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:28:00.271 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:28:00.277 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146dfe6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@4716be8b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2f67b837, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1869fbd2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6af9fcb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cce16f4, org.springframework.test.context.event.EventPublishingTestExecutionListener@7efaad5a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5505ae1a]
14:28:00.278 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@a4add54 testClass = ShortPositionFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = ShortPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1a38c59b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
14:28:00.320 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@a4add54 testClass = ShortPositionFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest@68b32e3e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = ShortPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1a38c59b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:28:00.332 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:00 - Starting ShortPositionFluxTest using Java 11.0.17 on repairnator with PID 28518 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:00 - No active profile set, falling back to default profiles: default
14:28:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:01 - Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
14:28:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:01 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:28:01 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:01 - HikariPool-1 - Starting...
14:28:01 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:01 - HikariPool-1 - Start completed.
14:28:02 - Successfully acquired change log lock
14:28:02 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:02 - Reading from PUBLIC.DATABASECHANGELOG
14:28:02 - Successfully released change log lock
14:28:02 - Successfully acquired change log lock
Skipping auto-registration
14:28:02 - Skipping auto-registration
14:28:02 - Table EXCHANGE_ACCOUNTS created
14:28:02 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:02 - Table STRATEGIES created
14:28:02 - Auto-increment added to STRATEGIES.ID
14:28:02 - Table POSITIONS created
14:28:02 - Auto-increment added to POSITIONS.ID
14:28:02 - Table ORDERS created
14:28:02 - Auto-increment added to ORDERS.ID
14:28:02 - Table TRADES created
14:28:02 - Auto-increment added to TRADES.ID
14:28:02 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:02 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:02 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:02 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:02 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:02 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:02 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:02 - Index IDX_POSITIONS_POSITION_ID created
14:28:02 - Index IDX_POSITIONS_STATUS created
14:28:02 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:02 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:02 - Index IDX_ORDERS_ORDER_ID created
14:28:02 - Index IDX_TRADES_TRADE_ID created
14:28:02 - Index IDX_TRADES_ORDER_ID created
14:28:02 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:28:02 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:02 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:02 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:02 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:02 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:02 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:02 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:02 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:02 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:28:02 - Successfully released change log lock
14:28:02 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:02 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:28:02 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:28:02 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:04 - Calling Remote Init...
14:28:04 - ExchangeConfiguration - Dry mode is OFF
14:28:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:28:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:28:04 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:28:04 - Started ShortPositionFluxTest in 4.294 seconds (JVM running for 5.154)
14:28:04 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:05 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:28:05 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645662Z[Etc/UTC], trades=[])

14:28:05 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:06 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645662Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:07 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:08 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:07.733738Z[Etc/UTC], trades=[])

14:28:08 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:09 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:07.733738Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:09 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-02T00:00Z[Etc/UTC])

14:28:10 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:10 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])

14:28:11 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:11 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:28:12 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:12 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:28:13 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:14 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:14 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.01, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:14.879220Z[Etc/UTC])

14:28:15 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01 BTC, highestGainPrice=0.01 BTC, latestGainPrice=0.01 BTC)

14:28:15 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:15.916240Z[Etc/UTC])

14:28:16 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.015 BTC)

14:28:16 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:16.927345Z[Etc/UTC])

14:28:17 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.3 BTC)

14:28:17 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.03 USDT, fee=null, userReference=null, timestamp=null)

14:28:17 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:17.949611Z[Etc/UTC])

14:28:18 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:07.733Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:19 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:07.733Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:19 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.0003, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:19.917065Z[Etc/UTC])

14:28:20 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:07.733Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=100 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

14:28:21 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901109Z[Etc/UTC], trades=[])

14:28:21 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.0003 BTC)

14:28:22 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.0003 BTC)

14:28:22 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:28:23 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901109Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

14:28:23 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:28:24 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

14:28:24 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:28:25 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

14:28:25 - TestableStrategy-onTradeUpdate 009 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:28:26 - TestableStrategy-onPositionUpdate 018 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

14:28:27 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:04.645Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:28:19.901Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

14:28:29 - TradeService - InterruptedException : null
14:28:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:29 - HikariPool-1 - Shutdown initiated...
14:28:29 - HikariPool-1 - Shutdown completed.
14:28:29 - TradeService - InterruptedException : null
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 28.942 s - in tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
[INFO] Running tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
14:28:29.986 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:28:29.993 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:28:30.018 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:28:30.025 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest], using SpringBootContextLoader
14:28:30.028 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceDryModeTest-context.xml] does not exist
14:28:30.028 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceDryModeTestContext.groovy] does not exist
14:28:30.028 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:28:30.028 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: UserServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:28:30.121 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:28:30.122 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
14:28:30.176 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: using defaults.
14:28:30.176 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:28:30.182 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:28:30.187 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1869fbd2, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6af9fcb2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7efaad5a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@291a7e3c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@ca30bc1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1046d517, org.springframework.test.context.event.EventPublishingTestExecutionListener@3b7d3a38, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a362b6b]
14:28:30.189 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@66c61024 testClass = UserServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61fe30 testClass = UserServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@c9d0d6 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7c711375, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@37d4349f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@82de64a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@52b1beb6, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15bb6bea], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:28:30.229 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@66c61024 testClass = UserServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest@33308786, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@61fe30 testClass = UserServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@c9d0d6 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7c711375, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@37d4349f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@82de64a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@52b1beb6, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15bb6bea], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:28:30.242 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:28:30.245 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:30 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29651 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:30 - The following profiles are active: schedule-disabled
14:28:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:31 - Finished Spring Data repository scanning in 151 ms. Found 5 JPA repository interfaces.
14:28:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:31 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:28:31 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:31 - HikariPool-1 - Starting...
14:28:31 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:31 - HikariPool-1 - Start completed.
14:28:31 - Successfully acquired change log lock
14:28:32 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:32 - Reading from PUBLIC.DATABASECHANGELOG
14:28:32 - Successfully released change log lock
14:28:32 - Successfully acquired change log lock
Skipping auto-registration
14:28:32 - Skipping auto-registration
14:28:32 - Table EXCHANGE_ACCOUNTS created
14:28:32 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:32 - Table STRATEGIES created
14:28:32 - Auto-increment added to STRATEGIES.ID
14:28:32 - Table POSITIONS created
14:28:32 - Auto-increment added to POSITIONS.ID
14:28:32 - Table ORDERS created
14:28:32 - Auto-increment added to ORDERS.ID
14:28:32 - Table TRADES created
14:28:32 - Auto-increment added to TRADES.ID
14:28:32 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:32 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:32 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:32 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:32 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:32 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:32 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:32 - Index IDX_POSITIONS_POSITION_ID created
14:28:32 - Index IDX_POSITIONS_STATUS created
14:28:32 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:32 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:32 - Index IDX_ORDERS_ORDER_ID created
14:28:32 - Index IDX_TRADES_TRADE_ID created
14:28:32 - Index IDX_TRADES_ORDER_ID created
14:28:32 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:28:32 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:32 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:32 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:32 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:32 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:32 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:32 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:32 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:32 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:28:32 - Successfully released change log lock
14:28:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:32 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:28:32 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:28:32 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:33 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:34 - Calling Remote Init...
14:28:34 - ExchangeConfiguration - Dry mode is ON
14:28:34 - Adding account 'main'
14:28:34 - - Adding balance 99.0001 BTC
14:28:34 - Adding account 'savings'
14:28:34 - - Adding balance 1.1 BTC
14:28:34 - - Adding balance 2.2 USDT
14:28:34 - - Adding balance 3.3 ETH
14:28:34 - Adding account 'trade'
14:28:34 - - Adding balance 0.99962937 BTC
14:28:34 - - Adding balance 1000 USDT
14:28:34 - - Adding balance 10 ETH
14:28:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:34 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:28:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:34 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:34 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:34 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:34 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:28:34 - Started UserServiceDryModeTest in 4.274 seconds (JVM running for 5.097)
14:28:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:34 - HikariPool-1 - Shutdown initiated...
14:28:34 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:34 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29651 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:34 - The following profiles are active: schedule-disabled
14:28:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:34 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
14:28:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:34 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:28:34 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:34 - HikariPool-2 - Starting...
14:28:34 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:34 - HikariPool-2 - Start completed.
14:28:34 - Successfully acquired change log lock
14:28:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:34 - Reading from PUBLIC.DATABASECHANGELOG
14:28:34 - Successfully released change log lock
14:28:34 - Successfully acquired change log lock
Skipping auto-registration
14:28:34 - Skipping auto-registration
14:28:34 - Table EXCHANGE_ACCOUNTS created
14:28:34 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:34 - Table STRATEGIES created
14:28:34 - Auto-increment added to STRATEGIES.ID
14:28:34 - Table POSITIONS created
14:28:34 - Auto-increment added to POSITIONS.ID
14:28:34 - Table ORDERS created
14:28:34 - Auto-increment added to ORDERS.ID
14:28:34 - Table TRADES created
14:28:34 - Auto-increment added to TRADES.ID
14:28:34 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:34 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:34 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:34 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:34 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:34 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:34 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:34 - Index IDX_POSITIONS_POSITION_ID created
14:28:34 - Index IDX_POSITIONS_STATUS created
14:28:34 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:34 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:34 - Index IDX_ORDERS_ORDER_ID created
14:28:34 - Index IDX_TRADES_TRADE_ID created
14:28:34 - Index IDX_TRADES_ORDER_ID created
14:28:34 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
14:28:34 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:34 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:34 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:34 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:34 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:34 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:34 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:34 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:34 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:28:34 - Successfully released change log lock
14:28:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:35 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:35 - Calling Remote Init...
14:28:35 - ExchangeConfiguration - Dry mode is ON
14:28:35 - Adding account 'main'
14:28:35 - - Adding balance 99.0001 BTC
14:28:35 - Adding account 'savings'
14:28:35 - - Adding balance 1.1 BTC
14:28:35 - - Adding balance 2.2 USDT
14:28:35 - - Adding balance 3.3 ETH
14:28:35 - Adding account 'trade'
14:28:35 - - Adding balance 0.99962937 BTC
14:28:35 - - Adding balance 1000 USDT
14:28:35 - - Adding balance 10 ETH
14:28:35 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:35 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:28:35 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:35 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:35 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:35 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:35 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:28:35 - Started UserServiceDryModeTest in 0.767 seconds (JVM running for 5.888)
14:28:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:35 - HikariPool-2 - Shutdown initiated...
14:28:35 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:35 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29651 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:35 - The following profiles are active: schedule-disabled
14:28:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:35 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
14:28:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:35 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:28:35 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:35 - HikariPool-3 - Starting...
14:28:35 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:35 - HikariPool-3 - Start completed.
14:28:35 - Successfully acquired change log lock
14:28:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:35 - Reading from PUBLIC.DATABASECHANGELOG
14:28:35 - Successfully released change log lock
14:28:35 - Successfully acquired change log lock
Skipping auto-registration
14:28:35 - Skipping auto-registration
14:28:35 - Table EXCHANGE_ACCOUNTS created
14:28:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:35 - Table STRATEGIES created
14:28:35 - Auto-increment added to STRATEGIES.ID
14:28:35 - Table POSITIONS created
14:28:35 - Auto-increment added to POSITIONS.ID
14:28:35 - Table ORDERS created
14:28:35 - Auto-increment added to ORDERS.ID
14:28:35 - Table TRADES created
14:28:35 - Auto-increment added to TRADES.ID
14:28:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:35 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:35 - Index IDX_POSITIONS_POSITION_ID created
14:28:35 - Index IDX_POSITIONS_STATUS created
14:28:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:35 - Index IDX_ORDERS_ORDER_ID created
14:28:35 - Index IDX_TRADES_TRADE_ID created
14:28:35 - Index IDX_TRADES_ORDER_ID created
14:28:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 18ms
14:28:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:28:35 - Successfully released change log lock
14:28:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:35 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:35 - Calling Remote Init...
14:28:35 - ExchangeConfiguration - Dry mode is ON
14:28:35 - Adding account 'main'
14:28:35 - - Adding balance 99.0001 BTC
14:28:35 - Adding account 'savings'
14:28:35 - - Adding balance 1.1 BTC
14:28:35 - - Adding balance 2.2 USDT
14:28:35 - - Adding balance 3.3 ETH
14:28:35 - Adding account 'trade'
14:28:35 - - Adding balance 0.99962937 BTC
14:28:35 - - Adding balance 1000 USDT
14:28:35 - - Adding balance 10 ETH
14:28:35 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:35 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:28:35 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:35 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:35 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:35 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:35 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:28:35 - Started UserServiceDryModeTest in 0.64 seconds (JVM running for 6.557)
14:28:36 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:28:37 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:28:38 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:28:40 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:40.005175Z[Etc/UTC])

14:28:41 - TestableStrategy-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99897605, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10.02, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:28:41 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.02 ETH, averagePrice=0.032666 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 ETH, userReference=null, timestamp=2023-01-17T14:28:41.002620Z[Etc/UTC], trades=[])

14:28:42 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.02 ETH, price=0.032666 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:28:41.003639Z[Etc/UTC])

14:28:43 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032466, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:43.032690Z[Etc/UTC])

14:28:44 - TestableStrategy-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962537, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10.00, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:28:44 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.02 ETH, averagePrice=0.032466 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 ETH, userReference=null, timestamp=2023-01-17T14:28:44.032837Z[Etc/UTC], trades=[])

14:28:45 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=ASK, orderId=DRY_ORDER_000000002, currencyPair=ETH/BTC, amount=0.02 ETH, price=0.032466 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:28:44.032957Z[Etc/UTC])

14:28:46 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:46 - HikariPool-3 - Shutdown initiated...
14:28:46 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:46 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29651 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:46 - The following profiles are active: schedule-disabled
14:28:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:46 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
14:28:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:46 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:28:46 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:46 - HikariPool-4 - Starting...
14:28:46 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:46 - HikariPool-4 - Start completed.
14:28:46 - Successfully acquired change log lock
14:28:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:46 - Reading from PUBLIC.DATABASECHANGELOG
14:28:46 - Successfully released change log lock
14:28:46 - Successfully acquired change log lock
Skipping auto-registration
14:28:46 - Skipping auto-registration
14:28:46 - Table EXCHANGE_ACCOUNTS created
14:28:46 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:46 - Table STRATEGIES created
14:28:46 - Auto-increment added to STRATEGIES.ID
14:28:46 - Table POSITIONS created
14:28:46 - Auto-increment added to POSITIONS.ID
14:28:46 - Table ORDERS created
14:28:46 - Auto-increment added to ORDERS.ID
14:28:46 - Table TRADES created
14:28:46 - Auto-increment added to TRADES.ID
14:28:46 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:46 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:46 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:46 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:46 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:46 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:46 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:46 - Index IDX_POSITIONS_POSITION_ID created
14:28:46 - Index IDX_POSITIONS_STATUS created
14:28:46 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:46 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:46 - Index IDX_ORDERS_ORDER_ID created
14:28:46 - Index IDX_TRADES_TRADE_ID created
14:28:46 - Index IDX_TRADES_ORDER_ID created
14:28:46 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
14:28:46 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:46 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:46 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:46 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:46 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:46 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:46 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:46 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:46 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:28:46 - Successfully released change log lock
14:28:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:46 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:46 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:46 - Calling Remote Init...
14:28:46 - ExchangeConfiguration - Dry mode is ON
14:28:46 - Adding account 'main'
14:28:46 - - Adding balance 99.0001 BTC
14:28:46 - Adding account 'savings'
14:28:46 - - Adding balance 1.1 BTC
14:28:46 - - Adding balance 2.2 USDT
14:28:46 - - Adding balance 3.3 ETH
14:28:46 - Adding account 'trade'
14:28:46 - - Adding balance 0.99962937 BTC
14:28:46 - - Adding balance 1000 USDT
14:28:46 - - Adding balance 10 ETH
14:28:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:46 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:28:46 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:46 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:46 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:46 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:46 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:28:46 - Started UserServiceDryModeTest in 0.585 seconds (JVM running for 17.231)
14:28:46 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:46.661573Z[Etc/UTC])

14:28:47 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/EUR, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:47.664521Z[Etc/UTC])

14:28:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:48 - HikariPool-4 - Shutdown initiated...
14:28:48 - HikariPool-4 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:48 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29651 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:48 - The following profiles are active: schedule-disabled
14:28:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:48 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
14:28:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:48 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:28:48 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:48 - HikariPool-5 - Starting...
14:28:48 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:48 - HikariPool-5 - Start completed.
14:28:48 - Successfully acquired change log lock
14:28:48 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:48 - Reading from PUBLIC.DATABASECHANGELOG
14:28:48 - Successfully released change log lock
14:28:48 - Successfully acquired change log lock
Skipping auto-registration
14:28:48 - Skipping auto-registration
14:28:48 - Table EXCHANGE_ACCOUNTS created
14:28:48 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:48 - Table STRATEGIES created
14:28:48 - Auto-increment added to STRATEGIES.ID
14:28:48 - Table POSITIONS created
14:28:48 - Auto-increment added to POSITIONS.ID
14:28:48 - Table ORDERS created
14:28:48 - Auto-increment added to ORDERS.ID
14:28:48 - Table TRADES created
14:28:48 - Auto-increment added to TRADES.ID
14:28:48 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:48 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:48 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:48 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:48 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:48 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:48 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:48 - Index IDX_POSITIONS_POSITION_ID created
14:28:48 - Index IDX_POSITIONS_STATUS created
14:28:48 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:48 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:48 - Index IDX_ORDERS_ORDER_ID created
14:28:48 - Index IDX_TRADES_TRADE_ID created
14:28:48 - Index IDX_TRADES_ORDER_ID created
14:28:48 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
14:28:48 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:48 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:48 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:48 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:48 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:48 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:48 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:28:48 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:48 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:28:48 - Successfully released change log lock
14:28:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:49 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:49 - Calling Remote Init...
14:28:49 - ExchangeConfiguration - Dry mode is ON
14:28:49 - Adding account 'main'
14:28:49 - - Adding balance 99.0001 BTC
14:28:49 - Adding account 'savings'
14:28:49 - - Adding balance 1.1 BTC
14:28:49 - - Adding balance 2.2 USDT
14:28:49 - - Adding balance 3.3 ETH
14:28:49 - Adding account 'trade'
14:28:49 - - Adding balance 0.99962937 BTC
14:28:49 - - Adding balance 1000 USDT
14:28:49 - - Adding balance 10 ETH
14:28:49 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:49 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:28:49 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:49 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:49 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:49 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:49 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:28:49 - Started UserServiceDryModeTest in 0.578 seconds (JVM running for 19.847)
14:28:49 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:49.277518Z[Etc/UTC])

14:28:50 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/EUR, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-17T14:28:50.280117Z[Etc/UTC])

[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 21.311 s - in tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
14:28:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:51 - HikariPool-5 - Shutdown initiated...
14:28:51 - HikariPool-5 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
14:28:52.278 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:28:52.285 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:28:52.310 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:28:52.318 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest], using SpringBootContextLoader
14:28:52.320 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceDryModeTest-context.xml] does not exist
14:28:52.321 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceDryModeTestContext.groovy] does not exist
14:28:52.321 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:28:52.321 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: PositionServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:28:52.396 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:28:52.396 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
14:28:52.451 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: using defaults.
14:28:52.451 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:28:52.457 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:28:52.462 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f67b837, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1869fbd2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cce16f4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7efaad5a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@291a7e3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ca30bc1, org.springframework.test.context.event.EventPublishingTestExecutionListener@1046d517, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2bb3058]
14:28:52.464 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3abada5a testClass = PositionServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = PositionServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2d2e5f00], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:28:52.504 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3abada5a testClass = PositionServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest@42039326, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = PositionServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2d2e5f00], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:28:52.516 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:28:52.519 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:52 - Starting PositionServiceDryModeTest using Java 11.0.17 on repairnator with PID 30617 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:52 - The following profiles are active: schedule-disabled
14:28:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:53 - Finished Spring Data repository scanning in 155 ms. Found 5 JPA repository interfaces.
14:28:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:53 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:28:53 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:53 - HikariPool-1 - Starting...
14:28:53 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:53 - HikariPool-1 - Start completed.
14:28:54 - Successfully acquired change log lock
14:28:54 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:54 - Reading from PUBLIC.DATABASECHANGELOG
14:28:54 - Successfully released change log lock
14:28:54 - Successfully acquired change log lock
Skipping auto-registration
14:28:54 - Skipping auto-registration
14:28:54 - Table EXCHANGE_ACCOUNTS created
14:28:54 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:54 - Table STRATEGIES created
14:28:54 - Auto-increment added to STRATEGIES.ID
14:28:54 - Table POSITIONS created
14:28:54 - Auto-increment added to POSITIONS.ID
14:28:54 - Table ORDERS created
14:28:54 - Auto-increment added to ORDERS.ID
14:28:54 - Table TRADES created
14:28:54 - Auto-increment added to TRADES.ID
14:28:54 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:54 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:54 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:54 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:54 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:54 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:54 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:54 - Index IDX_POSITIONS_POSITION_ID created
14:28:54 - Index IDX_POSITIONS_STATUS created
14:28:54 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:54 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:54 - Index IDX_ORDERS_ORDER_ID created
14:28:54 - Index IDX_TRADES_TRADE_ID created
14:28:54 - Index IDX_TRADES_ORDER_ID created
14:28:54 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:28:54 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:54 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:54 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:54 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:54 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:54 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:54 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:28:54 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:54 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:28:54 - Successfully released change log lock
14:28:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:54 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:28:54 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:28:54 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:56 - Calling Remote Init...
14:28:56 - ExchangeConfiguration - Dry mode is ON
14:28:56 - Adding account 'main'
14:28:56 - - Adding balance 99.0001 BTC
14:28:56 - Adding account 'savings'
14:28:56 - - Adding balance 1.1 BTC
14:28:56 - - Adding balance 2.2 USDT
14:28:56 - - Adding balance 3.3 ETH
14:28:56 - Adding account 'trade'
14:28:56 - - Adding balance 0.99962937 BTC
14:28:56 - - Adding balance 1000 USDT
14:28:56 - - Adding balance 10 ETH
14:28:56 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:56 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:28:56 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:56 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:56 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:56 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:56 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:28:56 - Started PositionServiceDryModeTest in 4.24 seconds (JVM running for 5.038)
14:28:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:28:56 - HikariPool-1 - Shutdown initiated...
14:28:56 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:28:56 - Starting PositionServiceDryModeTest using Java 11.0.17 on repairnator with PID 30617 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:28:56 - The following profiles are active: schedule-disabled
14:28:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:56 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:28:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:28:56 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:28:57 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:28:57 - HikariPool-2 - Starting...
14:28:57 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:28:57 - HikariPool-2 - Start completed.
14:28:57 - Successfully acquired change log lock
14:28:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:28:57 - Reading from PUBLIC.DATABASECHANGELOG
14:28:57 - Successfully released change log lock
14:28:57 - Successfully acquired change log lock
Skipping auto-registration
14:28:57 - Skipping auto-registration
14:28:57 - Table EXCHANGE_ACCOUNTS created
14:28:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:28:57 - Table STRATEGIES created
14:28:57 - Auto-increment added to STRATEGIES.ID
14:28:57 - Table POSITIONS created
14:28:57 - Auto-increment added to POSITIONS.ID
14:28:57 - Table ORDERS created
14:28:57 - Auto-increment added to ORDERS.ID
14:28:57 - Table TRADES created
14:28:57 - Auto-increment added to TRADES.ID
14:28:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:28:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:28:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:28:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:28:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:28:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:28:57 - Index IDX_STRATEGIES_STRATEGY_ID created
14:28:57 - Index IDX_POSITIONS_POSITION_ID created
14:28:57 - Index IDX_POSITIONS_STATUS created
14:28:57 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:28:57 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:28:57 - Index IDX_ORDERS_ORDER_ID created
14:28:57 - Index IDX_TRADES_TRADE_ID created
14:28:57 - Index IDX_TRADES_ORDER_ID created
14:28:57 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
14:28:57 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:28:57 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:28:57 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:28:57 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:28:57 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:28:57 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:28:57 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:28:57 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:28:57 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:28:57 - Successfully released change log lock
14:28:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:28:57 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:28:57 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:28:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:28:57 - Calling Remote Init...
14:28:57 - ExchangeConfiguration - Dry mode is ON
14:28:57 - Adding account 'main'
14:28:57 - - Adding balance 99.0001 BTC
14:28:57 - Adding account 'savings'
14:28:57 - - Adding balance 1.1 BTC
14:28:57 - - Adding balance 2.2 USDT
14:28:57 - - Adding balance 3.3 ETH
14:28:57 - Adding account 'trade'
14:28:57 - - Adding balance 0.99962937 BTC
14:28:57 - - Adding balance 1000 USDT
14:28:57 - - Adding balance 10 ETH
14:28:57 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:28:57 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:28:57 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:28:57 - StrategyConfiguration - Accounts available : 'main/main'.
14:28:57 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:28:57 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:28:57 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:28:57 - Started PositionServiceDryModeTest in 0.827 seconds (JVM running for 5.896)
14:28:57 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:28:57 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:58 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:28:58 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:28:58 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:28:58 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:28:59 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:00 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:01 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:02 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:03 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

14:29:03 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:03 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.3 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:29:04 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:05 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:06 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:06 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:29:07 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.3 BTC, latestGainPrice=0.3 BTC)

14:29:07 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

14:29:08 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 USDT, highestGainPrice=0.3 USDT, latestGainPrice=0.3 USDT)

14:29:11 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:29:11 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.4 BTC)

14:29:12 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.4 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[])

14:29:12 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.4 BTC)

14:29:12 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.6, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

14:29:12 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.4 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:29:13 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.4 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

14:29:14 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.6 USDT, latestGainPrice=0.6 USDT)

14:29:15 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.40000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

14:29:16 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

14:29:16 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.40000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

14:29:17 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.1, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:29:17 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.1 USDT)

14:29:18 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.1 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[])

14:29:18 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.1 USDT)

14:29:18 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.1 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:29:19 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.1 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

14:29:20 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.10000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

14:29:21 - TestableStrategy-onPositionStatusUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.10000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 29.571 s - in tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
14:29:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:29:21 - HikariPool-2 - Shutdown initiated...
14:29:21 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
14:29:22.823 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:29:22.830 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:29:22.882 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:29:22.891 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest], using SpringBootContextLoader
14:29:22.894 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/ExchangeServiceDryModeTest-context.xml] does not exist
14:29:22.894 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/ExchangeServiceDryModeTestContext.groovy] does not exist
14:29:22.894 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:29:22.895 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: ExchangeServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:29:22.968 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:29:22.968 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
14:29:23.036 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: using defaults.
14:29:23.037 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:29:23.044 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:29:23.049 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2421cc4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@30c93896, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@338c99c8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21ba0741, org.springframework.test.context.transaction.TransactionalTestExecutionListener@58ce9668, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@172b013, org.springframework.test.context.event.EventPublishingTestExecutionListener@56673b2c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2796aeae, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b4711e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70f02c32, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@51fadaff]
14:29:23.051 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7a55af6b testClass = ExchangeServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = ExchangeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25084a1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@16610890, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@611889f4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@593aaf41, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:29:23.060 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7a55af6b testClass = ExchangeServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest@66c92293, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = ExchangeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25084a1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@16610890, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@611889f4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@593aaf41, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:29:23.073 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:29:23.076 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:29:23 - Starting ExchangeServiceDryModeTest using Java 11.0.17 on repairnator with PID 31780 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:29:23 - The following profiles are active: schedule-disabled
14:29:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:23 - Finished Spring Data repository scanning in 116 ms. Found 5 JPA repository interfaces.
14:29:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:23 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:29:24 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:29:24 - HikariPool-1 - Starting...
14:29:24 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:29:24 - HikariPool-1 - Start completed.
14:29:24 - Successfully acquired change log lock
14:29:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:29:25 - Reading from PUBLIC.DATABASECHANGELOG
14:29:25 - Successfully released change log lock
14:29:25 - Successfully acquired change log lock
Skipping auto-registration
14:29:25 - Skipping auto-registration
14:29:25 - Table EXCHANGE_ACCOUNTS created
14:29:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:29:25 - Table STRATEGIES created
14:29:25 - Auto-increment added to STRATEGIES.ID
14:29:25 - Table POSITIONS created
14:29:25 - Auto-increment added to POSITIONS.ID
14:29:25 - Table ORDERS created
14:29:25 - Auto-increment added to ORDERS.ID
14:29:25 - Table TRADES created
14:29:25 - Auto-increment added to TRADES.ID
14:29:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:29:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:29:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:29:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:29:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:29:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:29:25 - Index IDX_STRATEGIES_STRATEGY_ID created
14:29:25 - Index IDX_POSITIONS_POSITION_ID created
14:29:25 - Index IDX_POSITIONS_STATUS created
14:29:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:29:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:29:25 - Index IDX_ORDERS_ORDER_ID created
14:29:25 - Index IDX_TRADES_TRADE_ID created
14:29:25 - Index IDX_TRADES_ORDER_ID created
14:29:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:29:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:29:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:29:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:29:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:29:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:29:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:29:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:29:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:29:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:29:25 - Successfully released change log lock
14:29:25 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:29:25 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:29:25 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:29:25 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:29:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:29:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:29:26 - Calling Remote Init...
14:29:26 - ExchangeConfiguration - Dry mode is ON
14:29:26 - Adding account 'main'
14:29:26 - - Adding balance 99.0001 BTC
14:29:26 - Adding account 'savings'
14:29:26 - - Adding balance 1.1 BTC
14:29:26 - - Adding balance 2.2 USDT
14:29:26 - - Adding balance 3.3 ETH
14:29:26 - Adding account 'trade'
14:29:26 - - Adding balance 0.99962937 BTC
14:29:26 - - Adding balance 1000 USDT
14:29:26 - - Adding balance 10 ETH
14:29:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:29:27 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:29:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:29:27 - StrategyConfiguration - Accounts available : 'main/main'.
14:29:27 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:29:27 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:29:27 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:29:27 - Started ExchangeServiceDryModeTest in 4.137 seconds (JVM running for 4.944)
14:29:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:29:27 - HikariPool-1 - Shutdown initiated...
14:29:27 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:29:27 - Starting ExchangeServiceDryModeTest using Java 11.0.17 on repairnator with PID 31780 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:29:27 - The following profiles are active: schedule-disabled
14:29:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:27 - Finished Spring Data repository scanning in 34 ms. Found 5 JPA repository interfaces.
14:29:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:27 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:29:27 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:29:27 - HikariPool-2 - Starting...
14:29:27 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:29:27 - HikariPool-2 - Start completed.
14:29:27 - Successfully acquired change log lock
14:29:27 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:29:27 - Reading from PUBLIC.DATABASECHANGELOG
14:29:27 - Successfully released change log lock
14:29:27 - Successfully acquired change log lock
Skipping auto-registration
14:29:27 - Skipping auto-registration
14:29:27 - Table EXCHANGE_ACCOUNTS created
14:29:27 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:29:27 - Table STRATEGIES created
14:29:27 - Auto-increment added to STRATEGIES.ID
14:29:27 - Table POSITIONS created
14:29:27 - Auto-increment added to POSITIONS.ID
14:29:27 - Table ORDERS created
14:29:27 - Auto-increment added to ORDERS.ID
14:29:27 - Table TRADES created
14:29:27 - Auto-increment added to TRADES.ID
14:29:27 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:29:27 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:29:27 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:29:27 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:29:27 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:29:27 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:29:27 - Index IDX_STRATEGIES_STRATEGY_ID created
14:29:27 - Index IDX_POSITIONS_POSITION_ID created
14:29:27 - Index IDX_POSITIONS_STATUS created
14:29:27 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:29:27 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:29:27 - Index IDX_ORDERS_ORDER_ID created
14:29:27 - Index IDX_TRADES_TRADE_ID created
14:29:27 - Index IDX_TRADES_ORDER_ID created
14:29:27 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
14:29:27 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:29:27 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:29:27 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:29:27 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:29:27 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:29:27 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:29:27 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:29:27 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:29:27 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:29:27 - Successfully released change log lock
14:29:27 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:29:27 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:29:27 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:29:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:29:27 - Calling Remote Init...
14:29:27 - ExchangeConfiguration - Dry mode is ON
14:29:27 - Adding account 'main'
14:29:27 - - Adding balance 99.0001 BTC
14:29:27 - Adding account 'savings'
14:29:27 - - Adding balance 1.1 BTC
14:29:27 - - Adding balance 2.2 USDT
14:29:27 - - Adding balance 3.3 ETH
14:29:27 - Adding account 'trade'
14:29:27 - - Adding balance 0.99962937 BTC
14:29:27 - - Adding balance 1000 USDT
14:29:27 - - Adding balance 10 ETH
14:29:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:29:27 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:29:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:29:28 - StrategyConfiguration - Accounts available : 'main/main'.
14:29:28 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:29:28 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:29:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:29:28 - Started ExchangeServiceDryModeTest in 0.799 seconds (JVM running for 5.763)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.302 s - in tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
14:29:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:29:28 - HikariPool-2 - Shutdown initiated...
14:29:28 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
14:29:29.136 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:29:29.143 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:29:29.167 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:29:29.175 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest], using SpringBootContextLoader
14:29:29.177 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceWithPositionsDryModeTest-context.xml] does not exist
14:29:29.178 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceWithPositionsDryModeTestContext.groovy] does not exist
14:29:29.178 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:29:29.178 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: UserServiceWithPositionsDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:29:29.256 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:29:29.257 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
14:29:29.313 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: using defaults.
14:29:29.313 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:29:29.319 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:29:29.324 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b205dbd, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@106cc338, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cc558c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15713d56, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63f259c3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26ceffa8, org.springframework.test.context.event.EventPublishingTestExecutionListener@600b90df, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60129b9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78d6692f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a55af6b]
14:29:29.326 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@291a7e3c testClass = UserServiceWithPositionsDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = UserServiceWithPositionsDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2b91004a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@169e6180, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@25fb8912, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e11f9e9, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@44a664f2], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:29:29.405 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@291a7e3c testClass = UserServiceWithPositionsDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest@676cf48, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = UserServiceWithPositionsDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2b91004a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@169e6180, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@25fb8912, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e11f9e9, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@44a664f2], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:29:29.417 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:29:29.420 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:29:29 - Starting UserServiceWithPositionsDryModeTest using Java 11.0.17 on repairnator with PID 32116 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:29:29 - The following profiles are active: schedule-disabled
14:29:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:30 - Finished Spring Data repository scanning in 145 ms. Found 5 JPA repository interfaces.
14:29:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:30 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:29:30 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:29:30 - HikariPool-1 - Starting...
14:29:30 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:29:30 - HikariPool-1 - Start completed.
14:29:31 - Successfully acquired change log lock
14:29:31 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:29:31 - Reading from PUBLIC.DATABASECHANGELOG
14:29:31 - Successfully released change log lock
14:29:31 - Successfully acquired change log lock
Skipping auto-registration
14:29:31 - Skipping auto-registration
14:29:31 - Table EXCHANGE_ACCOUNTS created
14:29:31 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:29:31 - Table STRATEGIES created
14:29:31 - Auto-increment added to STRATEGIES.ID
14:29:31 - Table POSITIONS created
14:29:31 - Auto-increment added to POSITIONS.ID
14:29:31 - Table ORDERS created
14:29:31 - Auto-increment added to ORDERS.ID
14:29:31 - Table TRADES created
14:29:31 - Auto-increment added to TRADES.ID
14:29:31 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:29:31 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:29:31 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:29:31 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:29:31 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:29:31 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:29:31 - Index IDX_STRATEGIES_STRATEGY_ID created
14:29:31 - Index IDX_POSITIONS_POSITION_ID created
14:29:31 - Index IDX_POSITIONS_STATUS created
14:29:31 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:29:31 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:29:31 - Index IDX_ORDERS_ORDER_ID created
14:29:31 - Index IDX_TRADES_TRADE_ID created
14:29:31 - Index IDX_TRADES_ORDER_ID created
14:29:31 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:29:31 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:29:31 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:29:31 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:29:31 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:29:31 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:29:31 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:29:31 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:29:31 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:29:31 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:29:31 - Successfully released change log lock
14:29:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:29:31 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:29:31 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:29:31 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:29:32 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:29:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:29:33 - Calling Remote Init...
14:29:33 - ExchangeConfiguration - Dry mode is ON
14:29:33 - Adding account 'main'
14:29:33 - - Adding balance 99.0001 BTC
14:29:33 - Adding account 'savings'
14:29:33 - - Adding balance 1.1 BTC
14:29:33 - - Adding balance 2.2 USDT
14:29:33 - - Adding balance 3.3 ETH
14:29:33 - Adding account 'trade'
14:29:33 - - Adding balance 0.99962937 BTC
14:29:33 - - Adding balance 1000 USDT
14:29:33 - - Adding balance 10 ETH
14:29:33 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:29:33 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:29:33 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:29:33 - StrategyConfiguration - Accounts available : 'main/main'.
14:29:33 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:29:33 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:29:33 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:29:33 - Started UserServiceWithPositionsDryModeTest in 4.126 seconds (JVM running for 4.996)
14:29:33 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:29:33 - HikariPool-1 - Shutdown initiated...
14:29:33 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:29:33 - Starting UserServiceWithPositionsDryModeTest using Java 11.0.17 on repairnator with PID 32116 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:29:33 - The following profiles are active: schedule-disabled
14:29:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:33 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:29:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:29:33 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:29:33 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:29:33 - HikariPool-2 - Starting...
14:29:33 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:29:33 - HikariPool-2 - Start completed.
14:29:33 - Successfully acquired change log lock
14:29:33 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:29:33 - Reading from PUBLIC.DATABASECHANGELOG
14:29:33 - Successfully released change log lock
14:29:33 - Successfully acquired change log lock
Skipping auto-registration
14:29:33 - Skipping auto-registration
14:29:33 - Table EXCHANGE_ACCOUNTS created
14:29:33 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:29:33 - Table STRATEGIES created
14:29:33 - Auto-increment added to STRATEGIES.ID
14:29:33 - Table POSITIONS created
14:29:33 - Auto-increment added to POSITIONS.ID
14:29:33 - Table ORDERS created
14:29:33 - Auto-increment added to ORDERS.ID
14:29:33 - Table TRADES created
14:29:33 - Auto-increment added to TRADES.ID
14:29:33 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:29:33 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:29:33 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:29:33 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:29:33 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:29:33 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:29:33 - Index IDX_STRATEGIES_STRATEGY_ID created
14:29:33 - Index IDX_POSITIONS_POSITION_ID created
14:29:33 - Index IDX_POSITIONS_STATUS created
14:29:33 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:29:33 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:29:33 - Index IDX_ORDERS_ORDER_ID created
14:29:33 - Index IDX_TRADES_TRADE_ID created
14:29:33 - Index IDX_TRADES_ORDER_ID created
14:29:33 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 19ms
14:29:33 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:29:33 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:29:33 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:29:33 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:29:33 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:29:33 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:29:33 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:29:33 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:29:33 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:29:33 - Successfully released change log lock
14:29:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:29:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:29:34 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:29:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:29:34 - Calling Remote Init...
14:29:34 - ExchangeConfiguration - Dry mode is ON
14:29:34 - Adding account 'main'
14:29:34 - - Adding balance 99.0001 BTC
14:29:34 - Adding account 'savings'
14:29:34 - - Adding balance 1.1 BTC
14:29:34 - - Adding balance 2.2 USDT
14:29:34 - - Adding balance 3.3 ETH
14:29:34 - Adding account 'trade'
14:29:34 - - Adding balance 0.99962937 BTC
14:29:34 - - Adding balance 1000 USDT
14:29:34 - - Adding balance 10 ETH
14:29:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:29:34 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
14:29:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:29:34 - StrategyConfiguration - Accounts available : 'main/main'.
14:29:34 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:29:34 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:29:34 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
14:29:34 - Started UserServiceWithPositionsDryModeTest in 0.74 seconds (JVM running for 5.758)
14:29:34 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:29:34 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.03, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:34.385841Z[Etc/UTC])

14:29:35 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:29:35 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=1500, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:35.420875Z[Etc/UTC])

14:29:36 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:29:36 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:36.423424Z[Etc/UTC])

14:29:37 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=KCS/USDT, open=null, last=4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:37.425977Z[Etc/UTC])

14:29:38 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/ETH, open=null, last=50, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:38.428633Z[Etc/UTC])

14:29:41 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:41 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, averagePrice=1500 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.5 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399040Z[Etc/UTC], trades=[])

14:29:42 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:42 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.5 ETH, price=1500 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399899Z[Etc/UTC])

14:29:43 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, averagePrice=1500 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.5 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399040Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:44 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:45 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:48 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=10, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:29:48.551427Z[Etc/UTC])

14:29:48 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10 USDT, highestGainPrice=10 USDT, latestGainPrice=10 USDT)

14:29:49 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:50 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525455Z[Etc/UTC], trades=[])

14:29:50 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:50 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10 ETH, price=10 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525556Z[Etc/UTC])

14:29:51 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525455Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:52 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:53 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:56 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:57 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, averagePrice=4 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20 KCS, userReference=null, timestamp=2023-01-17T14:29:56.568704Z[Etc/UTC], trades=[])

14:29:57 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:57 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=KCS/USDT, amount=20 KCS, price=4 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:29:56.568789Z[Etc/UTC])

14:29:58 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, averagePrice=4 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20 KCS, userReference=null, timestamp=2023-01-17T14:29:56.568704Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:29:59 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-17T14:29:56.568Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=KCS/USDT, amount=20.00000000 KCS, price=4.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:56.568Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:00 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-17T14:29:56.568Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=KCS/USDT, amount=20.00000000 KCS, price=4.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:56.568Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:03 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:04 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606259Z[Etc/UTC], trades=[])

14:30:04 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:04 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1 ETH, price=10 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606325Z[Etc/UTC])

14:30:05 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606259Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:06 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:07 - TestableStrategy-onPositionStatusUpdate 008 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:10 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10.00000000 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

14:30:10 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:30:10.681096Z[Etc/UTC])

14:30:11 - TestableStrategy-onOrderUpdate 005 : OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:10.665215Z[Etc/UTC], trades=[])

14:30:11 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100 USDT)

14:30:11 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:30:10.665244Z[Etc/UTC])

14:30:12 - TestableStrategy-onPositionStatusUpdate 009 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100 USDT)

14:30:12 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:30:12.729794Z[Etc/UTC])

14:30:13 - TestableStrategy-onOrderUpdate 006 : OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:12.680335Z[Etc/UTC], trades=[])

14:30:13 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=100 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

14:30:13 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:30:12.680356Z[Etc/UTC])

14:30:14 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:10.665215Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

14:30:15 - TestableStrategy-onPositionUpdate 018 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:10.665Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:10.665Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

14:30:16 - TestableStrategy-onPositionStatusUpdate 010 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:49.525Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:10.665Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:10.665Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

14:30:17 - TestableStrategy-onPositionUpdate 019 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:29:41.399Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=2 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

14:30:18 - TestableStrategy-onPositionUpdate 020 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=null, lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

14:30:19 - TestableStrategy-onPositionStatusUpdate 011 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=null, lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

14:30:20 - TestableStrategy-onPositionUpdate 021 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:12.680335Z[Etc/UTC], trades=[]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

14:30:21 - TestableStrategy-onPositionUpdate 022 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:12.680Z[Etc/UTC], trades=[TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:12.680Z[Etc/UTC])]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

14:30:22 - TestableStrategy-onPositionStatusUpdate 012 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:03.606Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-17T14:30:12.680Z[Etc/UTC], trades=[TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:30:12.680Z[Etc/UTC])]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 55.625 s - in tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
14:30:24 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:30:24 - HikariPool-2 - Shutdown initiated...
14:30:24 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
14:30:25.863 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:30:25.871 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:30:25.898 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:30:25.906 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest], using SpringBootContextLoader
14:30:25.909 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceForceClosingTest-context.xml] does not exist
14:30:25.909 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceForceClosingTestContext.groovy] does not exist
14:30:25.909 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:30:25.910 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: PositionServiceForceClosingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:30:25.990 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:30:25.991 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
14:30:26.049 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: using defaults.
14:30:26.049 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:30:26.055 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:30:26.061 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@78641d23, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@74589991, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@146dfe6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@4716be8b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1fc32e4f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2f67b837, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1869fbd2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6af9fcb2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3b7d3a38]
14:30:26.063 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@60856961 testClass = PositionServiceForceClosingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2fd953a6 testClass = PositionServiceForceClosingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a4add54 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5d0a1059, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@54bff557, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@290222c1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@b9b00e0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:30:26.106 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@60856961 testClass = PositionServiceForceClosingTest, testInstance = tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest@30af5b6b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2fd953a6 testClass = PositionServiceForceClosingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a4add54 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5d0a1059, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@54bff557, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@290222c1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@b9b00e0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2357d90a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:30:26.118 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:30:26.121 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:30:26 - Starting PositionServiceForceClosingTest using Java 11.0.17 on repairnator with PID 34077 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:30:26 - The following profiles are active: schedule-disabled
14:30:26 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:30:26 - Finished Spring Data repository scanning in 151 ms. Found 5 JPA repository interfaces.
14:30:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:30:27 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:30:27 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:30:27 - HikariPool-1 - Starting...
14:30:27 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:30:27 - HikariPool-1 - Start completed.
14:30:27 - Successfully acquired change log lock
14:30:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:30:28 - Reading from PUBLIC.DATABASECHANGELOG
14:30:28 - Successfully released change log lock
14:30:28 - Successfully acquired change log lock
Skipping auto-registration
14:30:28 - Skipping auto-registration
14:30:28 - Table EXCHANGE_ACCOUNTS created
14:30:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:30:28 - Table STRATEGIES created
14:30:28 - Auto-increment added to STRATEGIES.ID
14:30:28 - Table POSITIONS created
14:30:28 - Auto-increment added to POSITIONS.ID
14:30:28 - Table ORDERS created
14:30:28 - Auto-increment added to ORDERS.ID
14:30:28 - Table TRADES created
14:30:28 - Auto-increment added to TRADES.ID
14:30:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:30:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:30:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:30:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:30:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:30:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:30:28 - Index IDX_STRATEGIES_STRATEGY_ID created
14:30:28 - Index IDX_POSITIONS_POSITION_ID created
14:30:28 - Index IDX_POSITIONS_STATUS created
14:30:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:30:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:30:28 - Index IDX_ORDERS_ORDER_ID created
14:30:28 - Index IDX_TRADES_TRADE_ID created
14:30:28 - Index IDX_TRADES_ORDER_ID created
14:30:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:30:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:30:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:30:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:30:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:30:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:30:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:30:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 21ms
14:30:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:30:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:30:28 - Successfully released change log lock
14:30:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:30:28 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:30:28 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:30:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:30:29 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:30:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:30:30 - Calling Remote Init...
14:30:30 - ExchangeConfiguration - Dry mode is ON
14:30:30 - Adding account 'main'
14:30:30 - - Adding balance 99.0001 BTC
14:30:30 - Adding account 'savings'
14:30:30 - - Adding balance 1.1 BTC
14:30:30 - - Adding balance 2.2 USDT
14:30:30 - - Adding balance 3.3 ETH
14:30:30 - Adding account 'trade'
14:30:30 - - Adding balance 0.99962937 BTC
14:30:30 - - Adding balance 1000 USDT
14:30:30 - - Adding balance 10 ETH
14:30:30 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:30:30 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:30:30 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:30:30 - StrategyConfiguration - Accounts available : 'main/main'.
14:30:30 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:30:30 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:30:30 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:30:30 - Started PositionServiceForceClosingTest in 4.368 seconds (JVM running for 5.328)
14:30:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:30:30 - HikariPool-1 - Shutdown initiated...
14:30:30 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:30:30 - Starting PositionServiceForceClosingTest using Java 11.0.17 on repairnator with PID 34077 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:30:30 - The following profiles are active: schedule-disabled
14:30:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:30:30 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:30:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:30:30 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:30:30 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:30:30 - HikariPool-2 - Starting...
14:30:30 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:30:30 - HikariPool-2 - Start completed.
14:30:30 - Successfully acquired change log lock
14:30:30 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:30:30 - Reading from PUBLIC.DATABASECHANGELOG
14:30:30 - Successfully released change log lock
14:30:30 - Successfully acquired change log lock
Skipping auto-registration
14:30:30 - Skipping auto-registration
14:30:30 - Table EXCHANGE_ACCOUNTS created
14:30:30 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:30:30 - Table STRATEGIES created
14:30:30 - Auto-increment added to STRATEGIES.ID
14:30:30 - Table POSITIONS created
14:30:30 - Auto-increment added to POSITIONS.ID
14:30:30 - Table ORDERS created
14:30:30 - Auto-increment added to ORDERS.ID
14:30:30 - Table TRADES created
14:30:30 - Auto-increment added to TRADES.ID
14:30:30 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:30:30 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:30:30 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:30:30 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:30:30 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:30:30 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:30:30 - Index IDX_STRATEGIES_STRATEGY_ID created
14:30:30 - Index IDX_POSITIONS_POSITION_ID created
14:30:30 - Index IDX_POSITIONS_STATUS created
14:30:30 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:30:30 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:30:30 - Index IDX_ORDERS_ORDER_ID created
14:30:30 - Index IDX_TRADES_TRADE_ID created
14:30:30 - Index IDX_TRADES_ORDER_ID created
14:30:30 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 19ms
14:30:30 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:30:30 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:30:30 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:30:30 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:30:30 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:30:30 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:30:30 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:30:30 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:30:30 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:30:30 - Successfully released change log lock
14:30:30 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:30:30 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:30:30 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:30:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:30:31 - Calling Remote Init...
14:30:31 - ExchangeConfiguration - Dry mode is ON
14:30:31 - Adding account 'main'
14:30:31 - - Adding balance 99.0001 BTC
14:30:31 - Adding account 'savings'
14:30:31 - - Adding balance 1.1 BTC
14:30:31 - - Adding balance 2.2 USDT
14:30:31 - - Adding balance 3.3 ETH
14:30:31 - Adding account 'trade'
14:30:31 - - Adding balance 0.99962937 BTC
14:30:31 - - Adding balance 1000 USDT
14:30:31 - - Adding balance 10 ETH
14:30:31 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:30:31 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:30:31 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:30:31 - StrategyConfiguration - Accounts available : 'main/main'.
14:30:31 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:30:31 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:30:31 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:30:31 - Started PositionServiceForceClosingTest in 0.788 seconds (JVM running for 6.137)
14:30:31 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:30:31 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:31 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:30:32 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:30:32 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:32 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:30:33 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:34 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:35 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:36 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:36 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

14:30:37 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:37 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.3 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:30:38 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:39 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:40 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:30:40 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:30:41 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.2 BTC, highestGainPrice=0.2 BTC, latestGainPrice=0.2 BTC)

14:30:41 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

14:30:42 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 USDT, highestGainPrice=0.3 USDT, latestGainPrice=0.3 USDT)

14:30:45 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:30:45 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

14:30:46 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

14:30:46 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31 USDT, latestGainPrice=0.31 USDT)

14:30:50 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

14:30:50 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

14:30:51 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:30:51 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31 USDT)

14:30:52 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[])

14:30:52 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31 USDT)

14:30:52 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:30:53 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

14:30:54 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

14:30:55 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:30:55 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

14:30:56 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

14:30:56 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

14:30:56 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

14:30:56 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.21 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:30:57 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

14:30:58 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21000000 BTC)

14:30:59 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.21000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21000000 BTC)

14:31:00 - TestableStrategy-onPositionStatusUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.21000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21000000 BTC)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 34.679 s - in tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
14:31:00 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:00 - HikariPool-2 - Shutdown initiated...
14:31:00 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
14:31:01.570 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:31:01.577 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:31:01.601 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:31:01.608 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest], using SpringBootContextLoader
14:31:01.610 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/TradeServiceDryModeTest-context.xml] does not exist
14:31:01.610 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/TradeServiceDryModeTestContext.groovy] does not exist
14:31:01.611 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:31:01.611 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: TradeServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:31:01.690 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:31:01.690 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
14:31:01.745 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: using defaults.
14:31:01.746 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:31:01.751 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:31:01.756 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f67b837, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1869fbd2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cce16f4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7efaad5a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@291a7e3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ca30bc1, org.springframework.test.context.event.EventPublishingTestExecutionListener@1046d517, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2bb3058]
14:31:01.758 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3abada5a testClass = TradeServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = TradeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2d2e5f00], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:31:01.798 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3abada5a testClass = TradeServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest@42039326, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = TradeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2d2e5f00], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:31:01.811 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:31:01.813 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:01 - Starting TradeServiceDryModeTest using Java 11.0.17 on repairnator with PID 35405 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:01 - The following profiles are active: schedule-disabled
14:31:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:02 - Finished Spring Data repository scanning in 113 ms. Found 5 JPA repository interfaces.
14:31:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:02 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:31:02 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:02 - HikariPool-1 - Starting...
14:31:03 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:03 - HikariPool-1 - Start completed.
14:31:03 - Successfully acquired change log lock
14:31:03 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:03 - Reading from PUBLIC.DATABASECHANGELOG
14:31:03 - Successfully released change log lock
14:31:03 - Successfully acquired change log lock
Skipping auto-registration
14:31:03 - Skipping auto-registration
14:31:03 - Table EXCHANGE_ACCOUNTS created
14:31:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:03 - Table STRATEGIES created
14:31:03 - Auto-increment added to STRATEGIES.ID
14:31:03 - Table POSITIONS created
14:31:03 - Auto-increment added to POSITIONS.ID
14:31:03 - Table ORDERS created
14:31:03 - Auto-increment added to ORDERS.ID
14:31:03 - Table TRADES created
14:31:03 - Auto-increment added to TRADES.ID
14:31:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:03 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:03 - Index IDX_POSITIONS_POSITION_ID created
14:31:03 - Index IDX_POSITIONS_STATUS created
14:31:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:03 - Index IDX_ORDERS_ORDER_ID created
14:31:03 - Index IDX_TRADES_TRADE_ID created
14:31:03 - Index IDX_TRADES_ORDER_ID created
14:31:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:31:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:31:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:31:03 - Successfully released change log lock
14:31:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:03 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:31:04 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:31:04 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:05 - Calling Remote Init...
14:31:05 - ExchangeConfiguration - Dry mode is ON
14:31:05 - Adding account 'main'
14:31:05 - - Adding balance 99.0001 BTC
14:31:05 - Adding account 'savings'
14:31:05 - - Adding balance 1.1 BTC
14:31:05 - - Adding balance 2.2 USDT
14:31:05 - - Adding balance 3.3 ETH
14:31:05 - Adding account 'trade'
14:31:05 - - Adding balance 0.99962937 BTC
14:31:05 - - Adding balance 1000 USDT
14:31:05 - - Adding balance 10 ETH
14:31:05 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:05 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:31:05 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:05 - StrategyConfiguration - Accounts available : 'main/main'.
14:31:05 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:31:05 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:31:05 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:05 - Started TradeServiceDryModeTest in 4.058 seconds (JVM running for 4.911)
14:31:05 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:05 - HikariPool-1 - Shutdown initiated...
14:31:05 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:05 - Starting TradeServiceDryModeTest using Java 11.0.17 on repairnator with PID 35405 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:05 - The following profiles are active: schedule-disabled
14:31:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:06 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:31:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:06 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:31:06 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:06 - HikariPool-2 - Starting...
14:31:06 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:06 - HikariPool-2 - Start completed.
14:31:06 - Successfully acquired change log lock
14:31:06 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:06 - Reading from PUBLIC.DATABASECHANGELOG
14:31:06 - Successfully released change log lock
14:31:06 - Successfully acquired change log lock
Skipping auto-registration
14:31:06 - Skipping auto-registration
14:31:06 - Table EXCHANGE_ACCOUNTS created
14:31:06 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:06 - Table STRATEGIES created
14:31:06 - Auto-increment added to STRATEGIES.ID
14:31:06 - Table POSITIONS created
14:31:06 - Auto-increment added to POSITIONS.ID
14:31:06 - Table ORDERS created
14:31:06 - Auto-increment added to ORDERS.ID
14:31:06 - Table TRADES created
14:31:06 - Auto-increment added to TRADES.ID
14:31:06 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:06 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:06 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:06 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:06 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:06 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:06 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:06 - Index IDX_POSITIONS_POSITION_ID created
14:31:06 - Index IDX_POSITIONS_STATUS created
14:31:06 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:06 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:06 - Index IDX_ORDERS_ORDER_ID created
14:31:06 - Index IDX_TRADES_TRADE_ID created
14:31:06 - Index IDX_TRADES_ORDER_ID created
14:31:06 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
14:31:06 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:06 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:06 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:06 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:06 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:06 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:06 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:31:06 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:06 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:31:06 - Successfully released change log lock
14:31:06 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:06 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:06 - Calling Remote Init...
14:31:06 - ExchangeConfiguration - Dry mode is ON
14:31:06 - Adding account 'main'
14:31:06 - - Adding balance 99.0001 BTC
14:31:06 - Adding account 'savings'
14:31:06 - - Adding balance 1.1 BTC
14:31:06 - - Adding balance 2.2 USDT
14:31:06 - - Adding balance 3.3 ETH
14:31:06 - Adding account 'trade'
14:31:06 - - Adding balance 0.99962937 BTC
14:31:06 - - Adding balance 1000 USDT
14:31:06 - - Adding balance 10 ETH
14:31:06 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:06 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:31:06 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:06 - StrategyConfiguration - Accounts available : 'main/main'.
14:31:06 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:31:06 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:31:06 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:06 - Started TradeServiceDryModeTest in 0.814 seconds (JVM running for 5.749)
14:31:06 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:06.450737Z[Etc/UTC])

14:31:07 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 ETH, userReference=null, timestamp=2023-01-17T14:31:06.450737Z[Etc/UTC], trades=[])

14:31:07 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=ETH/BTC, amount=0.001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:31:06.450737Z[Etc/UTC])

14:31:09 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.002 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.002 ETH, userReference=null, timestamp=2023-01-17T14:31:06.450737Z[Etc/UTC], trades=[])

14:31:09 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=ASK, orderId=DRY_ORDER_000000002, currencyPair=ETH/BTC, amount=0.002 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:31:06.450737Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.266 s - in tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
14:31:15 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:15 - HikariPool-2 - Shutdown initiated...
14:31:15 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
14:31:16.859 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:31:16.866 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:31:16.890 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:31:16.898 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest], using SpringBootContextLoader
14:31:16.900 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionGainsServiceTest-context.xml] does not exist
14:31:16.900 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionGainsServiceTestContext.groovy] does not exist
14:31:16.901 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:31:16.901 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: PositionGainsServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:31:16.971 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:31:16.972 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
14:31:17.026 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: using defaults.
14:31:17.026 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:31:17.032 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:31:17.037 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2421cc4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@30c93896, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@338c99c8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21ba0741, org.springframework.test.context.transaction.TransactionalTestExecutionListener@58ce9668, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@172b013, org.springframework.test.context.event.EventPublishingTestExecutionListener@56673b2c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2796aeae, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b4711e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70f02c32, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@51fadaff]
14:31:17.039 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7a55af6b testClass = PositionGainsServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = PositionGainsServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25084a1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@16610890, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@611889f4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@593aaf41, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:31:17.055 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7a55af6b testClass = PositionGainsServiceTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest@4f0100a7, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = PositionGainsServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@25084a1e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@16610890, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@611889f4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@593aaf41, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4206a205], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:31:17.077 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:31:17.081 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:17 - Starting PositionGainsServiceTest using Java 11.0.17 on repairnator with PID 36046 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:17 - The following profiles are active: schedule-disabled
14:31:17 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:17 - Finished Spring Data repository scanning in 146 ms. Found 5 JPA repository interfaces.
14:31:17 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:17 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:31:18 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:18 - HikariPool-1 - Starting...
14:31:18 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:18 - HikariPool-1 - Start completed.
14:31:18 - Successfully acquired change log lock
14:31:19 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:19 - Reading from PUBLIC.DATABASECHANGELOG
14:31:19 - Successfully released change log lock
14:31:19 - Successfully acquired change log lock
Skipping auto-registration
14:31:19 - Skipping auto-registration
14:31:19 - Table EXCHANGE_ACCOUNTS created
14:31:19 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:19 - Table STRATEGIES created
14:31:19 - Auto-increment added to STRATEGIES.ID
14:31:19 - Table POSITIONS created
14:31:19 - Auto-increment added to POSITIONS.ID
14:31:19 - Table ORDERS created
14:31:19 - Auto-increment added to ORDERS.ID
14:31:19 - Table TRADES created
14:31:19 - Auto-increment added to TRADES.ID
14:31:19 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:19 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:19 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:19 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:19 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:19 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:19 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:19 - Index IDX_POSITIONS_POSITION_ID created
14:31:19 - Index IDX_POSITIONS_STATUS created
14:31:19 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:19 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:19 - Index IDX_ORDERS_ORDER_ID created
14:31:19 - Index IDX_TRADES_TRADE_ID created
14:31:19 - Index IDX_TRADES_ORDER_ID created
14:31:19 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:31:19 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:19 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:19 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:19 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:19 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:19 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:19 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:31:19 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:19 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:31:19 - Successfully released change log lock
14:31:19 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:19 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:31:19 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:31:19 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:20 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:20 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:20 - Calling Remote Init...
14:31:20 - ExchangeConfiguration - Dry mode is OFF
14:31:21 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:21 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:31:21 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:21 - StrategyConfiguration - Accounts available : 'null/null'.
14:31:21 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:21 - Started PositionGainsServiceTest in 4.318 seconds (JVM running for 5.154)
14:31:21 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=4, positionId=4, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, rules=No rules, status=OPENED, forceClosing=false, openingOrderId=OPEN_ORDER_04, openingOrder=OrderDTO(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=10, tradeId=TRADE_41, type=BID, orderId=OPEN_ORDER_04, currencyPair=BTC/USDT, amount=50.00000000 BTC, price=20.00000000 USDT, fee=6.00000000 USDT, userReference=null, timestamp=2020-08-05T00:00Z[Etc/UTC])]), closingOrderId=CLOSE_ORDER_04, closingOrder=OrderDTO(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=TRADE_42, type=ASK, orderId=CLOSE_ORDER_04, currencyPair=BTC/USDT, amount=50.00000000 BTC, price=25.00000000 USDT, fee=5.00000000 USDT, userReference=null, timestamp=2020-08-06T00:00Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:21 - HikariPool-1 - Shutdown initiated...
14:31:21 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:21 - Starting PositionGainsServiceTest using Java 11.0.17 on repairnator with PID 36046 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:21 - The following profiles are active: schedule-disabled
14:31:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:21 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:31:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:21 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:31:21 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:21 - HikariPool-2 - Starting...
14:31:21 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:21 - HikariPool-2 - Start completed.
14:31:21 - Successfully acquired change log lock
14:31:21 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:21 - Reading from PUBLIC.DATABASECHANGELOG
14:31:21 - Successfully released change log lock
14:31:21 - Successfully acquired change log lock
Skipping auto-registration
14:31:21 - Skipping auto-registration
14:31:21 - Table EXCHANGE_ACCOUNTS created
14:31:21 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:21 - Table STRATEGIES created
14:31:21 - Auto-increment added to STRATEGIES.ID
14:31:21 - Table POSITIONS created
14:31:21 - Auto-increment added to POSITIONS.ID
14:31:21 - Table ORDERS created
14:31:21 - Auto-increment added to ORDERS.ID
14:31:21 - Table TRADES created
14:31:21 - Auto-increment added to TRADES.ID
14:31:21 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:21 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:21 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:21 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:21 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:21 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:21 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:21 - Index IDX_POSITIONS_POSITION_ID created
14:31:21 - Index IDX_POSITIONS_STATUS created
14:31:21 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:21 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:21 - Index IDX_ORDERS_ORDER_ID created
14:31:21 - Index IDX_TRADES_TRADE_ID created
14:31:21 - Index IDX_TRADES_ORDER_ID created
14:31:21 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
14:31:21 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:21 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:21 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:21 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:21 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:21 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:21 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 4ms
14:31:21 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:21 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:31:21 - Successfully released change log lock
14:31:21 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:21 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:21 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:21 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:22 - Calling Remote Init...
14:31:22 - ExchangeConfiguration - Dry mode is OFF
14:31:22 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:22 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:31:22 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:22 - StrategyConfiguration - Accounts available : 'null/null'.
14:31:22 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:22 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=4, positionId=4, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, rules=No rules, status=OPENED, forceClosing=false, openingOrderId=OPEN_ORDER_04, openingOrder=OrderDTO(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=10, tradeId=TRADE_41, type=BID, orderId=OPEN_ORDER_04, currencyPair=BTC/USDT, amount=50.00000000 BTC, price=20.00000000 USDT, fee=6.00000000 USDT, userReference=null, timestamp=2020-08-05T00:00Z[Etc/UTC])]), closingOrderId=CLOSE_ORDER_04, closingOrder=OrderDTO(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=TRADE_42, type=ASK, orderId=CLOSE_ORDER_04, currencyPair=BTC/USDT, amount=50.00000000 BTC, price=25.00000000 USDT, fee=5.00000000 USDT, userReference=null, timestamp=2020-08-06T00:00Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:22 - Started PositionGainsServiceTest in 0.844 seconds (JVM running for 6.035)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.546 s - in tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
14:31:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:22 - HikariPool-2 - Shutdown initiated...
14:31:22 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
14:31:23.414 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:31:23.424 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:31:23.448 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:31:23.455 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest], using SpringBootContextLoader
14:31:23.458 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionServiceTest-context.xml] does not exist
14:31:23.458 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionServiceTestContext.groovy] does not exist
14:31:23.458 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:31:23.459 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: PositionServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:31:23.531 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:31:23.532 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
14:31:23.586 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: using defaults.
14:31:23.586 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:31:23.592 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:31:23.596 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5a2d131d, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@14fc1f0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4ae9cfc1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@512baff6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@632ceb35, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1c93f6e1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1800a575, org.springframework.test.context.event.EventPublishingTestExecutionListener@1458ed9c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@10a9d961, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@130e116b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@e383572, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5ddf0d24, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@363a52f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@60856961]
14:31:23.598 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5ba88be8 testClass = PositionServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@56928307 testClass = PositionServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3899782c key = [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@ffaa6af, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6404f418, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@201a4587, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4659191b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4f80542f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@157632c9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:31:23.639 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5ba88be8 testClass = PositionServiceTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest@4b6e2263, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@56928307 testClass = PositionServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3899782c key = [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@ffaa6af, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6404f418, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@201a4587, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4659191b, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4f80542f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@157632c9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:31:23.651 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:31:23.654 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:23 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:23 - The following profiles are active: schedule-disabled
14:31:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:24 - Finished Spring Data repository scanning in 120 ms. Found 5 JPA repository interfaces.
14:31:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:24 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:31:24 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:24 - HikariPool-1 - Starting...
14:31:25 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:25 - HikariPool-1 - Start completed.
14:31:25 - Successfully acquired change log lock
14:31:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:25 - Reading from PUBLIC.DATABASECHANGELOG
14:31:25 - Successfully released change log lock
14:31:25 - Successfully acquired change log lock
Skipping auto-registration
14:31:25 - Skipping auto-registration
14:31:25 - Table EXCHANGE_ACCOUNTS created
14:31:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:25 - Table STRATEGIES created
14:31:25 - Auto-increment added to STRATEGIES.ID
14:31:25 - Table POSITIONS created
14:31:25 - Auto-increment added to POSITIONS.ID
14:31:25 - Table ORDERS created
14:31:25 - Auto-increment added to ORDERS.ID
14:31:25 - Table TRADES created
14:31:25 - Auto-increment added to TRADES.ID
14:31:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:25 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:25 - Index IDX_POSITIONS_POSITION_ID created
14:31:25 - Index IDX_POSITIONS_STATUS created
14:31:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:25 - Index IDX_ORDERS_ORDER_ID created
14:31:25 - Index IDX_TRADES_TRADE_ID created
14:31:25 - Index IDX_TRADES_ORDER_ID created
14:31:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:31:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:31:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:31:25 - Successfully released change log lock
14:31:25 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:25 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:31:25 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:31:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:27 - Calling Remote Init...
14:31:27 - ExchangeConfiguration - Dry mode is OFF
14:31:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:27 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:31:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:27 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:31:27 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:27 - Started PositionServiceTest in 4.177 seconds (JVM running for 5.031)
14:31:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:27 - HikariPool-1 - Shutdown initiated...
14:31:27 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:27 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:27 - The following profiles are active: schedule-disabled
14:31:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:28 - Finished Spring Data repository scanning in 25 ms. Found 5 JPA repository interfaces.
14:31:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:28 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:31:28 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:28 - HikariPool-2 - Starting...
14:31:28 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:28 - HikariPool-2 - Start completed.
14:31:28 - Successfully acquired change log lock
14:31:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:28 - Reading from PUBLIC.DATABASECHANGELOG
14:31:28 - Successfully released change log lock
14:31:28 - Successfully acquired change log lock
Skipping auto-registration
14:31:28 - Skipping auto-registration
14:31:28 - Table EXCHANGE_ACCOUNTS created
14:31:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:28 - Table STRATEGIES created
14:31:28 - Auto-increment added to STRATEGIES.ID
14:31:28 - Table POSITIONS created
14:31:28 - Auto-increment added to POSITIONS.ID
14:31:28 - Table ORDERS created
14:31:28 - Auto-increment added to ORDERS.ID
14:31:28 - Table TRADES created
14:31:28 - Auto-increment added to TRADES.ID
14:31:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:28 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:28 - Index IDX_POSITIONS_POSITION_ID created
14:31:28 - Index IDX_POSITIONS_STATUS created
14:31:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:28 - Index IDX_ORDERS_ORDER_ID created
14:31:28 - Index IDX_TRADES_TRADE_ID created
14:31:28 - Index IDX_TRADES_ORDER_ID created
14:31:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 19ms
14:31:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 3ms
14:31:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:31:28 - Successfully released change log lock
14:31:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:28 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:28 - Calling Remote Init...
14:31:28 - ExchangeConfiguration - Dry mode is OFF
14:31:28 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:28 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:31:28 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:28 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:31:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:28 - Started PositionServiceTest in 0.776 seconds (JVM running for 5.829)
14:31:28 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:28 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:28.643633Z[Etc/UTC], trades=[])

14:31:29 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:30 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:28.643633Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:31 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

14:31:31 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:28.643Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:32 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:28.643Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:32 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.5, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:32.788503Z[Etc/UTC])

14:31:37 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:37.810115Z[Etc/UTC])

14:31:37 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:28.643Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.3 BTC, latestGainPrice=0.3 BTC)

14:31:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:31:42 - HikariPool-2 - Shutdown initiated...
14:31:42 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:31:42 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:31:42 - The following profiles are active: schedule-disabled
14:31:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:42 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
14:31:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:31:42 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:31:43 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:31:43 - HikariPool-3 - Starting...
14:31:43 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:31:43 - HikariPool-3 - Start completed.
14:31:43 - Successfully acquired change log lock
14:31:43 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:31:43 - Reading from PUBLIC.DATABASECHANGELOG
14:31:43 - Successfully released change log lock
14:31:43 - Successfully acquired change log lock
Skipping auto-registration
14:31:43 - Skipping auto-registration
14:31:43 - Table EXCHANGE_ACCOUNTS created
14:31:43 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:31:43 - Table STRATEGIES created
14:31:43 - Auto-increment added to STRATEGIES.ID
14:31:43 - Table POSITIONS created
14:31:43 - Auto-increment added to POSITIONS.ID
14:31:43 - Table ORDERS created
14:31:43 - Auto-increment added to ORDERS.ID
14:31:43 - Table TRADES created
14:31:43 - Auto-increment added to TRADES.ID
14:31:43 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:31:43 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:31:43 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:31:43 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:31:43 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:31:43 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:31:43 - Index IDX_STRATEGIES_STRATEGY_ID created
14:31:43 - Index IDX_POSITIONS_POSITION_ID created
14:31:43 - Index IDX_POSITIONS_STATUS created
14:31:43 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:31:43 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:31:43 - Index IDX_ORDERS_ORDER_ID created
14:31:43 - Index IDX_TRADES_TRADE_ID created
14:31:43 - Index IDX_TRADES_ORDER_ID created
14:31:43 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:31:43 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:31:43 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:31:43 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:31:43 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:31:43 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:31:43 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:31:43 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:31:43 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:31:43 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:31:43 - Successfully released change log lock
14:31:43 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:31:43 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:31:43 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:31:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:31:43 - Calling Remote Init...
14:31:43 - ExchangeConfiguration - Dry mode is OFF
14:31:43 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:31:43 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:31:43 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:31:43 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:31:43 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:31:43 - Started PositionServiceTest in 0.675 seconds (JVM running for 20.703)
14:31:43 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:43 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507564Z[Etc/UTC], trades=[])

14:31:44 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:45 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507564Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:45 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:45.543956Z[Etc/UTC])

14:31:46 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.000001, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:46.546720Z[Etc/UTC])

14:31:50 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:50 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10 ETH, price=0.03 BTC, fee=null, userReference=null, timestamp=null)

14:31:51 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:31:51 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.18, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:51.644631Z[Etc/UTC])

14:31:52 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.18 BTC, highestGainPrice=0.18 BTC, latestGainPrice=0.18 BTC)

14:31:56 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:31:56.611109Z[Etc/UTC])

14:31:56 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.06 BTC)

14:32:01 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.09, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:01.617502Z[Etc/UTC])

14:32:01 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06000000 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.09 BTC)

14:32:06 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:06.621076Z[Etc/UTC])

14:32:06 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.015 BTC)

14:32:11 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:11.627169Z[Etc/UTC])

14:32:11 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

14:32:16 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:16.639020Z[Etc/UTC])

14:32:16 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

14:32:17 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

14:32:21 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:16.625362Z[Etc/UTC], trades=[])

14:32:21 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:16.625362Z[Etc/UTC], trades=[]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:32:22 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:16.625Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=20.00000000 BTC, fee=null, userReference=null, timestamp=null)]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:32:22 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=10 ETH, price=20 BTC, fee=null, userReference=null, timestamp=null)

14:32:23 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.27, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:23.653342Z[Etc/UTC])

14:32:23 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:31:43.507Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:16.625Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, currencyPair=ETH/BTC, amount=10.00000000 ETH, price=20.00000000 BTC, fee=null, userReference=null, timestamp=null)]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

14:32:28 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.003, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:32:28.659647Z[Etc/UTC])

14:32:33 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:33 - HikariPool-3 - Shutdown initiated...
14:32:33 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:33 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:33 - The following profiles are active: schedule-disabled
14:32:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:33 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
14:32:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:33 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:32:33 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:33 - HikariPool-4 - Starting...
14:32:33 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:33 - HikariPool-4 - Start completed.
14:32:33 - Successfully acquired change log lock
14:32:33 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:33 - Reading from PUBLIC.DATABASECHANGELOG
14:32:33 - Successfully released change log lock
14:32:33 - Successfully acquired change log lock
Skipping auto-registration
14:32:33 - Skipping auto-registration
14:32:33 - Table EXCHANGE_ACCOUNTS created
14:32:33 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:33 - Table STRATEGIES created
14:32:33 - Auto-increment added to STRATEGIES.ID
14:32:33 - Table POSITIONS created
14:32:33 - Auto-increment added to POSITIONS.ID
14:32:33 - Table ORDERS created
14:32:33 - Auto-increment added to ORDERS.ID
14:32:33 - Table TRADES created
14:32:33 - Auto-increment added to TRADES.ID
14:32:33 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:33 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:33 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:33 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:33 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:33 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:33 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:33 - Index IDX_POSITIONS_POSITION_ID created
14:32:33 - Index IDX_POSITIONS_STATUS created
14:32:33 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:33 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:33 - Index IDX_ORDERS_ORDER_ID created
14:32:33 - Index IDX_TRADES_TRADE_ID created
14:32:33 - Index IDX_TRADES_ORDER_ID created
14:32:33 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
14:32:33 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:33 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:33 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:33 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:33 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:33 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:33 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:32:33 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:33 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:32:33 - Successfully released change log lock
14:32:33 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:33 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:34 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:34 - Calling Remote Init...
14:32:34 - ExchangeConfiguration - Dry mode is OFF
14:32:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:34 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:34 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:34 - Started PositionServiceTest in 0.536 seconds (JVM running for 71.417)
14:32:34 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:34 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:34.220915Z[Etc/UTC], trades=[])

14:32:35 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:36 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:34.220915Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:36 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:36.256530Z[Etc/UTC], trades=[])

14:32:37 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:38 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:39 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:36.256530Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:40 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:34.220Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:40 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.0001 ETH, price=null, fee=null, userReference=null, timestamp=null)

14:32:41 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:34.220Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:41 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, currencyPair=ETH/BTC, amount=0.0002 ETH, price=null, fee=null, userReference=null, timestamp=null)

14:32:42 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:36.256Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, currencyPair=ETH/BTC, amount=0.00020000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:42 - HikariPool-4 - Shutdown initiated...
14:32:42 - HikariPool-4 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:42 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:42 - The following profiles are active: schedule-disabled
14:32:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:42 - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
14:32:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:42 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:32:42 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:42 - HikariPool-5 - Starting...
14:32:42 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:42 - HikariPool-5 - Start completed.
14:32:42 - Successfully acquired change log lock
14:32:42 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:42 - Reading from PUBLIC.DATABASECHANGELOG
14:32:42 - Successfully released change log lock
14:32:42 - Successfully acquired change log lock
Skipping auto-registration
14:32:42 - Skipping auto-registration
14:32:42 - Table EXCHANGE_ACCOUNTS created
14:32:42 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:42 - Table STRATEGIES created
14:32:42 - Auto-increment added to STRATEGIES.ID
14:32:42 - Table POSITIONS created
14:32:42 - Auto-increment added to POSITIONS.ID
14:32:42 - Table ORDERS created
14:32:42 - Auto-increment added to ORDERS.ID
14:32:42 - Table TRADES created
14:32:42 - Auto-increment added to TRADES.ID
14:32:42 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:42 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:42 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:42 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:42 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:42 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:42 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:42 - Index IDX_POSITIONS_POSITION_ID created
14:32:42 - Index IDX_POSITIONS_STATUS created
14:32:42 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:42 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:42 - Index IDX_ORDERS_ORDER_ID created
14:32:42 - Index IDX_TRADES_TRADE_ID created
14:32:42 - Index IDX_TRADES_ORDER_ID created
14:32:42 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 12ms
14:32:42 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:42 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:42 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:42 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:42 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:42 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:42 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 0ms
14:32:42 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:42 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:32:42 - Successfully released change log lock
14:32:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:42 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:42 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:42 - Calling Remote Init...
14:32:42 - ExchangeConfiguration - Dry mode is OFF
14:32:42 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:42 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:42 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:42 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:42 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:42 - Started PositionServiceTest in 0.53 seconds (JVM running for 80.152)
14:32:42 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

java.lang.RuntimeException: Error exception
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createMarketOrder(TradeServiceXChangeImplementation.java:85)
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createBuyMarketOrder(TradeServiceXChangeImplementation.java:167)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createPosition(PositionServiceImplementation.java:113)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createLongPosition(PositionServiceImplementation.java:83)
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.createLongPosition(GenericCassandreStrategy.java:461)
	at tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest.checkCreatePosition(PositionServiceTest.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
14:32:42 - TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
14:32:42 - PositionService - Position creation failure : TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
14:32:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:42 - HikariPool-5 - Shutdown initiated...
14:32:42 - HikariPool-5 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:43 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:43 - The following profiles are active: schedule-disabled
14:32:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:43 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
14:32:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:43 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:32:43 - HikariPool-6 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:43 - HikariPool-6 - Starting...
14:32:43 - HikariPool-6 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:43 - HikariPool-6 - Start completed.
14:32:43 - Successfully acquired change log lock
14:32:43 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:43 - Reading from PUBLIC.DATABASECHANGELOG
14:32:43 - Successfully released change log lock
14:32:43 - Successfully acquired change log lock
Skipping auto-registration
14:32:43 - Skipping auto-registration
14:32:43 - Table EXCHANGE_ACCOUNTS created
14:32:43 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:43 - Table STRATEGIES created
14:32:43 - Auto-increment added to STRATEGIES.ID
14:32:43 - Table POSITIONS created
14:32:43 - Auto-increment added to POSITIONS.ID
14:32:43 - Table ORDERS created
14:32:43 - Auto-increment added to ORDERS.ID
14:32:43 - Table TRADES created
14:32:43 - Auto-increment added to TRADES.ID
14:32:43 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:43 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:43 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:43 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:43 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:43 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:43 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:43 - Index IDX_POSITIONS_POSITION_ID created
14:32:43 - Index IDX_POSITIONS_STATUS created
14:32:43 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:43 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:43 - Index IDX_ORDERS_ORDER_ID created
14:32:43 - Index IDX_TRADES_TRADE_ID created
14:32:43 - Index IDX_TRADES_ORDER_ID created
14:32:43 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 12ms
14:32:43 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:43 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:43 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:43 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:43 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:43 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:43 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:32:43 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:43 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:32:43 - Successfully released change log lock
14:32:43 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:43 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:43 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:43 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:36.256Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, currencyPair=ETH/BTC, amount=0.00020000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:43 - Calling Remote Init...
14:32:43 - ExchangeConfiguration - Dry mode is OFF
14:32:43 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:43 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:43 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:43 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:43 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:43 - Started PositionServiceTest in 0.491 seconds (JVM running for 80.691)
14:32:43 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:43 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494814Z[Etc/UTC], trades=[])

14:32:43 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:44 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:44 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:45 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494814Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:45 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

14:32:45 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:46 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:46 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-17T14:32:46.570373Z[Etc/UTC], trades=[])

14:32:47 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:47 - HikariPool-6 - Shutdown initiated...
14:32:47 - HikariPool-6 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:47 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:47 - The following profiles are active: schedule-disabled
14:32:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:47 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
14:32:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:47 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:32:47 - HikariPool-7 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:47 - HikariPool-7 - Starting...
14:32:47 - HikariPool-7 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:47 - HikariPool-7 - Start completed.
14:32:47 - Successfully acquired change log lock
14:32:47 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:47 - Reading from PUBLIC.DATABASECHANGELOG
14:32:47 - Successfully released change log lock
14:32:47 - Successfully acquired change log lock
Skipping auto-registration
14:32:47 - Skipping auto-registration
14:32:47 - Table EXCHANGE_ACCOUNTS created
14:32:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:47 - Table STRATEGIES created
14:32:47 - Auto-increment added to STRATEGIES.ID
14:32:47 - Table POSITIONS created
14:32:47 - Auto-increment added to POSITIONS.ID
14:32:47 - Table ORDERS created
14:32:47 - Auto-increment added to ORDERS.ID
14:32:47 - Table TRADES created
14:32:47 - Auto-increment added to TRADES.ID
14:32:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:47 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:47 - Index IDX_POSITIONS_POSITION_ID created
14:32:47 - Index IDX_POSITIONS_STATUS created
14:32:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:47 - Index IDX_ORDERS_ORDER_ID created
14:32:47 - Index IDX_TRADES_TRADE_ID created
14:32:47 - Index IDX_TRADES_ORDER_ID created
14:32:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 11ms
14:32:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:32:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:32:47 - Successfully released change log lock
14:32:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:47 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:48 - Calling Remote Init...
14:32:48 - ExchangeConfiguration - Dry mode is OFF
14:32:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:48 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:48 - Started PositionServiceTest in 0.436 seconds (JVM running for 85.239)
14:32:48 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

java.lang.RuntimeException: Error exception
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createMarketOrder(TradeServiceXChangeImplementation.java:85)
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createBuyMarketOrder(TradeServiceXChangeImplementation.java:167)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createPosition(PositionServiceImplementation.java:113)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createLongPosition(PositionServiceImplementation.java:83)
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.createLongPosition(GenericCassandreStrategy.java:461)
	at tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest.checkGetPosition(PositionServiceTest.java:474)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
14:32:48 - TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
14:32:48 - PositionService - Position creation failure : TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
14:32:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:48 - HikariPool-7 - Shutdown initiated...
14:32:48 - HikariPool-7 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:48 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:48 - The following profiles are active: schedule-disabled
14:32:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:48 - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
14:32:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:48 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:32:48 - HikariPool-8 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:48 - HikariPool-8 - Starting...
14:32:48 - HikariPool-8 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:48 - HikariPool-8 - Start completed.
14:32:48 - Successfully acquired change log lock
14:32:48 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:48 - Reading from PUBLIC.DATABASECHANGELOG
14:32:48 - Successfully released change log lock
14:32:48 - Successfully acquired change log lock
Skipping auto-registration
14:32:48 - Skipping auto-registration
14:32:48 - Table EXCHANGE_ACCOUNTS created
14:32:48 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:48 - Table STRATEGIES created
14:32:48 - Auto-increment added to STRATEGIES.ID
14:32:48 - Table POSITIONS created
14:32:48 - Auto-increment added to POSITIONS.ID
14:32:48 - Table ORDERS created
14:32:48 - Auto-increment added to ORDERS.ID
14:32:48 - Table TRADES created
14:32:48 - Auto-increment added to TRADES.ID
14:32:48 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:48 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:48 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:48 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:48 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:48 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:48 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:48 - Index IDX_POSITIONS_POSITION_ID created
14:32:48 - Index IDX_POSITIONS_STATUS created
14:32:48 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:48 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:48 - Index IDX_ORDERS_ORDER_ID created
14:32:48 - Index IDX_TRADES_TRADE_ID created
14:32:48 - Index IDX_TRADES_ORDER_ID created
14:32:48 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 11ms
14:32:48 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:48 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:48 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:48 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:48 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:48 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:48 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 0ms
14:32:48 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:48 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
14:32:48 - Successfully released change log lock
14:32:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:48 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:48 - Calling Remote Init...
14:32:48 - ExchangeConfiguration - Dry mode is OFF
14:32:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:48 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:48 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:48 - Started PositionServiceTest in 0.457 seconds (JVM running for 85.728)
14:32:48 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:48 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:48.531435Z[Etc/UTC], trades=[])

14:32:49 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:49 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:49 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:50 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:50 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-17T14:32:46.570373Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:50 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:48.531435Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:50 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:50.558070Z[Etc/UTC], trades=[])

14:32:51 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:51 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:43.494Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-17T14:32:46.570373Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:51 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:50.558070Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:32:51 - HikariPool-8 - Shutdown initiated...
14:32:51 - HikariPool-8 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:32:51 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:32:51 - The following profiles are active: schedule-disabled
14:32:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:51 - Finished Spring Data repository scanning in 10 ms. Found 5 JPA repository interfaces.
14:32:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:32:51 - Finished Spring Data repository scanning in 2 ms. Found 5 JPA repository interfaces.
14:32:51 - HikariPool-9 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:32:51 - HikariPool-9 - Starting...
14:32:51 - HikariPool-9 - Driver does not support get/set network timeout for connections. (feature not supported)
14:32:51 - HikariPool-9 - Start completed.
14:32:51 - Successfully acquired change log lock
14:32:51 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:32:51 - Reading from PUBLIC.DATABASECHANGELOG
14:32:51 - Successfully released change log lock
14:32:51 - Successfully acquired change log lock
Skipping auto-registration
14:32:51 - Skipping auto-registration
14:32:51 - Table EXCHANGE_ACCOUNTS created
14:32:51 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:32:51 - Table STRATEGIES created
14:32:51 - Auto-increment added to STRATEGIES.ID
14:32:51 - Table POSITIONS created
14:32:51 - Auto-increment added to POSITIONS.ID
14:32:51 - Table ORDERS created
14:32:51 - Auto-increment added to ORDERS.ID
14:32:51 - Table TRADES created
14:32:51 - Auto-increment added to TRADES.ID
14:32:51 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:32:51 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:32:51 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:32:51 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:32:51 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:32:51 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:32:51 - Index IDX_STRATEGIES_STRATEGY_ID created
14:32:51 - Index IDX_POSITIONS_POSITION_ID created
14:32:51 - Index IDX_POSITIONS_STATUS created
14:32:51 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:32:51 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:32:51 - Index IDX_ORDERS_ORDER_ID created
14:32:51 - Index IDX_TRADES_TRADE_ID created
14:32:51 - Index IDX_TRADES_ORDER_ID created
14:32:51 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 10ms
14:32:51 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:32:51 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:32:51 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:32:51 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:32:51 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:32:51 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:32:51 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 0ms
14:32:51 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:32:51 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
14:32:51 - Successfully released change log lock
14:32:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:32:51 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:32:51 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:32:51 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:32:51 - Calling Remote Init...
14:32:51 - ExchangeConfiguration - Dry mode is OFF
14:32:51 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:32:51 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:32:51 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:32:51 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:32:51 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:32:51 - Started PositionServiceTest in 0.387 seconds (JVM running for 89.167)
14:32:51 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:52 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970974Z[Etc/UTC], trades=[])

14:32:52 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:50.558070Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:52 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:53 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970974Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:54 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:53.991582Z[Etc/UTC], trades=[])

14:32:54 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:55 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:56 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:53.991582Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:57 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:57.026985Z[Etc/UTC], trades=[])

14:32:57 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:57.026985Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:58 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

14:32:58 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:32:59 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=3, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:59.075913Z[Etc/UTC], trades=[])

14:32:59 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:00 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:01 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:02 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:51.970Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=3, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:32:59.075913Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:33:04 - HikariPool-9 - Shutdown initiated...
14:33:04 - HikariPool-9 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:33:04 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 36529 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:33:04 - The following profiles are active: schedule-disabled
14:33:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:33:04 - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
14:33:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:33:04 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
14:33:04 - HikariPool-10 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:33:04 - HikariPool-10 - Starting...
14:33:04 - HikariPool-10 - Driver does not support get/set network timeout for connections. (feature not supported)
14:33:04 - HikariPool-10 - Start completed.
14:33:04 - Successfully acquired change log lock
14:33:04 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:33:04 - Reading from PUBLIC.DATABASECHANGELOG
14:33:04 - Successfully released change log lock
14:33:04 - Successfully acquired change log lock
Skipping auto-registration
14:33:04 - Skipping auto-registration
14:33:04 - Table EXCHANGE_ACCOUNTS created
14:33:04 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:33:04 - Table STRATEGIES created
14:33:04 - Auto-increment added to STRATEGIES.ID
14:33:04 - Table POSITIONS created
14:33:04 - Auto-increment added to POSITIONS.ID
14:33:04 - Table ORDERS created
14:33:04 - Auto-increment added to ORDERS.ID
14:33:04 - Table TRADES created
14:33:04 - Auto-increment added to TRADES.ID
14:33:04 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:33:04 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:33:04 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:33:04 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:33:04 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:33:04 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:33:04 - Index IDX_STRATEGIES_STRATEGY_ID created
14:33:04 - Index IDX_POSITIONS_POSITION_ID created
14:33:04 - Index IDX_POSITIONS_STATUS created
14:33:04 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:33:04 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:33:04 - Index IDX_ORDERS_ORDER_ID created
14:33:04 - Index IDX_TRADES_TRADE_ID created
14:33:04 - Index IDX_TRADES_ORDER_ID created
14:33:04 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 10ms
14:33:04 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:33:04 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:33:04 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:33:04 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:33:04 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:33:04 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:33:04 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:33:04 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:33:04 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:33:04 - Successfully released change log lock
14:33:04 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:33:04 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:33:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:33:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:33:04 - Calling Remote Init...
14:33:04 - ExchangeConfiguration - Dry mode is OFF
14:33:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:33:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:33:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:33:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:33:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:33:04 - Started PositionServiceTest in 0.403 seconds (JVM running for 101.702)
14:33:04 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:04 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:33:04.506148Z[Etc/UTC], trades=[])

14:33:05 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:06 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:33:04.506148Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:06 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

14:33:07 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:33:04.506Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:08 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:33:04.506Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:33:12 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 40 % / Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-17T14:33:04.506Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 119.193 s - in tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
14:33:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:33:22 - HikariPool-10 - Shutdown initiated...
14:33:22 - HikariPool-10 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.RatesTest
14:33:23.604 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:33:23.611 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:33:23.636 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:33:23.643 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest], using SpringBootContextLoader
14:33:23.646 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/RatesTest-context.xml] does not exist
14:33:23.646 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/RatesTestContext.groovy] does not exist
14:33:23.646 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:33:23.647 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: RatesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:33:23.723 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:33:23.723 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.RatesTest
14:33:23.778 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: using defaults.
14:33:23.778 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:33:23.785 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:33:23.790 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@146dfe6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@4716be8b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2f67b837, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1869fbd2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6af9fcb2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cce16f4, org.springframework.test.context.event.EventPublishingTestExecutionListener@7efaad5a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5505ae1a]
14:33:23.792 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@a4add54 testClass = RatesTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = RatesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.service.xchange.RatesTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:33:23.864 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@a4add54 testClass = RatesTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.RatesTest@68b32e3e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@141e5bef testClass = RatesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5f9be66c key = [tech.cassandre.trading.bot.test.service.xchange.RatesTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@bae7dc0, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1b2abca6, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@53ce1329, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@66f57048, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4c1909a3, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:33:23.878 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:33:23.880 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:33:24 - Starting RatesTest using Java 11.0.17 on repairnator with PID 4718 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:33:24 - The following profiles are active: schedule-disabled
14:33:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:33:24 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
14:33:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:33:24 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:33:25 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:33:25 - HikariPool-1 - Starting...
14:33:25 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:33:25 - HikariPool-1 - Start completed.
14:33:25 - Successfully acquired change log lock
14:33:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:33:25 - Reading from PUBLIC.DATABASECHANGELOG
14:33:25 - Successfully released change log lock
14:33:25 - Successfully acquired change log lock
Skipping auto-registration
14:33:25 - Skipping auto-registration
14:33:25 - Table EXCHANGE_ACCOUNTS created
14:33:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:33:25 - Table STRATEGIES created
14:33:25 - Auto-increment added to STRATEGIES.ID
14:33:25 - Table POSITIONS created
14:33:25 - Auto-increment added to POSITIONS.ID
14:33:25 - Table ORDERS created
14:33:25 - Auto-increment added to ORDERS.ID
14:33:26 - Table TRADES created
14:33:26 - Auto-increment added to TRADES.ID
14:33:26 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:33:26 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:33:26 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:33:26 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:33:26 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:33:26 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:33:26 - Index IDX_STRATEGIES_STRATEGY_ID created
14:33:26 - Index IDX_POSITIONS_POSITION_ID created
14:33:26 - Index IDX_POSITIONS_STATUS created
14:33:26 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:33:26 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:33:26 - Index IDX_ORDERS_ORDER_ID created
14:33:26 - Index IDX_TRADES_TRADE_ID created
14:33:26 - Index IDX_TRADES_ORDER_ID created
14:33:26 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:33:26 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:33:26 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:33:26 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:33:26 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:33:26 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:33:26 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:33:26 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:33:26 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:33:26 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:33:26 - Successfully released change log lock
14:33:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:33:26 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:33:26 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:33:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:33:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:33:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:33:27 - Calling Remote Init...
14:33:27 - ExchangeConfiguration - Dry mode is OFF
14:33:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:33:27 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:33:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:33:28 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:33:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:33:28 - Started RatesTest in 4.203 seconds (JVM running for 5.064)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 184.558 s - in tech.cassandre.trading.bot.test.service.xchange.RatesTest
14:36:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:28 - HikariPool-1 - Shutdown initiated...
14:36:28 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
14:36:29.195 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:29.201 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:29.225 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:29.233 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest], using SpringBootContextLoader
14:36:29.235 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/StrategyRepositoryTest-context.xml] does not exist
14:36:29.235 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/StrategyRepositoryTestContext.groovy] does not exist
14:36:29.236 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:29.236 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: StrategyRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:29.303 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:29.304 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
14:36:29.358 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: using defaults.
14:36:29.358 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:29.364 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:29.369 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1b75c2e3, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1984b1f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3bd323e9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@39ac0c0a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@c7ba306, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4ff8d125, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6d167f58, org.springframework.test.context.event.EventPublishingTestExecutionListener@3403e2ac, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@65b104b9, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6c4980d3, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@327bcebd, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@19c65cdc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@74bf1791, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@54504ecd]
14:36:29.371 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@1fa1cab1 testClass = StrategyRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@70f02c32 testClass = StrategyRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a54a73f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@505fc5a4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@35aea049, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@a530d0a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@43dac38f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@491666ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:36:29.380 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@1fa1cab1 testClass = StrategyRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest@61fe30, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@70f02c32 testClass = StrategyRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2a54a73f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@505fc5a4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@35aea049, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@a530d0a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@43dac38f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@491666ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:29.392 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:36:29.395 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:29 - Starting StrategyRepositoryTest using Java 11.0.17 on repairnator with PID 11491 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:29 - The following profiles are active: schedule-disabled
14:36:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:30 - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
14:36:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:30 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:36:30 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:30 - HikariPool-1 - Starting...
14:36:30 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:30 - HikariPool-1 - Start completed.
14:36:30 - Successfully acquired change log lock
14:36:31 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:31 - Reading from PUBLIC.DATABASECHANGELOG
14:36:31 - Successfully released change log lock
14:36:31 - Successfully acquired change log lock
Skipping auto-registration
14:36:31 - Skipping auto-registration
14:36:31 - Table EXCHANGE_ACCOUNTS created
14:36:31 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:31 - Table STRATEGIES created
14:36:31 - Auto-increment added to STRATEGIES.ID
14:36:31 - Table POSITIONS created
14:36:31 - Auto-increment added to POSITIONS.ID
14:36:31 - Table ORDERS created
14:36:31 - Auto-increment added to ORDERS.ID
14:36:31 - Table TRADES created
14:36:31 - Auto-increment added to TRADES.ID
14:36:31 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:31 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:31 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:31 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:31 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:31 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:31 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:31 - Index IDX_POSITIONS_POSITION_ID created
14:36:31 - Index IDX_POSITIONS_STATUS created
14:36:31 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:31 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:31 - Index IDX_ORDERS_ORDER_ID created
14:36:31 - Index IDX_TRADES_TRADE_ID created
14:36:31 - Index IDX_TRADES_ORDER_ID created
14:36:31 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:36:31 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:31 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:31 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:31 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:31 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:31 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:31 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:36:31 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:31 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:31 - Successfully released change log lock
14:36:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:31 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:31 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:31 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:32 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:32 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:36:33 - Calling Remote Init...
14:36:33 - ExchangeConfiguration - Dry mode is OFF
14:36:33 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:36:33 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:36:33 - StrategyConfiguration - Accounts available : 'null/null'.
14:36:33 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:36:33 - Started StrategyRepositoryTest in 4.128 seconds (JVM running for 4.95)
14:36:33 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.422 s - in tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
14:36:33 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:33 - HikariPool-1 - Shutdown initiated...
14:36:33 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
14:36:34.356 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:34.367 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:34.393 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:34.401 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest], using SpringBootContextLoader
14:36:34.404 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/PositionRepositoryTest-context.xml] does not exist
14:36:34.404 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/PositionRepositoryTestContext.groovy] does not exist
14:36:34.405 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:34.405 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: PositionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:34.472 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:34.473 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
14:36:34.527 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: using defaults.
14:36:34.527 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:34.533 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:34.538 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1984b1f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3bd323e9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@39ac0c0a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@c7ba306, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4ff8d125, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6d167f58, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3403e2ac, org.springframework.test.context.event.EventPublishingTestExecutionListener@65b104b9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c4980d3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@327bcebd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@19c65cdc, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@74bf1791, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@54504ecd, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@38b27cdc]
14:36:34.540 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@70f02c32 testClass = PositionRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@62010f5c testClass = PositionRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@16a0ee18, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5fbdfdcf, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7205765b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1a18644, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@342c38f8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@3b2c72c2], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:36:34.550 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@70f02c32 testClass = PositionRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.PositionRepositoryTest@c9d0d6, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@62010f5c testClass = PositionRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@16a0ee18, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5fbdfdcf, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7205765b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1a18644, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@342c38f8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@3b2c72c2], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:34.563 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:36:34.566 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:34 - Starting PositionRepositoryTest using Java 11.0.17 on repairnator with PID 11767 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:34 - The following profiles are active: schedule-disabled
14:36:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:35 - Finished Spring Data repository scanning in 116 ms. Found 5 JPA repository interfaces.
14:36:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:35 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:36:35 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:35 - HikariPool-1 - Starting...
14:36:35 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:35 - HikariPool-1 - Start completed.
14:36:36 - Successfully acquired change log lock
14:36:36 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:36 - Reading from PUBLIC.DATABASECHANGELOG
14:36:36 - Successfully released change log lock
14:36:36 - Successfully acquired change log lock
Skipping auto-registration
14:36:36 - Skipping auto-registration
14:36:36 - Table EXCHANGE_ACCOUNTS created
14:36:36 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:36 - Table STRATEGIES created
14:36:36 - Auto-increment added to STRATEGIES.ID
14:36:36 - Table POSITIONS created
14:36:36 - Auto-increment added to POSITIONS.ID
14:36:36 - Table ORDERS created
14:36:36 - Auto-increment added to ORDERS.ID
14:36:36 - Table TRADES created
14:36:36 - Auto-increment added to TRADES.ID
14:36:36 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:36 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:36 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:36 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:36 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:36 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:36 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:36 - Index IDX_POSITIONS_POSITION_ID created
14:36:36 - Index IDX_POSITIONS_STATUS created
14:36:36 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:36 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:36 - Index IDX_ORDERS_ORDER_ID created
14:36:36 - Index IDX_TRADES_TRADE_ID created
14:36:36 - Index IDX_TRADES_ORDER_ID created
14:36:36 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:36:36 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:36 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:36 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:36 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:36 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:36 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:36 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:36:36 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:36 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:36 - Successfully released change log lock
14:36:36 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:36 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:36 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:37 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:37 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:36:38 - Calling Remote Init...
14:36:38 - ExchangeConfiguration - Dry mode is OFF
14:36:38 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:36:38 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:36:38 - StrategyConfiguration - Accounts available : 'null/null'.
14:36:38 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:36:38 - Started PositionRepositoryTest in 4.206 seconds (JVM running for 5.05)
14:36:38 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.639 s - in tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
14:36:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:38 - HikariPool-1 - Shutdown initiated...
14:36:38 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
14:36:39.999 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:40.007 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:40.031 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:40.039 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest], using SpringBootContextLoader
14:36:40.041 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/OrderRepositoryTest-context.xml] does not exist
14:36:40.042 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/OrderRepositoryTestContext.groovy] does not exist
14:36:40.042 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:40.042 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: OrderRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:40.110 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:40.111 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
14:36:40.183 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: using defaults.
14:36:40.184 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:40.190 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:40.195 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1fb669c3, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@49c66ade, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6239aba6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3e6104fc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@12359a82, org.springframework.test.context.transaction.TransactionalTestExecutionListener@68df9280, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@479460a6, org.springframework.test.context.event.EventPublishingTestExecutionListener@7164ca4c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2421cc4]
14:36:40.197 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@63f259c3 testClass = OrderRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26ceffa8 testClass = OrderRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:36:40.237 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@63f259c3 testClass = OrderRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.OrderRepositoryTest@4426bff1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26ceffa8 testClass = OrderRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:40.249 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:36:40.253 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:40 - Starting OrderRepositoryTest using Java 11.0.17 on repairnator with PID 12005 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:40 - The following profiles are active: schedule-disabled
14:36:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:41 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
14:36:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:41 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:36:41 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:41 - HikariPool-1 - Starting...
14:36:41 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:41 - HikariPool-1 - Start completed.
14:36:41 - Successfully acquired change log lock
14:36:42 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:42 - Reading from PUBLIC.DATABASECHANGELOG
14:36:42 - Successfully released change log lock
14:36:42 - Successfully acquired change log lock
Skipping auto-registration
14:36:42 - Skipping auto-registration
14:36:42 - Table EXCHANGE_ACCOUNTS created
14:36:42 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:42 - Table STRATEGIES created
14:36:42 - Auto-increment added to STRATEGIES.ID
14:36:42 - Table POSITIONS created
14:36:42 - Auto-increment added to POSITIONS.ID
14:36:42 - Table ORDERS created
14:36:42 - Auto-increment added to ORDERS.ID
14:36:42 - Table TRADES created
14:36:42 - Auto-increment added to TRADES.ID
14:36:42 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:42 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:42 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:42 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:42 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:42 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:42 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:42 - Index IDX_POSITIONS_POSITION_ID created
14:36:42 - Index IDX_POSITIONS_STATUS created
14:36:42 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:42 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:42 - Index IDX_ORDERS_ORDER_ID created
14:36:42 - Index IDX_TRADES_TRADE_ID created
14:36:42 - Index IDX_TRADES_ORDER_ID created
14:36:42 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:36:42 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:42 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:42 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:42 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:42 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:42 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:42 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:36:42 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:42 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:42 - Successfully released change log lock
14:36:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:42 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:42 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:42 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:43 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:36:44 - Calling Remote Init...
14:36:44 - ExchangeConfiguration - Dry mode is OFF
14:36:44 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:36:44 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:36:44 - StrategyConfiguration - Accounts available : 'null/null'.
14:36:44 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:36:44 - Started OrderRepositoryTest in 4.191 seconds (JVM running for 5.056)
14:36:44 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.561 s - in tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
14:36:44 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:44 - HikariPool-1 - Shutdown initiated...
14:36:44 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
14:36:45.595 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:45.602 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:45.625 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:45.633 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest], using SpringBootContextLoader
14:36:45.635 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/ExchangeAccountRepositoryTest-context.xml] does not exist
14:36:45.636 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/ExchangeAccountRepositoryTestContext.groovy] does not exist
14:36:45.636 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:45.636 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: ExchangeAccountRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:45.704 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:45.704 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
14:36:45.757 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: using defaults.
14:36:45.758 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:45.763 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:45.768 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7d446ed1, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@12d2ce03, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7e5c856f, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@413f69cc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1f53a5dc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1b75c2e3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1984b1f, org.springframework.test.context.event.EventPublishingTestExecutionListener@3bd323e9, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@39ac0c0a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@c7ba306, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4ff8d125, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6d167f58, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3403e2ac, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@65b104b9]
14:36:45.770 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@58ce9668 testClass = ExchangeAccountRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@172b013 testClass = ExchangeAccountRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@67c33749, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@fa49800, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@56cdfb3b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3f6b0be5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e15b7e8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6b53e23f], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:36:45.780 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@58ce9668 testClass = ExchangeAccountRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest@a4add54, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@172b013 testClass = ExchangeAccountRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@67c33749, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@fa49800, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@56cdfb3b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3f6b0be5, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@e15b7e8, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6b53e23f], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:45.801 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:36:45.807 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:46 - Starting ExchangeAccountRepositoryTest using Java 11.0.17 on repairnator with PID 12344 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:46 - The following profiles are active: schedule-disabled
14:36:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:46 - Finished Spring Data repository scanning in 140 ms. Found 5 JPA repository interfaces.
14:36:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:46 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:36:47 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:47 - HikariPool-1 - Starting...
14:36:47 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:47 - HikariPool-1 - Start completed.
14:36:47 - Successfully acquired change log lock
14:36:47 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:47 - Reading from PUBLIC.DATABASECHANGELOG
14:36:47 - Successfully released change log lock
14:36:47 - Successfully acquired change log lock
Skipping auto-registration
14:36:47 - Skipping auto-registration
14:36:47 - Table EXCHANGE_ACCOUNTS created
14:36:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:47 - Table STRATEGIES created
14:36:47 - Auto-increment added to STRATEGIES.ID
14:36:47 - Table POSITIONS created
14:36:47 - Auto-increment added to POSITIONS.ID
14:36:47 - Table ORDERS created
14:36:47 - Auto-increment added to ORDERS.ID
14:36:47 - Table TRADES created
14:36:47 - Auto-increment added to TRADES.ID
14:36:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:47 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:47 - Index IDX_POSITIONS_POSITION_ID created
14:36:47 - Index IDX_POSITIONS_STATUS created
14:36:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:47 - Index IDX_ORDERS_ORDER_ID created
14:36:47 - Index IDX_TRADES_TRADE_ID created
14:36:47 - Index IDX_TRADES_ORDER_ID created
14:36:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
14:36:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:36:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:47 - Successfully released change log lock
14:36:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:48 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:48 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:48 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:36:49 - Calling Remote Init...
14:36:49 - ExchangeConfiguration - Dry mode is OFF
14:36:49 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:36:49 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:36:49 - StrategyConfiguration - Accounts available : 'null/null'.
14:36:49 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:36:50 - Started ExchangeAccountRepositoryTest in 4.271 seconds (JVM running for 5.106)
14:36:50 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.604 s - in tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
14:36:50 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:50 - HikariPool-1 - Shutdown initiated...
14:36:50 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
14:36:51.142 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:51.150 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:51.174 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:51.182 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest], using SpringBootContextLoader
14:36:51.184 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/TradeRepositoryTest-context.xml] does not exist
14:36:51.185 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/TradeRepositoryTestContext.groovy] does not exist
14:36:51.185 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:51.186 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: TradeRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:51.259 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:51.260 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
14:36:51.313 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: using defaults.
14:36:51.313 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:51.319 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:51.324 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1fb669c3, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@49c66ade, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6239aba6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3e6104fc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@12359a82, org.springframework.test.context.transaction.TransactionalTestExecutionListener@68df9280, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@479460a6, org.springframework.test.context.event.EventPublishingTestExecutionListener@7164ca4c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2421cc4]
14:36:51.326 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@63f259c3 testClass = TradeRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26ceffa8 testClass = TradeRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:36:51.367 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@63f259c3 testClass = TradeRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.TradeRepositoryTest@4426bff1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@26ceffa8 testClass = TradeRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:51.379 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:36:51.381 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:51 - Starting TradeRepositoryTest using Java 11.0.17 on repairnator with PID 12681 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:51 - The following profiles are active: schedule-disabled
14:36:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:52 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
14:36:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:52 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:36:52 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:52 - HikariPool-1 - Starting...
14:36:52 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:52 - HikariPool-1 - Start completed.
14:36:53 - Successfully acquired change log lock
14:36:53 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:53 - Reading from PUBLIC.DATABASECHANGELOG
14:36:53 - Successfully released change log lock
14:36:53 - Successfully acquired change log lock
Skipping auto-registration
14:36:53 - Skipping auto-registration
14:36:53 - Table EXCHANGE_ACCOUNTS created
14:36:53 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:53 - Table STRATEGIES created
14:36:53 - Auto-increment added to STRATEGIES.ID
14:36:53 - Table POSITIONS created
14:36:53 - Auto-increment added to POSITIONS.ID
14:36:53 - Table ORDERS created
14:36:53 - Auto-increment added to ORDERS.ID
14:36:53 - Table TRADES created
14:36:53 - Auto-increment added to TRADES.ID
14:36:53 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:53 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:53 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:53 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:53 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:53 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:53 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:53 - Index IDX_POSITIONS_POSITION_ID created
14:36:53 - Index IDX_POSITIONS_STATUS created
14:36:53 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:53 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:53 - Index IDX_ORDERS_ORDER_ID created
14:36:53 - Index IDX_TRADES_TRADE_ID created
14:36:53 - Index IDX_TRADES_ORDER_ID created
14:36:53 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 36ms
14:36:53 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:53 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:53 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:53 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:53 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:53 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:53 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:36:53 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:53 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:53 - Successfully released change log lock
14:36:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:53 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:53 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:53 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:54 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:54 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:36:55 - Calling Remote Init...
14:36:55 - ExchangeConfiguration - Dry mode is OFF
14:36:55 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:36:55 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:36:55 - StrategyConfiguration - Accounts available : 'null/null'.
14:36:55 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:36:55 - Started TradeRepositoryTest in 4.163 seconds (JVM running for 4.941)
14:36:55 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.514 s - in tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
14:36:55 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:36:55 - HikariPool-1 - Shutdown initiated...
14:36:55 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
14:36:56.704 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:36:56.711 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:36:56.735 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:36:56.742 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest], using SpringBootContextLoader
14:36:56.745 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/ta4j/BasicTa4jCassandreStrategyTest-context.xml] does not exist
14:36:56.745 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/ta4j/BasicTa4jCassandreStrategyTestContext.groovy] does not exist
14:36:56.745 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:36:56.746 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: BasicTa4jCassandreStrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:36:56.787 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]
14:36:56.835 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:36:56.835 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
14:36:56.891 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: using defaults.
14:36:56.892 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:36:56.898 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:36:56.903 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7efaad5a, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1046d517, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3b7d3a38, org.springframework.test.context.transaction.TransactionalTestExecutionListener@416c58f5, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@5505ae1a, org.springframework.test.context.event.EventPublishingTestExecutionListener@73cd37c0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60df60da, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a2d131d, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@14fc1f0]
14:36:56.904 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6ccdb29f testClass = BasicTa4jCassandreStrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3adcc812 testClass = BasicTa4jCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@35432107 key = [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1b2abca6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@d5b810e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e11f9e9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@36916eb0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2d710f1a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_CLASS].
14:36:56.945 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6ccdb29f testClass = BasicTa4jCassandreStrategyTest, testInstance = tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest@5443d039, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3adcc812 testClass = BasicTa4jCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@35432107 key = [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1b2abca6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@d5b810e, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3e11f9e9, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@36916eb0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2d710f1a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:36:56.961 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:36:57 - Starting BasicTa4jCassandreStrategyTest using Java 11.0.17 on repairnator with PID 13038 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:36:57 - No active profile set, falling back to default profiles: default
14:36:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:57 - Finished Spring Data repository scanning in 147 ms. Found 5 JPA repository interfaces.
14:36:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:36:57 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:36:58 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:36:58 - HikariPool-1 - Starting...
14:36:58 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:36:58 - HikariPool-1 - Start completed.
14:36:58 - Successfully acquired change log lock
14:36:58 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:36:58 - Reading from PUBLIC.DATABASECHANGELOG
14:36:59 - Successfully released change log lock
14:36:59 - Successfully acquired change log lock
Skipping auto-registration
14:36:59 - Skipping auto-registration
14:36:59 - Table EXCHANGE_ACCOUNTS created
14:36:59 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:36:59 - Table STRATEGIES created
14:36:59 - Auto-increment added to STRATEGIES.ID
14:36:59 - Table POSITIONS created
14:36:59 - Auto-increment added to POSITIONS.ID
14:36:59 - Table ORDERS created
14:36:59 - Auto-increment added to ORDERS.ID
14:36:59 - Table TRADES created
14:36:59 - Auto-increment added to TRADES.ID
14:36:59 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:36:59 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:36:59 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:36:59 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:36:59 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:36:59 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:36:59 - Index IDX_STRATEGIES_STRATEGY_ID created
14:36:59 - Index IDX_POSITIONS_POSITION_ID created
14:36:59 - Index IDX_POSITIONS_STATUS created
14:36:59 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:36:59 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:36:59 - Index IDX_ORDERS_ORDER_ID created
14:36:59 - Index IDX_TRADES_TRADE_ID created
14:36:59 - Index IDX_TRADES_ORDER_ID created
14:36:59 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:36:59 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:36:59 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:36:59 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:36:59 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:36:59 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:36:59 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:36:59 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:36:59 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:36:59 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:36:59 - Successfully released change log lock
14:36:59 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:36:59 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:36:59 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:36:59 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:36:59 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:36:59 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:00 - Calling Remote Init...
14:37:00 - ExchangeConfiguration - Dry mode is OFF
14:37:00 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:00 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:01 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:37:01 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:01 - StrategyConfiguration - Running strategy '01/Testable ta4j strategy' (requires BTC/USDT).
14:37:01 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:37:01 - Started BasicTa4jCassandreStrategyTest in 4.191 seconds (JVM running for 5.085)
14:37:01 - Enter signal at 110.0
14:37:01 - Enter signal at 140.0
14:37:01 - Exit signal at 119.0
14:37:01 - Exit signal at 100.0
14:37:01 - Enter signal at 110.0
14:37:01 - Enter signal at 120.0
14:37:01 - Enter signal at 130.0
14:37:02 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:02 - HikariPool-1 - Shutdown initiated...
14:37:02 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.567 s - in tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
14:37:02 - Unexpected error occurred in scheduled task
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.context.config.internalBeanConfigurerAspect': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:481)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy139.findByTradeId(Unknown Source)
	at tech.cassandre.trading.bot.batch.TradeFlux.lambda$getNewValues$1(TradeFlux.java:68)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:183)
	at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:177)
	at java.base/java.util.Iterator.forEachRemaining(Iterator.java:133)
	at java.base/java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)
	at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:484)
	at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
	at java.base/java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:150)
	at java.base/java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:173)
	at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
	at java.base/java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:497)
	at tech.cassandre.trading.bot.batch.TradeFlux.getNewValues(TradeFlux.java:66)
	at tech.cassandre.trading.bot.util.base.batch.BaseExternalFlux.update(BaseExternalFlux.java:23)
	at tech.cassandre.trading.bot.configuration.ScheduleAutoConfiguration.tradeFluxUpdate(ScheduleAutoConfiguration.java:83)
	at jdk.internal.reflect.GeneratedMethodAccessor114.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[INFO] Running tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
14:37:03.177 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:37:03.183 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:37:03.207 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:37:03.215 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest], using SpringBootContextLoader
14:37:03.217 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/basic/BasicCassandreStrategyTest-context.xml] does not exist
14:37:03.218 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/basic/BasicCassandreStrategyTestContext.groovy] does not exist
14:37:03.218 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:37:03.218 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: BasicCassandreStrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:37:03.252 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]
14:37:03.301 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:37:03.302 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
14:37:03.374 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: using defaults.
14:37:03.374 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:37:03.380 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:37:03.385 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@416c58f5, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5505ae1a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@21337f7b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2bb3058, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a362b6b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@60df60da, org.springframework.test.context.event.EventPublishingTestExecutionListener@5a2d131d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@14fc1f0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4ae9cfc1, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@512baff6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@632ceb35, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1c93f6e1, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1800a575]
14:37:03.387 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@265adfad testClass = BasicCassandreStrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a3d9978 testClass = BasicCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61544ae6 key = [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_CLASS].
14:37:03.451 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@265adfad testClass = BasicCassandreStrategyTest, testInstance = tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest@22356acd, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a3d9978 testClass = BasicCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61544ae6 key = [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@342c38f8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@485966cc, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32502377, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3cebbb30, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@48aca48b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:37:03.466 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:03 - Starting BasicCassandreStrategyTest using Java 11.0.17 on repairnator with PID 13269 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:03 - No active profile set, falling back to default profiles: default
14:37:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:04 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
14:37:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:04 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:37:04 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:04 - HikariPool-1 - Starting...
14:37:04 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:04 - HikariPool-1 - Start completed.
14:37:05 - Successfully acquired change log lock
14:37:05 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:37:05 - Reading from PUBLIC.DATABASECHANGELOG
14:37:05 - Successfully released change log lock
14:37:05 - Successfully acquired change log lock
Skipping auto-registration
14:37:05 - Skipping auto-registration
14:37:05 - Table EXCHANGE_ACCOUNTS created
14:37:05 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:37:05 - Table STRATEGIES created
14:37:05 - Auto-increment added to STRATEGIES.ID
14:37:05 - Table POSITIONS created
14:37:05 - Auto-increment added to POSITIONS.ID
14:37:05 - Table ORDERS created
14:37:05 - Auto-increment added to ORDERS.ID
14:37:05 - Table TRADES created
14:37:05 - Auto-increment added to TRADES.ID
14:37:05 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:37:05 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:37:05 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:37:05 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:37:05 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:37:05 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:37:05 - Index IDX_STRATEGIES_STRATEGY_ID created
14:37:05 - Index IDX_POSITIONS_POSITION_ID created
14:37:05 - Index IDX_POSITIONS_STATUS created
14:37:05 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:37:05 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:37:05 - Index IDX_ORDERS_ORDER_ID created
14:37:05 - Index IDX_TRADES_TRADE_ID created
14:37:05 - Index IDX_TRADES_ORDER_ID created
14:37:05 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:37:05 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:37:05 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:37:05 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:37:05 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:37:05 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:37:05 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:37:05 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:37:05 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:37:05 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:37:05 - Successfully released change log lock
14:37:05 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:05 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:37:05 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:37:05 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:07 - Calling Remote Init...
14:37:07 - ExchangeConfiguration - Dry mode is OFF
14:37:07 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:07 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:07 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:37:07 - StrategyConfiguration - Accounts available : '03/trade'.
14:37:07 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:37:07 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:37:07 - Started BasicCassandreStrategyTest in 4.183 seconds (JVM running for 4.976)
14:37:07 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=01, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:07 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=1, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=1587-01-05T09:56:20Z[Etc/UTC])

14:37:07 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

14:37:07 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=0000001, type=BID, orderId=000001, currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:37:08 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:08 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-22068-06-15T16:31:13Z[Etc/UTC])

14:37:08 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-02-01T00:00Z[Etc/UTC], trades=[])

14:37:08 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=0000002, type=BID, orderId=000001, currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-02-01T00:00Z[Etc/UTC])

14:37:09 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=null, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=2000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:09 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-32002-04-19T19:17:37Z[Etc/UTC])

14:37:09 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=000003, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-03-01T00:00Z[Etc/UTC], trades=[])

14:37:09 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=0000003, type=BID, orderId=000001, currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-03-01T00:00Z[Etc/UTC])

14:37:10 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-28841-07-11T11:40Z[Etc/UTC])

14:37:11 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=+25087-06-19T15:26:36Z[Etc/UTC])

14:37:12 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=5, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-33298-01-17T11:00:38Z[Etc/UTC])

14:37:13 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=6, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=+33678-02-25T06:43:45Z[Etc/UTC])

14:37:14 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:14 - HikariPool-1 - Shutdown initiated...
14:37:14 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.588 s - in tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
[INFO] Running tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
14:37:15.799 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:37:15.806 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:37:15.831 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:37:15.838 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest], using SpringBootContextLoader
14:37:15.841 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: class path resource [tech/cassandre/trading/bot/test/strategy/multiple/MultipleStrategiesTest-context.xml] does not exist
14:37:15.841 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: class path resource [tech/cassandre/trading/bot/test/strategy/multiple/MultipleStrategiesTestContext.groovy] does not exist
14:37:15.841 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:37:15.842 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: MultipleStrategiesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:37:15.915 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:37:15.916 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
14:37:15.969 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: using defaults.
14:37:15.970 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:37:15.975 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:37:15.980 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@401f7633, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@31ff43be, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5b6ec132, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5c44c582, org.springframework.test.context.support.DirtiesContextTestExecutionListener@67d18ed7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2c78d320, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@132e0cc, org.springframework.test.context.event.EventPublishingTestExecutionListener@7b205dbd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6cc558c6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@15713d56, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@63f259c3, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@26ceffa8]
14:37:15.982 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4716be8b testClass = MultipleStrategiesTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fc32e4f testClass = MultipleStrategiesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2fb3536e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7205765b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2c35e847, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@bae7dc0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@729d991e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_CLASS].
14:37:16.024 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4716be8b testClass = MultipleStrategiesTest, testInstance = tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest@b7c4869, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1fc32e4f testClass = MultipleStrategiesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2fb3536e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7205765b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2c35e847, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@bae7dc0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@729d991e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.support.DependencyInjectionTestExecutionListener.reinjectDependencies' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:37:16.036 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:37:16.039 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:16 - Starting MultipleStrategiesTest using Java 11.0.17 on repairnator with PID 13789 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:16 - The following profiles are active: schedule-disabled
14:37:16 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:16 - Finished Spring Data repository scanning in 115 ms. Found 5 JPA repository interfaces.
14:37:16 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:16 - Finished Spring Data repository scanning in 8 ms. Found 5 JPA repository interfaces.
14:37:17 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:17 - HikariPool-1 - Starting...
14:37:17 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:17 - HikariPool-1 - Start completed.
14:37:17 - Successfully acquired change log lock
14:37:18 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:37:18 - Reading from PUBLIC.DATABASECHANGELOG
14:37:18 - Successfully released change log lock
14:37:18 - Successfully acquired change log lock
Skipping auto-registration
14:37:18 - Skipping auto-registration
14:37:18 - Table EXCHANGE_ACCOUNTS created
14:37:18 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:37:18 - Table STRATEGIES created
14:37:18 - Auto-increment added to STRATEGIES.ID
14:37:18 - Table POSITIONS created
14:37:18 - Auto-increment added to POSITIONS.ID
14:37:18 - Table ORDERS created
14:37:18 - Auto-increment added to ORDERS.ID
14:37:18 - Table TRADES created
14:37:18 - Auto-increment added to TRADES.ID
14:37:18 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:37:18 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:37:18 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:37:18 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:37:18 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:37:18 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:37:18 - Index IDX_STRATEGIES_STRATEGY_ID created
14:37:18 - Index IDX_POSITIONS_POSITION_ID created
14:37:18 - Index IDX_POSITIONS_STATUS created
14:37:18 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:37:18 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:37:18 - Index IDX_ORDERS_ORDER_ID created
14:37:18 - Index IDX_TRADES_TRADE_ID created
14:37:18 - Index IDX_TRADES_ORDER_ID created
14:37:18 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:37:18 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:37:18 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:37:18 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:37:18 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:37:18 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:37:18 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:37:18 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:37:18 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:37:18 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:37:18 - Successfully released change log lock
14:37:18 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:18 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:37:18 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:37:18 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:19 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:19 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:19 - Calling Remote Init...
14:37:19 - ExchangeConfiguration - Dry mode is ON
14:37:20 - Adding account 'main'
14:37:20 - - Adding balance 99.0001 BTC
14:37:20 - Adding account 'savings'
14:37:20 - - Adding balance 1.1 BTC
14:37:20 - - Adding balance 2.2 USDT
14:37:20 - - Adding balance 3.3 ETH
14:37:20 - Adding account 'trade'
14:37:20 - - Adding balance 0.99962937 BTC
14:37:20 - - Adding balance 1000 USDT
14:37:20 - - Adding balance 10 ETH
14:37:20 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:20 - ExchangeConfiguration - Supported currency pairs : BTC/USDT, BTC/ETH, ETH/USDT 
14:37:20 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:37:20 - StrategyConfiguration - Accounts available : 'main/main'.
14:37:20 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:37:20 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:37:20 - StrategyConfiguration - Running strategy '01/Strategy 1' (requires BTC/USDT).
14:37:20 - StrategyConfiguration - Running strategy '02/Strategy 2' (requires BTC/ETH).
14:37:20 - StrategyConfiguration - Running strategy '03/Strategy 3' (requires BTC/USDT, ETH/USDT).
14:37:20 - Started MultipleStrategiesTest in 4.298 seconds (JVM running for 5.164)
14:37:20 - Strategy1-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy2-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy3-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy1-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy2-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy3-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy1-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy2-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:20 - Strategy3-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:21 - Strategy1-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:21.441590Z[Etc/UTC])

14:37:21 - Strategy3-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:21.474771Z[Etc/UTC])

14:37:21 - Strategy2-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/ETH, open=null, last=25, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:21.487113Z[Etc/UTC])

14:37:21 - Strategy3-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=2000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:21.499785Z[Etc/UTC])

14:37:22 - Strategy1-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:22 - Strategy1-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:23 - Strategy1-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, averagePrice=50000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441196Z[Etc/UTC], trades=[])

14:37:23 - Strategy1-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, averagePrice=50000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441196Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:23 - Strategy1-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=BTC/USDT, amount=0.001 BTC, price=50000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:37:22.442006Z[Etc/UTC])

14:37:23 - Strategy1-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:22.442Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:23 - Strategy1-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:22.442Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:29 - Strategy2-onPositionUpdate 001 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:29 - Strategy2-onPositionStatusUpdate 001 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:30 - Strategy2-onOrderUpdate 001 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, averagePrice=25 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589273Z[Etc/UTC], trades=[])

14:37:30 - Strategy2-onPositionUpdate 002 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, averagePrice=25 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589273Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:30 - Strategy2-onPositionUpdate 003 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=BTC/ETH, amount=0.02000000 BTC, price=25.00000000 ETH, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:30 - Strategy2-onTradeUpdate 001 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=BTC/ETH, amount=0.02 BTC, price=25 ETH, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589347Z[Etc/UTC])

14:37:30 - Strategy2-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, currencyPair=BTC/ETH, amount=0.02000000 BTC, price=25.00000000 ETH, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:29.589Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:31 - Strategy1-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:31.706530Z[Etc/UTC])

14:37:31 - Strategy1-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:22.442Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10000 USDT, highestGainPrice=10000 USDT, latestGainPrice=10000 USDT)

14:37:31 - Strategy3-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:31.716813Z[Etc/UTC])

14:37:32 - Strategy3-onPositionUpdate 001 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:32 - Strategy3-onPositionStatusUpdate 001 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:33 - Strategy3-onOrderUpdate 001 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, averagePrice=10000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698506Z[Etc/UTC], trades=[])

14:37:33 - Strategy3-onPositionUpdate 002 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, averagePrice=10000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698506Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:33 - Strategy3-onPositionUpdate 003 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:33 - Strategy3-onTradeUpdate 001 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01 BTC, price=10000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698596Z[Etc/UTC])

14:37:33 - Strategy3-onPositionStatusUpdate 002 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:34 - Strategy3-onPositionUpdate 004 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:34 - Strategy3-onPositionStatusUpdate 003 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:35 - Strategy3-onOrderUpdate 002 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, averagePrice=2000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.1 ETH, userReference=null, timestamp=2023-01-17T14:37:34.736010Z[Etc/UTC], trades=[])

14:37:35 - Strategy3-onPositionUpdate 005 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, averagePrice=2000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.1 ETH, userReference=null, timestamp=2023-01-17T14:37:34.736010Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:35 - Strategy3-onPositionUpdate 006 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-17T14:37:34.736Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.10000000 ETH, price=2000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:34.736Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:35 - Strategy3-onTradeUpdate 002 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.1 ETH, price=2000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:37:34.736083Z[Etc/UTC])

14:37:35 - Strategy3-onPositionStatusUpdate 004 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-17T14:37:34.736Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, currencyPair=ETH/USDT, amount=0.10000000 ETH, price=2000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:34.736Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:37:36 - Strategy1-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:36 - Strategy2-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:36 - Strategy3-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:37 - Strategy1-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-17T14:37:22.441Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:22.442Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10000.00000000 USDT, highestGainPrice=20000 USDT, latestGainPrice=20000 USDT)

14:37:37 - Strategy1-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=20000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:37.893869Z[Etc/UTC])

14:37:37 - Strategy3-onPositionUpdate 007 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000 USDT)

14:37:37 - Strategy3-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=null, last=20000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-17T14:37:37.904132Z[Etc/UTC])

14:37:37 - Strategy3-onPositionStatusUpdate 005 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000 USDT)

14:37:38 - Strategy3-onOrderUpdate 003 : OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885495Z[Etc/UTC], trades=[])

14:37:38 - Strategy3-onPositionUpdate 008 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885495Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

14:37:38 - Strategy3-onPositionUpdate 009 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

14:37:38 - Strategy3-onTradeUpdate 003 : TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885543Z[Etc/UTC])

14:37:38 - Strategy3-onPositionStatusUpdate 006 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:32.698Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-17T14:37:37.885Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

14:37:47 - Strategy1-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:47 - Strategy2-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:47 - Strategy3-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 33.182 s - in tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
14:37:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:48 - HikariPool-1 - Shutdown initiated...
14:37:48 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.strategy.CassandreStrategiesAutoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:50 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15244 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:50 - No active profile set, falling back to default profiles: default
14:37:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:50 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
14:37:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:51 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:37:51 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:51 - HikariPool-1 - Starting...
14:37:51 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:51 - HikariPool-1 - Start completed.
14:37:51 - Successfully acquired change log lock
14:37:52 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:37:52 - Reading from PUBLIC.DATABASECHANGELOG
14:37:52 - Successfully released change log lock
14:37:52 - Successfully acquired change log lock
Skipping auto-registration
14:37:52 - Skipping auto-registration
14:37:52 - Table EXCHANGE_ACCOUNTS created
14:37:52 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:37:52 - Table STRATEGIES created
14:37:52 - Auto-increment added to STRATEGIES.ID
14:37:52 - Table POSITIONS created
14:37:52 - Auto-increment added to POSITIONS.ID
14:37:52 - Table ORDERS created
14:37:52 - Auto-increment added to ORDERS.ID
14:37:52 - Table TRADES created
14:37:52 - Auto-increment added to TRADES.ID
14:37:52 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:37:52 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:37:52 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:37:52 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:37:52 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:37:52 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:37:52 - Index IDX_STRATEGIES_STRATEGY_ID created
14:37:52 - Index IDX_POSITIONS_POSITION_ID created
14:37:52 - Index IDX_POSITIONS_STATUS created
14:37:52 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:37:52 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:37:52 - Index IDX_ORDERS_ORDER_ID created
14:37:52 - Index IDX_TRADES_TRADE_ID created
14:37:52 - Index IDX_TRADES_ORDER_ID created
14:37:52 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:37:52 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:37:52 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:37:52 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:37:52 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:37:52 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:37:52 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:37:52 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:37:52 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:37:52 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:37:52 - Successfully released change log lock
14:37:52 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:52 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:37:52 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:37:52 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:53 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:54 - Calling Remote Init...
14:37:54 - ExchangeConfiguration - Dry mode is OFF
14:37:54 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:54 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:54 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:37:54 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:54 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:37:54 - StrategyConfiguration - Running strategy '01/Strategy 1' (requires BTC/USDT).
14:37:54 - StrategyConfiguration - Running strategy '02/Strategy 2' (requires BTC/ETH).
14:37:54 - StrategyConfiguration - Running strategy '03/Strategy 3' (requires BTC/USDT, ETH/USDT).
14:37:54 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:37:54 - Started ForkedBooter in 4.345 seconds (JVM running for 5.022)
14:37:54 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:54 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15244 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:54 - No active profile set, falling back to default profiles: default
14:37:54 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

14:37:54 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=0000001, type=BID, orderId=000001, currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

14:37:54 - Strategy1-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:37:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:54 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:37:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:54 - Finished Spring Data repository scanning in 8 ms. Found 5 JPA repository interfaces.
14:37:54 - Strategy1-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

14:37:54 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:54 - HikariPool-2 - Starting...
14:37:54 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:54 - HikariPool-2 - Start completed.
14:37:54 - Successfully acquired change log lock
14:37:54 - Strategy1-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1070, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1070, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

14:37:54 - Reading from PUBLIC.DATABASECHANGELOG
14:37:54 - Successfully released change log lock
14:37:54 - Successfully acquired change log lock
Skipping auto-registration
14:37:54 - Skipping auto-registration
14:37:54 - Successfully released change log lock
14:37:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:54 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:54 - Strategy1-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

14:37:54 - Strategy1-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/USDT, open=140, last=140, bid=null, ask=null, high=140, low=140, vwap=null, volume=1080, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:37:54 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:54 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:54 - Strategy3-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/USDT, open=140, last=140, bid=null, ask=null, high=140, low=140, vwap=null, volume=1080, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:37:54 - Strategy1-onTickerUpdate 006 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 006 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

14:37:54 - Strategy1-onTickerUpdate 007 : TickerDTO(currencyPair=BTC/USDT, open=119, last=119, bid=null, ask=null, high=119, low=119, vwap=null, volume=1090, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

14:37:54 - Strategy3-onTickerUpdate 007 : TickerDTO(currencyPair=BTC/USDT, open=119, last=119, bid=null, ask=null, high=119, low=119, vwap=null, volume=1090, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

14:37:55 - Strategy1-onTickerUpdate 008 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:37:55 - Strategy3-onTickerUpdate 008 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

14:37:55 - Calling Remote Init...
14:37:55 - ExchangeConfiguration - Dry mode is OFF
14:37:55 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:55 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:55 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:55 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: InvalidStrategy doesn't extend BasicCassandreStrategy or BasicTa4jCassandreStrategy.
14:37:55 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:55 - HikariPool-2 - Shutdown initiated...
14:37:55 - HikariPool-2 - Shutdown completed.
14:37:55 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:37:55 - Strategy1-onTickerUpdate 009 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

14:37:55 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

InvalidStrategy doesn't extend BasicCassandreStrategy or BasicTa4jCassandreStrategy.

Action:

InvalidStrategy must extend BasicCassandreStrategy or BasicTa4jCassandreStrategy

14:37:55 - Strategy3-onTickerUpdate 009 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:55 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15244 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:55 - No active profile set, falling back to default profiles: default
14:37:55 - Strategy1-onTickerUpdate 010 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-10T00:00Z[Etc/UTC])

14:37:55 - Strategy3-onTickerUpdate 010 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-10T00:00Z[Etc/UTC])

14:37:55 - Strategy1-onTickerUpdate 011 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-11T00:00Z[Etc/UTC])

14:37:55 - Strategy3-onTickerUpdate 011 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-11T00:00Z[Etc/UTC])

14:37:55 - Strategy1-onTickerUpdate 012 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-12T00:00Z[Etc/UTC])

14:37:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:55 - Strategy3-onTickerUpdate 012 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-12T00:00Z[Etc/UTC])

14:37:55 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
14:37:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:55 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
14:37:55 - Strategy1-onTickerUpdate 013 : TickerDTO(currencyPair=BTC/USDT, open=120, last=120, bid=null, ask=null, high=120, low=120, vwap=null, volume=1120, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-13T00:00Z[Etc/UTC])

14:37:55 - Strategy3-onTickerUpdate 013 : TickerDTO(currencyPair=BTC/USDT, open=120, last=120, bid=null, ask=null, high=120, low=120, vwap=null, volume=1120, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-13T00:00Z[Etc/UTC])

14:37:55 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:55 - HikariPool-3 - Starting...
14:37:55 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:55 - HikariPool-3 - Start completed.
14:37:55 - Successfully acquired change log lock
14:37:55 - Strategy1-onTickerUpdate 014 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-14T00:00Z[Etc/UTC])

14:37:55 - Strategy3-onTickerUpdate 014 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-14T00:00Z[Etc/UTC])

14:37:55 - Strategy1-onTickerUpdate 015 : TickerDTO(currencyPair=BTC/USDT, open=130, last=130, bid=null, ask=null, high=130, low=130, vwap=null, volume=1130, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-15T00:00Z[Etc/UTC])

14:37:55 - Reading from PUBLIC.DATABASECHANGELOG
14:37:55 - Strategy3-onTickerUpdate 015 : TickerDTO(currencyPair=BTC/USDT, open=130, last=130, bid=null, ask=null, high=130, low=130, vwap=null, volume=1130, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-15T00:00Z[Etc/UTC])

14:37:55 - Successfully released change log lock
14:37:55 - Successfully acquired change log lock
Skipping auto-registration
14:37:55 - Skipping auto-registration
14:37:55 - Successfully released change log lock
14:37:55 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:55 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:55 - Strategy1-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:55 - Strategy2-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:55 - Strategy3-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:55 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=150, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:55 - Strategy1-onOrderUpdate 001 : OrderDTO(id=1, orderId=000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

14:37:55 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

14:37:55 - Calling Remote Init...
14:37:55 - ExchangeConfiguration - Dry mode is OFF
14:37:55 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:55 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:55 - Strategy1-onTradeUpdate 001 : TradeDTO(id=1, tradeId=0000001, type=BID, orderId=000001, currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

14:37:55 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:55 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Your strategies specifies a trading account that doesn't exist.
14:37:55 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:55 - HikariPool-3 - Shutdown initiated...
14:37:55 - HikariPool-3 - Shutdown completed.
14:37:55 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:37:55 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Your strategies specifies a trading account that doesn't exist.

Action:

Check your getTradeAccount(Set<AccountDTO> accounts) method as it returns an empty result - Strategies in error : class tech.cassandre.trading.bot.test.util.strategies.NoTradingAccountStrategy

14:37:55 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=0000002, type=BID, orderId=000002, currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:55 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15244 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:55 - No active profile set, falling back to default profiles: default
14:37:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:55 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
14:37:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:55 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:37:55 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:55 - HikariPool-4 - Starting...
14:37:55 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:55 - HikariPool-4 - Start completed.
14:37:55 - Successfully acquired change log lock
14:37:55 - Reading from PUBLIC.DATABASECHANGELOG
14:37:55 - Successfully released change log lock
14:37:55 - Successfully acquired change log lock
Skipping auto-registration
14:37:55 - Skipping auto-registration
14:37:55 - Successfully released change log lock
14:37:55 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:55 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:55 - Calling Remote Init...
14:37:55 - ExchangeConfiguration - Dry mode is OFF
14:37:55 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:55 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:56 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:56 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Your strategies specifies a trading account that doesn't exist.
14:37:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:56 - HikariPool-4 - Shutdown initiated...
14:37:56 - HikariPool-4 - Shutdown completed.
14:37:56 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:37:56 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Your strategies specifies a trading account that doesn't exist.

Action:

Check your getTradeAccount(Set<AccountDTO> accounts) method as it returns an empty result - Strategies in error : class tech.cassandre.trading.bot.test.util.strategies.NoTradingAccountStrategy

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:56 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15244 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:56 - No active profile set, falling back to default profiles: default
14:37:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:56 - Finished Spring Data repository scanning in 51 ms. Found 5 JPA repository interfaces.
14:37:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:56 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:37:56 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:56 - HikariPool-5 - Starting...
14:37:56 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:56 - HikariPool-5 - Start completed.
14:37:56 - Successfully acquired change log lock
14:37:56 - Reading from PUBLIC.DATABASECHANGELOG
14:37:56 - Successfully released change log lock
14:37:56 - Successfully acquired change log lock
Skipping auto-registration
14:37:56 - Skipping auto-registration
14:37:56 - Successfully released change log lock
14:37:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:37:56 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:37:56 - Strategy1-onAccountUpdate 002 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=150, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:56 - Strategy2-onAccountUpdate 002 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=150, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:56 - Strategy1-onOrderUpdate 002 : OrderDTO(id=2, orderId=000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

14:37:56 - Strategy3-onAccountUpdate 002 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=150, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:37:56 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=000003, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

14:37:56 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:37:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:37:56 - Strategy1-onTradeUpdate 002 : TradeDTO(id=2, tradeId=0000002, type=BID, orderId=000002, currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

14:37:56 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=0000003, type=BID, orderId=000003, currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

14:37:56 - Calling Remote Init...
14:37:56 - ExchangeConfiguration - Dry mode is OFF
14:37:56 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:37:56 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:37:56 - StrategyConfiguration - Accounts available : '01/trade'.
14:37:56 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: No strategy found
14:37:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:56 - HikariPool-5 - Shutdown initiated...
14:37:56 - HikariPool-5 - Shutdown completed.
14:37:56 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:37:56 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

No strategy found

Action:

You must have one class with @CassandreStrategy.

[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.713 s - in tech.cassandre.trading.bot.test.configuration.strategy.CassandreStrategiesAutoConfigurationTest
14:37:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:37:56 - HikariPool-1 - Shutdown initiated...
14:37:56 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseProTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:37:58 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15658 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:37:58 - No active profile set, falling back to default profiles: default
14:37:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:58 - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
14:37:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:37:58 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:37:59 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:37:59 - HikariPool-1 - Starting...
14:37:59 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:37:59 - HikariPool-1 - Start completed.
14:37:59 - Successfully acquired change log lock
14:37:59 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:37:59 - Reading from PUBLIC.DATABASECHANGELOG
14:37:59 - Successfully released change log lock
14:37:59 - Successfully acquired change log lock
Skipping auto-registration
14:37:59 - Skipping auto-registration
14:37:59 - Table EXCHANGE_ACCOUNTS created
14:37:59 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:37:59 - Table STRATEGIES created
14:37:59 - Auto-increment added to STRATEGIES.ID
14:37:59 - Table POSITIONS created
14:37:59 - Auto-increment added to POSITIONS.ID
14:37:59 - Table ORDERS created
14:37:59 - Auto-increment added to ORDERS.ID
14:37:59 - Table TRADES created
14:37:59 - Auto-increment added to TRADES.ID
14:37:59 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:37:59 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:37:59 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:37:59 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:37:59 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:37:59 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:37:59 - Index IDX_STRATEGIES_STRATEGY_ID created
14:37:59 - Index IDX_POSITIONS_POSITION_ID created
14:37:59 - Index IDX_POSITIONS_STATUS created
14:37:59 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:37:59 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:37:59 - Index IDX_ORDERS_ORDER_ID created
14:37:59 - Index IDX_TRADES_TRADE_ID created
14:37:59 - Index IDX_TRADES_ORDER_ID created
14:37:59 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:38:00 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:00 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:00 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:00 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:00 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:00 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:00 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:00 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:00 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:00 - Successfully released change log lock
14:38:00 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:00 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:00 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:00 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:00 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:00 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:01 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Unknown configuration error : Illegal base64 character 2d
14:38:01 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:01 - HikariPool-1 - Shutdown initiated...
14:38:01 - HikariPool-1 - Shutdown completed.
14:38:01 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:01 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Unknown configuration error : Illegal base64 character 2d

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.227 s - in tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseProTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTickerTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:03 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 15873 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:03 - No active profile set, falling back to default profiles: default
14:38:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:03 - Finished Spring Data repository scanning in 123 ms. Found 5 JPA repository interfaces.
14:38:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:03 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:04 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:04 - HikariPool-1 - Starting...
14:38:04 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:04 - HikariPool-1 - Start completed.
14:38:04 - Successfully acquired change log lock
14:38:04 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:04 - Reading from PUBLIC.DATABASECHANGELOG
14:38:05 - Successfully released change log lock
14:38:05 - Successfully acquired change log lock
Skipping auto-registration
14:38:05 - Skipping auto-registration
14:38:05 - Table EXCHANGE_ACCOUNTS created
14:38:05 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:05 - Table STRATEGIES created
14:38:05 - Auto-increment added to STRATEGIES.ID
14:38:05 - Table POSITIONS created
14:38:05 - Auto-increment added to POSITIONS.ID
14:38:05 - Table ORDERS created
14:38:05 - Auto-increment added to ORDERS.ID
14:38:05 - Table TRADES created
14:38:05 - Auto-increment added to TRADES.ID
14:38:05 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:05 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:05 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:05 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:05 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:05 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:05 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:05 - Index IDX_POSITIONS_POSITION_ID created
14:38:05 - Index IDX_POSITIONS_STATUS created
14:38:05 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:05 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:05 - Index IDX_ORDERS_ORDER_ID created
14:38:05 - Index IDX_TRADES_TRADE_ID created
14:38:05 - Index IDX_TRADES_ORDER_ID created
14:38:05 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:38:05 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:05 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:05 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:05 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:05 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:05 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:05 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:05 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:05 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:05 - Successfully released change log lock
14:38:05 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:05 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:05 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:05 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:05 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:05 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:06 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
14:38:06 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:06 - HikariPool-1 - Shutdown initiated...
14:38:06 - HikariPool-1 - Shutdown completed.
14:38:06 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:06 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: AT20S
    Origin: "cassandre.trading.bot.exchange.rates.ticker" from property source "systemProperties"
    Reason: Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.906 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTickerTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.UnknownExchangeTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:08 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16143 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:08 - No active profile set, falling back to default profiles: default
14:38:08 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:08 - Finished Spring Data repository scanning in 116 ms. Found 5 JPA repository interfaces.
14:38:08 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:08 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:38:09 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:09 - HikariPool-1 - Starting...
14:38:09 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:09 - HikariPool-1 - Start completed.
14:38:09 - Successfully acquired change log lock
14:38:09 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:09 - Reading from PUBLIC.DATABASECHANGELOG
14:38:10 - Successfully released change log lock
14:38:10 - Successfully acquired change log lock
Skipping auto-registration
14:38:10 - Skipping auto-registration
14:38:10 - Table EXCHANGE_ACCOUNTS created
14:38:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:10 - Table STRATEGIES created
14:38:10 - Auto-increment added to STRATEGIES.ID
14:38:10 - Table POSITIONS created
14:38:10 - Auto-increment added to POSITIONS.ID
14:38:10 - Table ORDERS created
14:38:10 - Auto-increment added to ORDERS.ID
14:38:10 - Table TRADES created
14:38:10 - Auto-increment added to TRADES.ID
14:38:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:10 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:10 - Index IDX_POSITIONS_POSITION_ID created
14:38:10 - Index IDX_POSITIONS_STATUS created
14:38:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:10 - Index IDX_ORDERS_ORDER_ID created
14:38:10 - Index IDX_TRADES_TRADE_ID created
14:38:10 - Index IDX_TRADES_ORDER_ID created
14:38:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
14:38:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:10 - Successfully released change log lock
14:38:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:10 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:10 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:10 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:11 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Impossible to find the exchange you requested : foo
14:38:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:11 - HikariPool-1 - Shutdown initiated...
14:38:11 - HikariPool-1 - Shutdown completed.
14:38:11 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:11 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Impossible to find the exchange you requested : foo

Action:

Choose a valid exchange (https://github.com/knowm/XChange) and add the dependency to Cassandre

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.091 s - in tech.cassandre.trading.bot.test.configuration.exchange.UnknownExchangeTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForAccountTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:13 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16473 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:13 - No active profile set, falling back to default profiles: default
14:38:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:13 - Finished Spring Data repository scanning in 174 ms. Found 5 JPA repository interfaces.
14:38:13 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:13 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:14 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:14 - HikariPool-1 - Starting...
14:38:14 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:14 - HikariPool-1 - Start completed.
14:38:14 - Successfully acquired change log lock
14:38:14 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:14 - Reading from PUBLIC.DATABASECHANGELOG
14:38:15 - Successfully released change log lock
14:38:15 - Successfully acquired change log lock
Skipping auto-registration
14:38:15 - Skipping auto-registration
14:38:15 - Table EXCHANGE_ACCOUNTS created
14:38:15 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:15 - Table STRATEGIES created
14:38:15 - Auto-increment added to STRATEGIES.ID
14:38:15 - Table POSITIONS created
14:38:15 - Auto-increment added to POSITIONS.ID
14:38:15 - Table ORDERS created
14:38:15 - Auto-increment added to ORDERS.ID
14:38:15 - Table TRADES created
14:38:15 - Auto-increment added to TRADES.ID
14:38:15 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:15 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:15 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:15 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:15 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:15 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:15 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:15 - Index IDX_POSITIONS_POSITION_ID created
14:38:15 - Index IDX_POSITIONS_STATUS created
14:38:15 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:15 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:15 - Index IDX_ORDERS_ORDER_ID created
14:38:15 - Index IDX_TRADES_TRADE_ID created
14:38:15 - Index IDX_TRADES_ORDER_ID created
14:38:15 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:38:15 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:15 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:15 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:15 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:15 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:15 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:15 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:15 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:15 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:38:15 - Successfully released change log lock
14:38:15 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:15 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:15 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:15 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:15 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:15 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:16 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
14:38:16 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:16 - HikariPool-1 - Shutdown initiated...
14:38:16 - HikariPool-1 - Shutdown completed.
14:38:16 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:16 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.account
    Value: A
    Origin: "cassandre.trading.bot.exchange.rates.account" from property source "systemProperties"
    Reason: Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.071 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForAccountTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.ValidConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:18 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16816 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:18 - No active profile set, falling back to default profiles: default
14:38:18 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:18 - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
14:38:18 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:18 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:19 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:19 - HikariPool-1 - Starting...
14:38:19 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:19 - HikariPool-1 - Start completed.
14:38:19 - Successfully acquired change log lock
14:38:19 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:19 - Reading from PUBLIC.DATABASECHANGELOG
14:38:19 - Successfully released change log lock
14:38:19 - Successfully acquired change log lock
Skipping auto-registration
14:38:19 - Skipping auto-registration
14:38:19 - Table EXCHANGE_ACCOUNTS created
14:38:19 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:19 - Table STRATEGIES created
14:38:19 - Auto-increment added to STRATEGIES.ID
14:38:20 - Table POSITIONS created
14:38:20 - Auto-increment added to POSITIONS.ID
14:38:20 - Table ORDERS created
14:38:20 - Auto-increment added to ORDERS.ID
14:38:20 - Table TRADES created
14:38:20 - Auto-increment added to TRADES.ID
14:38:20 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:20 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:20 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:20 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:20 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:20 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:20 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:20 - Index IDX_POSITIONS_POSITION_ID created
14:38:20 - Index IDX_POSITIONS_STATUS created
14:38:20 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:20 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:20 - Index IDX_ORDERS_ORDER_ID created
14:38:20 - Index IDX_TRADES_TRADE_ID created
14:38:20 - Index IDX_TRADES_ORDER_ID created
14:38:20 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:38:20 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:20 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:20 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:20 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:20 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:20 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:20 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:20 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:20 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:20 - Successfully released change log lock
14:38:20 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:20 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:20 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:20 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:20 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:20 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:21 - Calling Remote Init...
14:38:21 - ExchangeConfiguration - Dry mode is OFF
14:38:21 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:38:21 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:38:21 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:38:21 - StrategyConfiguration - Accounts available : '01/trade'.
14:38:21 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:38:22 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:38:22 - Started ForkedBooter in 4.236 seconds (JVM running for 4.869)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.366 s - in tech.cassandre.trading.bot.test.configuration.exchange.ValidConfigurationTest
14:38:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:22 - HikariPool-1 - Shutdown initiated...
14:38:22 - HikariPool-1 - Shutdown completed.
14:38:22 - Unexpected error occurred in scheduled task
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.context.config.internalBeanConfigurerAspect': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:481)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy129.findByOrderId(Unknown Source)
	at tech.cassandre.trading.bot.batch.OrderFlux.saveValue(OrderFlux.java:68)
	at tech.cassandre.trading.bot.batch.OrderFlux.saveValue(OrderFlux.java:17)
	at tech.cassandre.trading.bot.util.base.batch.BaseFlux.emitValue(BaseFlux.java:58)
	at java.base/java.lang.Iterable.forEach(Iterable.java:75)
	at tech.cassandre.trading.bot.util.base.batch.BaseExternalFlux.update(BaseExternalFlux.java:23)
	at tech.cassandre.trading.bot.configuration.ScheduleAutoConfiguration.tradeFluxUpdate(ScheduleAutoConfiguration.java:82)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:23 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 17853 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:23 - No active profile set, falling back to default profiles: default
14:38:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:23 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
14:38:23 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:23 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:24 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:24 - HikariPool-1 - Starting...
14:38:24 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:24 - HikariPool-1 - Start completed.
14:38:24 - Successfully acquired change log lock
14:38:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:25 - Reading from PUBLIC.DATABASECHANGELOG
14:38:25 - Successfully released change log lock
14:38:25 - Successfully acquired change log lock
Skipping auto-registration
14:38:25 - Skipping auto-registration
14:38:25 - Table EXCHANGE_ACCOUNTS created
14:38:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:25 - Table STRATEGIES created
14:38:25 - Auto-increment added to STRATEGIES.ID
14:38:25 - Table POSITIONS created
14:38:25 - Auto-increment added to POSITIONS.ID
14:38:25 - Table ORDERS created
14:38:25 - Auto-increment added to ORDERS.ID
14:38:25 - Table TRADES created
14:38:25 - Auto-increment added to TRADES.ID
14:38:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:25 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:25 - Index IDX_POSITIONS_POSITION_ID created
14:38:25 - Index IDX_POSITIONS_STATUS created
14:38:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:25 - Index IDX_ORDERS_ORDER_ID created
14:38:25 - Index IDX_TRADES_TRADE_ID created
14:38:25 - Index IDX_TRADES_ORDER_ID created
14:38:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:38:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:25 - Successfully released change log lock
14:38:25 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:25 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:25 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:25 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:27 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
14:38:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:27 - HikariPool-1 - Shutdown initiated...
14:38:27 - HikariPool-1 - Shutdown completed.
14:38:27 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:27 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: null
    Reason: Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)

    Property: cassandre.trading.bot.exchange.secret
    Value: null
    Reason: API secret required

    Property: cassandre.trading.bot.exchange.username
    Value: null
    Reason: API username required

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: null
    Reason: Delay between calls to trade API is mandatory

    Property: cassandre.trading.bot.exchange.name
    Value: null
    Reason: Exchange name required, for example : coinbase, kraken, kucoin...

    Property: cassandre.trading.bot.exchange.modes.dry
    Value: null
    Reason: Dry parameter required, set it to true to use the dry mode

    Property: cassandre.trading.bot.exchange.modes.sandbox
    Value: null
    Reason: Sandbox parameter required, set it to true to use the sandbox

    Property: cassandre.trading.bot.exchange.rates.account
    Value: null
    Reason: Delay between calls to account API is mandatory

    Property: cassandre.trading.bot.exchange.passphrase
    Value: null
    Reason: API passphrase required

    Property: cassandre.trading.bot.exchange.key
    Value: null
    Reason: API key required

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: null
    Reason: Delay between calls to ticker API is mandatory

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: null
    Reason: Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)

    Property: cassandre.trading.bot.exchange.rates.account
    Value: null
    Reason: Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:769)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:761)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:426)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:326)
	at tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest.checkErrorMessages(NoConfigurationTest.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:92)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:78)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 84 more
Caused by: org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.boot.context.properties.bind.Binder.handleBindError(Binder.java:363)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:323)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:308)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:238)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:225)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:91)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:89)
	... 98 more
Caused by: org.springframework.boot.context.properties.bind.validation.BindValidationException: Binding validation errors on cassandre.trading.bot.exchange
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.trade': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.trade,Rate.rates.trade,Rate.trade,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.trade,rates.trade]; arguments []; default message [rates.trade]]; default message [Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'secret': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.secret,NotEmpty.secret,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.secret,secret]; arguments []; default message [secret]]; default message [API secret required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'username': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.username,NotEmpty.username,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.username,username]; arguments []; default message [username]]; default message [API username required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.trade': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.trade,NotNull.rates.trade,NotNull.trade,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.trade,rates.trade]; arguments []; default message [rates.trade]]; default message [Delay between calls to trade API is mandatory]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'name': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.name,NotEmpty.name,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.name,name]; arguments []; default message [name]]; default message [Exchange name required, for example : coinbase, kraken, kucoin...]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'modes.dry': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.modes.dry,NotNull.modes.dry,NotNull.dry,NotNull.java.lang.Boolean,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.modes.dry,modes.dry]; arguments []; default message [modes.dry]]; default message [Dry parameter required, set it to true to use the dry mode]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'modes.sandbox': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.modes.sandbox,NotNull.modes.sandbox,NotNull.sandbox,NotNull.java.lang.Boolean,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.modes.sandbox,modes.sandbox]; arguments []; default message [modes.sandbox]]; default message [Sandbox parameter required, set it to true to use the sandbox]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.account': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.account,NotNull.rates.account,NotNull.account,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.account,rates.account]; arguments []; default message [rates.account]]; default message [Delay between calls to account API is mandatory]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'passphrase': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.passphrase,NotEmpty.passphrase,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.passphrase,passphrase]; arguments []; default message [passphrase]]; default message [API passphrase required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'key': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.key,NotEmpty.key,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.key,key]; arguments []; default message [key]]; default message [API key required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.ticker': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.ticker,NotNull.rates.ticker,NotNull.ticker,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.ticker,rates.ticker]; arguments []; default message [rates.ticker]]; default message [Delay between calls to ticker API is mandatory]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.ticker': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.ticker,Rate.rates.ticker,Rate.ticker,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.ticker,rates.ticker]; arguments []; default message [rates.ticker]]; default message [Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.account': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.account,Rate.rates.account,Rate.account,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.account,rates.account]; arguments []; default message [rates.account]]; default message [Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.validateAndPush(ValidationBindHandler.java:141)
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.validate(ValidationBindHandler.java:114)
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.onFinish(ValidationBindHandler.java:105)
	at org.springframework.boot.context.properties.bind.Binder.handleBindResult(Binder.java:339)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:320)
	... 103 more
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.093 s - in tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.ExchangeNameMissingTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:28 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18162 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:28 - No active profile set, falling back to default profiles: default
14:38:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:29 - Finished Spring Data repository scanning in 126 ms. Found 5 JPA repository interfaces.
14:38:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:29 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:29 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:29 - HikariPool-1 - Starting...
14:38:29 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:29 - HikariPool-1 - Start completed.
14:38:29 - Successfully acquired change log lock
14:38:30 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:30 - Reading from PUBLIC.DATABASECHANGELOG
14:38:30 - Successfully released change log lock
14:38:30 - Successfully acquired change log lock
Skipping auto-registration
14:38:30 - Skipping auto-registration
14:38:30 - Table EXCHANGE_ACCOUNTS created
14:38:30 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:30 - Table STRATEGIES created
14:38:30 - Auto-increment added to STRATEGIES.ID
14:38:30 - Table POSITIONS created
14:38:30 - Auto-increment added to POSITIONS.ID
14:38:30 - Table ORDERS created
14:38:30 - Auto-increment added to ORDERS.ID
14:38:30 - Table TRADES created
14:38:30 - Auto-increment added to TRADES.ID
14:38:30 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:30 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:30 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:30 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:30 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:30 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:30 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:30 - Index IDX_POSITIONS_POSITION_ID created
14:38:30 - Index IDX_POSITIONS_STATUS created
14:38:30 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:30 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:30 - Index IDX_ORDERS_ORDER_ID created
14:38:30 - Index IDX_TRADES_TRADE_ID created
14:38:30 - Index IDX_TRADES_ORDER_ID created
14:38:30 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:38:30 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:30 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:30 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:30 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:30 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:30 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:30 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:30 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:30 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:30 - Successfully released change log lock
14:38:30 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:30 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:30 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:30 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:31 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:31 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
14:38:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:31 - HikariPool-1 - Shutdown initiated...
14:38:31 - HikariPool-1 - Shutdown completed.
14:38:31 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:31 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.name
    Value: null
    Reason: Exchange name required, for example : coinbase, kraken, kucoin...


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.952 s - in tech.cassandre.trading.bot.test.configuration.exchange.ExchangeNameMissingTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:33 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:33 - No active profile set, falling back to default profiles: default
14:38:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:33 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
14:38:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:33 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:38:34 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:34 - HikariPool-1 - Starting...
14:38:34 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:34 - HikariPool-1 - Start completed.
14:38:34 - Successfully acquired change log lock
14:38:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:35 - Reading from PUBLIC.DATABASECHANGELOG
14:38:35 - Successfully released change log lock
14:38:35 - Successfully acquired change log lock
Skipping auto-registration
14:38:35 - Skipping auto-registration
14:38:35 - Table EXCHANGE_ACCOUNTS created
14:38:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:35 - Table STRATEGIES created
14:38:35 - Auto-increment added to STRATEGIES.ID
14:38:35 - Table POSITIONS created
14:38:35 - Auto-increment added to POSITIONS.ID
14:38:35 - Table ORDERS created
14:38:35 - Auto-increment added to ORDERS.ID
14:38:35 - Table TRADES created
14:38:35 - Auto-increment added to TRADES.ID
14:38:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:35 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:35 - Index IDX_POSITIONS_POSITION_ID created
14:38:35 - Index IDX_POSITIONS_STATUS created
14:38:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:35 - Index IDX_ORDERS_ORDER_ID created
14:38:35 - Index IDX_TRADES_TRADE_ID created
14:38:35 - Index IDX_TRADES_ORDER_ID created
14:38:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 39ms
14:38:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:38:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:35 - Successfully released change log lock
14:38:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:35 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:35 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:37 - Calling Remote Init...
14:38:37 - No remote initialization implemented for Coinbase. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
14:38:37 - ExchangeConfiguration - Dry mode is OFF
14:38:37 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Unknown configuration error : null (HTTP status code: 404)
14:38:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:37 - HikariPool-1 - Shutdown initiated...
14:38:37 - HikariPool-1 - Shutdown completed.
14:38:37 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:37 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Unknown configuration error : null (HTTP status code: 404)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.013 s - in tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTradeTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:39 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18672 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:39 - No active profile set, falling back to default profiles: default
14:38:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:39 - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
14:38:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:40 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:40 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:40 - HikariPool-1 - Starting...
14:38:40 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:40 - HikariPool-1 - Start completed.
14:38:40 - Successfully acquired change log lock
14:38:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:41 - Reading from PUBLIC.DATABASECHANGELOG
14:38:41 - Successfully released change log lock
14:38:41 - Successfully acquired change log lock
Skipping auto-registration
14:38:41 - Skipping auto-registration
14:38:41 - Table EXCHANGE_ACCOUNTS created
14:38:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:41 - Table STRATEGIES created
14:38:41 - Auto-increment added to STRATEGIES.ID
14:38:41 - Table POSITIONS created
14:38:41 - Auto-increment added to POSITIONS.ID
14:38:41 - Table ORDERS created
14:38:41 - Auto-increment added to ORDERS.ID
14:38:41 - Table TRADES created
14:38:41 - Auto-increment added to TRADES.ID
14:38:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:41 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:41 - Index IDX_POSITIONS_POSITION_ID created
14:38:41 - Index IDX_POSITIONS_STATUS created
14:38:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:41 - Index IDX_ORDERS_ORDER_ID created
14:38:41 - Index IDX_TRADES_TRADE_ID created
14:38:41 - Index IDX_TRADES_ORDER_ID created
14:38:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:38:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:41 - Successfully released change log lock
14:38:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:41 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:41 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:42 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:42 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
14:38:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:42 - HikariPool-1 - Shutdown initiated...
14:38:42 - HikariPool-1 - Shutdown completed.
14:38:42 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:42 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: AT20S
    Origin: "cassandre.trading.bot.exchange.rates.trade" from property source "systemProperties"
    Reason: Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.057 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTradeTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.database.ValidConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:44 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18984 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:44 - No active profile set, falling back to default profiles: default
14:38:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:44 - Finished Spring Data repository scanning in 165 ms. Found 5 JPA repository interfaces.
14:38:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:45 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:38:45 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:38:45 - HikariPool-1 - Starting...
14:38:45 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:38:45 - HikariPool-1 - Start completed.
14:38:45 - Successfully acquired change log lock
14:38:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:38:46 - Reading from PUBLIC.DATABASECHANGELOG
14:38:46 - Successfully released change log lock
14:38:46 - Successfully acquired change log lock
Skipping auto-registration
14:38:46 - Skipping auto-registration
14:38:46 - Table EXCHANGE_ACCOUNTS created
14:38:46 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:38:46 - Table STRATEGIES created
14:38:46 - Auto-increment added to STRATEGIES.ID
14:38:46 - Table POSITIONS created
14:38:46 - Auto-increment added to POSITIONS.ID
14:38:46 - Table ORDERS created
14:38:46 - Auto-increment added to ORDERS.ID
14:38:46 - Table TRADES created
14:38:46 - Auto-increment added to TRADES.ID
14:38:46 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:38:46 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:38:46 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:38:46 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:38:46 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:38:46 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:38:46 - Index IDX_STRATEGIES_STRATEGY_ID created
14:38:46 - Index IDX_POSITIONS_POSITION_ID created
14:38:46 - Index IDX_POSITIONS_STATUS created
14:38:46 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:38:46 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:38:46 - Index IDX_ORDERS_ORDER_ID created
14:38:46 - Index IDX_TRADES_TRADE_ID created
14:38:46 - Index IDX_TRADES_ORDER_ID created
14:38:46 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:38:46 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:38:46 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:38:46 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:38:46 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:38:46 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:38:46 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:38:46 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:38:46 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:38:46 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:38:46 - Successfully released change log lock
14:38:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:38:46 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:38:46 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:38:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:38:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:38:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:38:48 - Calling Remote Init...
14:38:48 - ExchangeConfiguration - Dry mode is OFF
14:38:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:38:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:38:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:38:48 - StrategyConfiguration - Accounts available : '01/trade'.
14:38:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:38:48 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:38:48 - Started ForkedBooter in 4.264 seconds (JVM running for 4.972)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.379 s - in tech.cassandre.trading.bot.test.configuration.database.ValidConfigurationTest
14:38:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:38:48 - HikariPool-1 - Shutdown initiated...
14:38:48 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.database.NoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:49 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 19317 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:49 - No active profile set, falling back to default profiles: default
14:38:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:50 - Finished Spring Data repository scanning in 135 ms. Found 5 JPA repository interfaces.
14:38:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:38:50 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:38:50 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Unsatisfied dependency expressed through method 'liquibase' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.DatabaseAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.database-tech.cassandre.trading.bot.util.parameters.DatabaseParameters': Could not bind properties to 'DatabaseParameters' : prefix=cassandre.trading.bot.database, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.database' to tech.cassandre.trading.bot.util.parameters.DatabaseParameters
14:38:50 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
14:38:50 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.database' to tech.cassandre.trading.bot.util.parameters.DatabaseParameters failed:

    Property: cassandre.trading.bot.database.datasource.driverClassName
    Value: null
    Reason: Database driver class name must be set

    Property: cassandre.trading.bot.database.datasource.username
    Value: null
    Reason: Database username must be set

    Property: cassandre.trading.bot.database.datasource.url
    Value: null
    Reason: Database url must be set


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.479 s - in tech.cassandre.trading.bot.test.configuration.database.NoConfigurationTest
[INFO] Running tech.cassandre.trading.bot.test.dto.TradeDTOTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s - in tech.cassandre.trading.bot.test.dto.TradeDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.EqualsBuilderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.042 s - in tech.cassandre.trading.bot.test.dto.EqualsBuilderTest
[INFO] Running tech.cassandre.trading.bot.test.dto.OrderDTOTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.058 s - in tech.cassandre.trading.bot.test.dto.OrderDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.PositionRulesDTOTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 s - in tech.cassandre.trading.bot.test.dto.PositionRulesDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.PositionCreationResultDTOTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 s - in tech.cassandre.trading.bot.test.dto.PositionCreationResultDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.AccountDTOTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s - in tech.cassandre.trading.bot.test.dto.AccountDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.GainDTOTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.079 s - in tech.cassandre.trading.bot.test.dto.GainDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.TickerDTOTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.107 s - in tech.cassandre.trading.bot.test.dto.TickerDTOTest
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
14:38:59.377 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:38:59.384 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:38:59.407 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:38:59.414 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test], using SpringBootContextLoader
14:38:59.417 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue427Test-context.xml] does not exist
14:38:59.417 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue427TestContext.groovy] does not exist
14:38:59.417 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:38:59.417 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: Issue427Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:38:59.489 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:38:59.489 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
14:38:59.544 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: using defaults.
14:38:59.544 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:38:59.550 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:38:59.555 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4716be8b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fc32e4f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1869fbd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6af9fcb2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cce16f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7efaad5a, org.springframework.test.context.event.EventPublishingTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@73cd37c0]
14:38:59.557 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@141e5bef testClass = Issue427Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue427Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue427TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@54bff557, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c711375, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@49049a04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@72e5a8e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:38:59.597 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@141e5bef testClass = Issue427Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test@bcef303, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue427Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue427TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@54bff557, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c711375, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@49049a04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@72e5a8e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:38:59.609 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:38:59.614 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:38:59 - Starting Issue427Test using Java 11.0.17 on repairnator with PID 20505 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:38:59 - The following profiles are active: schedule-disabled
14:39:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:00 - Finished Spring Data repository scanning in 114 ms. Found 5 JPA repository interfaces.
14:39:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:00 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:39:00 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:00 - HikariPool-1 - Starting...
14:39:01 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:01 - HikariPool-1 - Start completed.
14:39:01 - Successfully acquired change log lock
14:39:01 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:01 - Reading from PUBLIC.DATABASECHANGELOG
14:39:01 - Successfully released change log lock
14:39:01 - Successfully acquired change log lock
Skipping auto-registration
14:39:01 - Skipping auto-registration
14:39:01 - Table EXCHANGE_ACCOUNTS created
14:39:01 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:01 - Table STRATEGIES created
14:39:01 - Auto-increment added to STRATEGIES.ID
14:39:01 - Table POSITIONS created
14:39:01 - Auto-increment added to POSITIONS.ID
14:39:01 - Table ORDERS created
14:39:01 - Auto-increment added to ORDERS.ID
14:39:01 - Table TRADES created
14:39:01 - Auto-increment added to TRADES.ID
14:39:01 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:01 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:01 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:01 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:01 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:01 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:01 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:01 - Index IDX_POSITIONS_POSITION_ID created
14:39:01 - Index IDX_POSITIONS_STATUS created
14:39:01 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:01 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:01 - Index IDX_ORDERS_ORDER_ID created
14:39:01 - Index IDX_TRADES_TRADE_ID created
14:39:01 - Index IDX_TRADES_ORDER_ID created
14:39:01 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:39:01 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:01 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:01 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:01 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:01 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:01 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:01 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:01 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:01 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:39:01 - Successfully released change log lock
14:39:01 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:01 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:39:02 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:39:02 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:02 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:03 - Calling Remote Init...
14:39:03 - ExchangeConfiguration - Dry mode is ON
14:39:03 - Adding account 'main'
14:39:03 - - Adding balance 99.0001 BTC
14:39:03 - Adding account 'savings'
14:39:03 - - Adding balance 1.1 BTC
14:39:03 - - Adding balance 2.2 USDT
14:39:03 - - Adding balance 3.3 ETH
14:39:03 - Adding account 'trade'
14:39:03 - - Adding balance 0.99962937 BTC
14:39:03 - - Adding balance 1000 USDT
14:39:03 - - Adding balance 10 ETH
14:39:03 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:03 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:03 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:03 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:03 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:03 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:03 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:04 - Started Issue427Test in 4.405 seconds (JVM running for 5.31)
14:39:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:04 - HikariPool-1 - Shutdown initiated...
14:39:04 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:04 - Starting Issue427Test using Java 11.0.17 on repairnator with PID 20505 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:04 - The following profiles are active: schedule-disabled
14:39:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:04 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
14:39:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:04 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:39:04 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:04 - HikariPool-2 - Starting...
14:39:04 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:04 - HikariPool-2 - Start completed.
14:39:04 - Successfully acquired change log lock
14:39:04 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:04 - Reading from PUBLIC.DATABASECHANGELOG
14:39:04 - Successfully released change log lock
14:39:04 - Successfully acquired change log lock
Skipping auto-registration
14:39:04 - Skipping auto-registration
14:39:04 - Table EXCHANGE_ACCOUNTS created
14:39:04 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:04 - Table STRATEGIES created
14:39:04 - Auto-increment added to STRATEGIES.ID
14:39:04 - Table POSITIONS created
14:39:04 - Auto-increment added to POSITIONS.ID
14:39:04 - Table ORDERS created
14:39:04 - Auto-increment added to ORDERS.ID
14:39:04 - Table TRADES created
14:39:04 - Auto-increment added to TRADES.ID
14:39:04 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:04 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:04 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:04 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:04 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:04 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:04 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:04 - Index IDX_POSITIONS_POSITION_ID created
14:39:04 - Index IDX_POSITIONS_STATUS created
14:39:04 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:04 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:04 - Index IDX_ORDERS_ORDER_ID created
14:39:04 - Index IDX_TRADES_TRADE_ID created
14:39:04 - Index IDX_TRADES_ORDER_ID created
14:39:04 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
14:39:04 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:04 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:04 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:04 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:04 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:04 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:04 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:04 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:04 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:04 - Successfully released change log lock
14:39:04 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:04 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:04 - Calling Remote Init...
14:39:04 - ExchangeConfiguration - Dry mode is ON
14:39:04 - Adding account 'main'
14:39:04 - - Adding balance 99.0001 BTC
14:39:04 - Adding account 'savings'
14:39:04 - - Adding balance 1.1 BTC
14:39:04 - - Adding balance 2.2 USDT
14:39:04 - - Adding balance 3.3 ETH
14:39:04 - Adding account 'trade'
14:39:04 - - Adding balance 0.99962937 BTC
14:39:04 - - Adding balance 1000 USDT
14:39:04 - - Adding balance 10 ETH
14:39:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:04 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:04 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:04 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:04 - Started Issue427Test in 0.749 seconds (JVM running for 6.082)
14:39:09 - Scheduler worker in group main failed with an uncaught exception
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.orderUpdate(GenericCassandreStrategy.java:165) ~[classes/:na]
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:476) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:254) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.runBackfused(FluxPublishOn.java:483) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.run(FluxPublishOn.java:520) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37) ~[reactor-core-3.3.15.RELEASE.jar:3.3.15.RELEASE]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.547 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
14:39:19 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:19 - HikariPool-2 - Shutdown initiated...
14:39:19 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
14:39:20.923 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:39:20.931 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:39:20.955 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:39:20.963 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test], using SpringBootContextLoader
14:39:20.965 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue426Test-context.xml] does not exist
14:39:20.965 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue426TestContext.groovy] does not exist
14:39:20.966 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:39:20.966 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: Issue426Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:39:21.041 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:39:21.041 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
14:39:21.096 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: using defaults.
14:39:21.096 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:39:21.102 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:39:21.107 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4716be8b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fc32e4f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1869fbd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6af9fcb2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cce16f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7efaad5a, org.springframework.test.context.event.EventPublishingTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@73cd37c0]
14:39:21.109 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@141e5bef testClass = Issue426Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue426Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue426TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@54bff557, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c711375, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@49049a04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@72e5a8e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:39:21.150 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@141e5bef testClass = Issue426Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test@bcef303, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue426Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue426TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@54bff557, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@7c711375, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@49049a04, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@72e5a8e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:39:21.163 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:39:21.166 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:21 - Starting Issue426Test using Java 11.0.17 on repairnator with PID 21339 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:21 - The following profiles are active: schedule-disabled
14:39:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:21 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
14:39:21 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:21 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:39:22 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:22 - HikariPool-1 - Starting...
14:39:22 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:22 - HikariPool-1 - Start completed.
14:39:22 - Successfully acquired change log lock
14:39:23 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:23 - Reading from PUBLIC.DATABASECHANGELOG
14:39:23 - Successfully released change log lock
14:39:23 - Successfully acquired change log lock
Skipping auto-registration
14:39:23 - Skipping auto-registration
14:39:23 - Table EXCHANGE_ACCOUNTS created
14:39:23 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:23 - Table STRATEGIES created
14:39:23 - Auto-increment added to STRATEGIES.ID
14:39:23 - Table POSITIONS created
14:39:23 - Auto-increment added to POSITIONS.ID
14:39:23 - Table ORDERS created
14:39:23 - Auto-increment added to ORDERS.ID
14:39:23 - Table TRADES created
14:39:23 - Auto-increment added to TRADES.ID
14:39:23 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:23 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:23 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:23 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:23 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:23 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:23 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:23 - Index IDX_POSITIONS_POSITION_ID created
14:39:23 - Index IDX_POSITIONS_STATUS created
14:39:23 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:23 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:23 - Index IDX_ORDERS_ORDER_ID created
14:39:23 - Index IDX_TRADES_TRADE_ID created
14:39:23 - Index IDX_TRADES_ORDER_ID created
14:39:23 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:39:23 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:23 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:23 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:23 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:23 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:23 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:23 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:23 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:23 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:23 - Successfully released change log lock
14:39:23 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:23 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:39:23 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:39:23 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:24 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:25 - Calling Remote Init...
14:39:25 - ExchangeConfiguration - Dry mode is ON
14:39:25 - Adding account 'main'
14:39:25 - - Adding balance 99.0001 BTC
14:39:25 - Adding account 'savings'
14:39:25 - - Adding balance 1.1 BTC
14:39:25 - - Adding balance 2.2 USDT
14:39:25 - - Adding balance 3.3 ETH
14:39:25 - Adding account 'trade'
14:39:25 - - Adding balance 0.99962937 BTC
14:39:25 - - Adding balance 1000 USDT
14:39:25 - - Adding balance 10 ETH
14:39:25 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:25 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:25 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:25 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:25 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:25 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:25 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:25 - Started Issue426Test in 4.409 seconds (JVM running for 5.257)
14:39:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:25 - HikariPool-1 - Shutdown initiated...
14:39:25 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:25 - Starting Issue426Test using Java 11.0.17 on repairnator with PID 21339 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:25 - The following profiles are active: schedule-disabled
14:39:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:25 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:39:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:25 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:39:25 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:25 - HikariPool-2 - Starting...
14:39:25 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:25 - HikariPool-2 - Start completed.
14:39:25 - Successfully acquired change log lock
14:39:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:25 - Reading from PUBLIC.DATABASECHANGELOG
14:39:25 - Successfully released change log lock
14:39:25 - Successfully acquired change log lock
Skipping auto-registration
14:39:25 - Skipping auto-registration
14:39:25 - Table EXCHANGE_ACCOUNTS created
14:39:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:25 - Table STRATEGIES created
14:39:25 - Auto-increment added to STRATEGIES.ID
14:39:25 - Table POSITIONS created
14:39:25 - Auto-increment added to POSITIONS.ID
14:39:25 - Table ORDERS created
14:39:25 - Auto-increment added to ORDERS.ID
14:39:25 - Table TRADES created
14:39:25 - Auto-increment added to TRADES.ID
14:39:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:25 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:25 - Index IDX_POSITIONS_POSITION_ID created
14:39:25 - Index IDX_POSITIONS_STATUS created
14:39:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:25 - Index IDX_ORDERS_ORDER_ID created
14:39:25 - Index IDX_TRADES_TRADE_ID created
14:39:25 - Index IDX_TRADES_ORDER_ID created
14:39:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
14:39:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:25 - Successfully released change log lock
14:39:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:26 - Calling Remote Init...
14:39:26 - ExchangeConfiguration - Dry mode is ON
14:39:26 - Adding account 'main'
14:39:26 - - Adding balance 99.0001 BTC
14:39:26 - Adding account 'savings'
14:39:26 - - Adding balance 1.1 BTC
14:39:26 - - Adding balance 2.2 USDT
14:39:26 - - Adding balance 3.3 ETH
14:39:26 - Adding account 'trade'
14:39:26 - - Adding balance 0.99962937 BTC
14:39:26 - - Adding balance 1000 USDT
14:39:26 - - Adding balance 10 ETH
14:39:26 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:26 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:26 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:26 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:26 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:26 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:26 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:26 - Started Issue426Test in 0.768 seconds (JVM running for 6.058)
14:39:26 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:39:27 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

14:39:31 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=3 BTC, limitPrice=5 BTC, leverage=leverage1, status=NEW, cumulativeAmount=2 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[UTC], trades=[])

14:39:31 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=TRADE_000002, type=ASK, orderId=ORDER_000001, currencyPair=ETH/BTC, amount=0.5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=null)

14:39:32 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=3 BTC, limitPrice=5 BTC, leverage=leverage1, status=FILLED, cumulativeAmount=2 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[UTC], trades=[])

14:39:32 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=TRADE_000001, type=ASK, orderId=ORDER_000001, currencyPair=ETH/BTC, amount=0.5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=null)

14:39:33 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=2, tradeId=TRADE_000001, type=ASK, orderId=ORDER_000001, currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.682 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
14:39:36 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:36 - HikariPool-2 - Shutdown initiated...
14:39:36 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
14:39:37.601 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:39:37.610 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:39:37.635 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:39:37.642 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test], using SpringBootContextLoader
14:39:37.645 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue421Test-context.xml] does not exist
14:39:37.645 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue421TestContext.groovy] does not exist
14:39:37.645 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:39:37.646 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: Issue421Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:39:37.679 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]
14:39:37.721 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:39:37.722 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
14:39:37.779 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: using defaults.
14:39:37.779 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:39:37.785 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:39:37.790 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67545b57, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6c2c1385, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f354bcf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3daf7722, org.springframework.test.context.support.DirtiesContextTestExecutionListener@78641d23, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74589991, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@146dfe6, org.springframework.test.context.event.EventPublishingTestExecutionListener@4716be8b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1869fbd2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7efaad5a]
14:39:37.792 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@130e116b testClass = Issue421Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@e383572 testClass = Issue421Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5ddf0d24 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4f2b503c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e15b7e8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@ffaa6af, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b0d79fc, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:39:37.847 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@130e116b testClass = Issue421Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test@6bca7e0d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@e383572 testClass = Issue421Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5ddf0d24 key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4f2b503c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e15b7e8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@ffaa6af, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b0d79fc, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:39:37.860 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:38 - Starting Issue421Test using Java 11.0.17 on repairnator with PID 22128 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:38 - No active profile set, falling back to default profiles: default
14:39:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:38 - Finished Spring Data repository scanning in 119 ms. Found 5 JPA repository interfaces.
14:39:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:38 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:39:39 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:39 - HikariPool-1 - Starting...
14:39:39 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:39 - HikariPool-1 - Start completed.
14:39:39 - Successfully acquired change log lock
14:39:39 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:39 - Reading from PUBLIC.DATABASECHANGELOG
14:39:40 - Successfully released change log lock
14:39:40 - Successfully acquired change log lock
Skipping auto-registration
14:39:40 - Skipping auto-registration
14:39:40 - Table EXCHANGE_ACCOUNTS created
14:39:40 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:40 - Table STRATEGIES created
14:39:40 - Auto-increment added to STRATEGIES.ID
14:39:40 - Table POSITIONS created
14:39:40 - Auto-increment added to POSITIONS.ID
14:39:40 - Table ORDERS created
14:39:40 - Auto-increment added to ORDERS.ID
14:39:40 - Table TRADES created
14:39:40 - Auto-increment added to TRADES.ID
14:39:40 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:40 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:40 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:40 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:40 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:40 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:40 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:40 - Index IDX_POSITIONS_POSITION_ID created
14:39:40 - Index IDX_POSITIONS_STATUS created
14:39:40 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:40 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:40 - Index IDX_ORDERS_ORDER_ID created
14:39:40 - Index IDX_TRADES_TRADE_ID created
14:39:40 - Index IDX_TRADES_ORDER_ID created
14:39:40 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:39:40 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:40 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:40 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:40 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:40 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:40 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:40 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:40 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:40 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:39:40 - Successfully released change log lock
14:39:40 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:40 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:39:40 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:39:40 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:40 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:40 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:41 - Calling Remote Init...
14:39:41 - ExchangeConfiguration - Dry mode is ON
14:39:41 - Adding account 'main'
14:39:41 - - Adding balance 99.0001 BTC
14:39:41 - Adding account 'savings'
14:39:41 - - Adding balance 1.1 BTC
14:39:41 - - Adding balance 2.2 USDT
14:39:41 - - Adding balance 3.3 ETH
14:39:41 - Adding account 'trade'
14:39:41 - - Adding balance 0.99962937 BTC
14:39:41 - - Adding balance 1000 USDT
14:39:41 - - Adding balance 10 ETH
14:39:41 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:41 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:42 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:42 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:42 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:42 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:42 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:42 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:42 - Started Issue421Test in 4.324 seconds (JVM running for 5.198)
14:39:42 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:42 - HikariPool-1 - Shutdown initiated...
14:39:42 - HikariPool-1 - Shutdown completed.
14:39:42 - Unexpected error occurred in scheduled task
org.springframework.beans.factory.BeanCreationNotAllowedException: Error creating bean with name 'org.springframework.context.config.internalBeanConfigurerAspect': Singleton bean creation not allowed while singletons of this factory are in destruction (Do not request a bean from a BeanFactory in a destroy method implementation!)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:220)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:322)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory$1.orderedStream(DefaultListableBeanFactory.java:481)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.detectPersistenceExceptionTranslators(PersistenceExceptionTranslationInterceptor.java:167)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:149)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:145)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy145.findByOrderByTimestampAsc(Unknown Source)
	at tech.cassandre.trading.bot.service.dry.TradeServiceDryModeImplementation.getTrades(TradeServiceDryModeImplementation.java:286)
	at tech.cassandre.trading.bot.batch.TradeFlux.getNewValues(TradeFlux.java:64)
	at tech.cassandre.trading.bot.util.base.batch.BaseExternalFlux.update(BaseExternalFlux.java:23)
	at tech.cassandre.trading.bot.configuration.ScheduleAutoConfiguration.tradeFluxUpdate(ScheduleAutoConfiguration.java:83)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.scheduling.support.ScheduledMethodRunnable.run(ScheduledMethodRunnable.java:84)
	at org.springframework.scheduling.support.DelegatingErrorHandlingRunnable.run(DelegatingErrorHandlingRunnable.java:54)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:829)
14:39:42 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:42 - Starting Issue421Test using Java 11.0.17 on repairnator with PID 22128 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:42 - No active profile set, falling back to default profiles: default
14:39:42 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:39:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:42 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:39:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:42 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:39:42 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:42 - HikariPool-2 - Starting...
14:39:42 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:42 - HikariPool-2 - Start completed.
14:39:42 - Successfully acquired change log lock
14:39:42 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:42 - Reading from PUBLIC.DATABASECHANGELOG
14:39:42 - Successfully released change log lock
14:39:42 - Successfully acquired change log lock
Skipping auto-registration
14:39:42 - Skipping auto-registration
14:39:42 - Table EXCHANGE_ACCOUNTS created
14:39:42 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:42 - Table STRATEGIES created
14:39:42 - Auto-increment added to STRATEGIES.ID
14:39:42 - Table POSITIONS created
14:39:42 - Auto-increment added to POSITIONS.ID
14:39:42 - Table ORDERS created
14:39:42 - Auto-increment added to ORDERS.ID
14:39:42 - Table TRADES created
14:39:42 - Auto-increment added to TRADES.ID
14:39:42 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:42 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:42 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:42 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:42 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:42 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:42 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:42 - Index IDX_POSITIONS_POSITION_ID created
14:39:42 - Index IDX_POSITIONS_STATUS created
14:39:42 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:42 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:42 - Index IDX_ORDERS_ORDER_ID created
14:39:42 - Index IDX_TRADES_TRADE_ID created
14:39:42 - Index IDX_TRADES_ORDER_ID created
14:39:42 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 18ms
14:39:42 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:42 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:42 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:42 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:42 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:42 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:42 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:42 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:42 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:42 - Successfully released change log lock
14:39:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:42 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:42 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:42 - Calling Remote Init...
14:39:42 - ExchangeConfiguration - Dry mode is ON
14:39:42 - Adding account 'main'
14:39:42 - - Adding balance 99.0001 BTC
14:39:42 - Adding account 'savings'
14:39:42 - - Adding balance 1.1 BTC
14:39:42 - - Adding balance 2.2 USDT
14:39:42 - - Adding balance 3.3 ETH
14:39:42 - Adding account 'trade'
14:39:42 - - Adding balance 0.99962937 BTC
14:39:42 - - Adding balance 1000 USDT
14:39:42 - - Adding balance 10 ETH
14:39:42 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:42 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:42 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:42 - StrategyConfiguration - Accounts available : 'main/main'.
14:39:42 - StrategyConfiguration - Accounts available : 'savings/savings'.
14:39:42 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:42 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:42 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:42 - Started Issue421Test in 0.777 seconds (JVM running for 6.004)
14:39:42 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

14:39:42 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

14:39:43 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=NEW, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.544 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
14:39:43 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=NEW, cumulativeAmount=null, userReference=null, timestamp=null, trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:39:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:43 - HikariPool-2 - Shutdown initiated...
14:39:43 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
14:39:44.183 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:39:44.190 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:39:44.214 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:39:44.222 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test], using SpringBootContextLoader
14:39:44.224 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue482Test-context.xml] does not exist
14:39:44.224 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue482TestContext.groovy] does not exist
14:39:44.224 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:39:44.225 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: Issue482Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:39:44.257 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]
14:39:44.293 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:39:44.294 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
14:39:44.363 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: using defaults.
14:39:44.364 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:39:44.371 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:39:44.376 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2c78d320, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@132e0cc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@106cc338, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7a67e3c6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cc558c6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@15713d56, org.springframework.test.context.event.EventPublishingTestExecutionListener@63f259c3, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@26ceffa8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@600b90df, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@60129b9a]
14:39:44.378 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6cce16f4 testClass = Issue482Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7efaad5a testClass = Issue482Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@291a7e3c key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue482TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5ba3f27a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@741a8937, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2ea41516, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3e11f9e9, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b8ee4de, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:39:44.435 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6cce16f4 testClass = Issue482Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test@1b955cac, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7efaad5a testClass = Issue482Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@291a7e3c key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue482TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5ba3f27a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@741a8937, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2ea41516, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3e11f9e9, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b8ee4de, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:39:44.447 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:44 - Starting Issue482Test using Java 11.0.17 on repairnator with PID 22454 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:44 - No active profile set, falling back to default profiles: default
14:39:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:45 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
14:39:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:45 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:39:45 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:45 - HikariPool-1 - Starting...
14:39:45 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:45 - HikariPool-1 - Start completed.
14:39:46 - Successfully acquired change log lock
14:39:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:46 - Reading from PUBLIC.DATABASECHANGELOG
14:39:46 - Successfully released change log lock
14:39:46 - Successfully acquired change log lock
Skipping auto-registration
14:39:46 - Skipping auto-registration
14:39:46 - Table EXCHANGE_ACCOUNTS created
14:39:46 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:46 - Table STRATEGIES created
14:39:46 - Auto-increment added to STRATEGIES.ID
14:39:46 - Table POSITIONS created
14:39:46 - Auto-increment added to POSITIONS.ID
14:39:46 - Table ORDERS created
14:39:46 - Auto-increment added to ORDERS.ID
14:39:46 - Table TRADES created
14:39:46 - Auto-increment added to TRADES.ID
14:39:46 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:46 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:46 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:46 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:46 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:46 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:46 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:46 - Index IDX_POSITIONS_POSITION_ID created
14:39:46 - Index IDX_POSITIONS_STATUS created
14:39:46 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:46 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:46 - Index IDX_ORDERS_ORDER_ID created
14:39:46 - Index IDX_TRADES_TRADE_ID created
14:39:46 - Index IDX_TRADES_ORDER_ID created
14:39:46 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:39:46 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:46 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:46 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:46 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:46 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:46 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:46 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:46 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:46 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:39:46 - Successfully released change log lock
14:39:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:46 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:39:46 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:39:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:48 - Calling Remote Init...
14:39:48 - ExchangeConfiguration - Dry mode is ON
14:39:48 - Adding account 'main'
14:39:48 - - Adding balance 99.0001 BTC
14:39:48 - Adding account 'savings'
14:39:48 - - Adding balance 1.1 BTC
14:39:48 - - Adding balance 2.2 USDT
14:39:48 - - Adding balance 3.3 ETH
14:39:48 - Adding account 'trade'
14:39:48 - - Adding balance 0.99962937 BTC
14:39:48 - - Adding balance 1000 USDT
14:39:48 - - Adding balance 10 ETH
14:39:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:48 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:48 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:48 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:48 - Started Issue482Test in 4.289 seconds (JVM running for 5.181)
14:39:48 - UserService - InterruptedException : null
14:39:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:48 - HikariPool-1 - Shutdown initiated...
14:39:48 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:48 - Starting Issue482Test using Java 11.0.17 on repairnator with PID 22454 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:48 - No active profile set, falling back to default profiles: default
14:39:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:48 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
14:39:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:48 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:39:49 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:49 - HikariPool-2 - Starting...
14:39:49 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:49 - HikariPool-2 - Start completed.
14:39:49 - Successfully acquired change log lock
14:39:49 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:49 - Reading from PUBLIC.DATABASECHANGELOG
14:39:49 - Successfully released change log lock
14:39:49 - Successfully acquired change log lock
Skipping auto-registration
14:39:49 - Skipping auto-registration
14:39:49 - Table EXCHANGE_ACCOUNTS created
14:39:49 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:49 - Table STRATEGIES created
14:39:49 - Auto-increment added to STRATEGIES.ID
14:39:49 - Table POSITIONS created
14:39:49 - Auto-increment added to POSITIONS.ID
14:39:49 - Table ORDERS created
14:39:49 - Auto-increment added to ORDERS.ID
14:39:49 - Table TRADES created
14:39:49 - Auto-increment added to TRADES.ID
14:39:49 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:49 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:49 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:49 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:49 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:49 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:49 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:49 - Index IDX_POSITIONS_POSITION_ID created
14:39:49 - Index IDX_POSITIONS_STATUS created
14:39:49 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:49 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:49 - Index IDX_ORDERS_ORDER_ID created
14:39:49 - Index IDX_TRADES_TRADE_ID created
14:39:49 - Index IDX_TRADES_ORDER_ID created
14:39:49 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 28ms
14:39:49 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:49 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:49 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:49 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:49 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:49 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:49 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:49 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:49 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:49 - Successfully released change log lock
14:39:49 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:49 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:49 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:49 - Calling Remote Init...
14:39:49 - ExchangeConfiguration - Dry mode is ON
14:39:49 - Adding account 'main'
14:39:49 - - Adding balance 99.0001 BTC
14:39:49 - Adding account 'savings'
14:39:49 - - Adding balance 1.1 BTC
14:39:49 - - Adding balance 2.2 USDT
14:39:49 - - Adding balance 3.3 ETH
14:39:49 - Adding account 'trade'
14:39:49 - - Adding balance 0.99962937 BTC
14:39:49 - - Adding balance 1000 USDT
14:39:49 - - Adding balance 10 ETH
14:39:49 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:49 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
14:39:49 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:49 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:49 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:49 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:49 - Started Issue482Test in 0.835 seconds (JVM running for 6.039)
14:39:49 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-17T14:39:49.626222Z[Etc/UTC])

14:39:50 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

14:39:51 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-17T14:39:51.416642Z[Etc/UTC])

14:39:53 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-17T14:39:53.216803Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.183 s - in tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
14:39:53 - TradeService - InterruptedException : null
14:39:53 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:53 - HikariPool-2 - Shutdown initiated...
14:39:53 - HikariPool-2 - Shutdown completed.
14:39:53 - TradeService - InterruptedException : null
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
14:39:54.227 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:39:54.234 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:39:54.257 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:39:54.264 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test], using SpringBootContextLoader
14:39:54.266 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue483Test-context.xml] does not exist
14:39:54.267 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue483TestContext.groovy] does not exist
14:39:54.267 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:39:54.267 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: Issue483Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:39:54.299 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]
14:39:54.336 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:39:54.337 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
14:39:54.389 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: using defaults.
14:39:54.390 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:39:54.395 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:39:54.400 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@132e0cc, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7b205dbd, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7a67e3c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6cc558c6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@15713d56, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@63f259c3, org.springframework.test.context.event.EventPublishingTestExecutionListener@26ceffa8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@600b90df, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60129b9a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@78d6692f]
14:39:54.402 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7efaad5a testClass = Issue483Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@291a7e3c testClass = Issue483Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@ca30bc1 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue483TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@58d75e99, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@306e95ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3a44431a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1de5f259, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@27f981c6, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:39:54.441 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7efaad5a testClass = Issue483Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test@676cf48, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@291a7e3c testClass = Issue483Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@ca30bc1 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue483TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@58d75e99, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@306e95ec, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3a44431a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1de5f259, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@27f981c6, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:39:54.453 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:54 - Starting Issue483Test using Java 11.0.17 on repairnator with PID 22925 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:54 - No active profile set, falling back to default profiles: default
14:39:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:55 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
14:39:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:55 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
14:39:55 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:55 - HikariPool-1 - Starting...
14:39:55 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:55 - HikariPool-1 - Start completed.
14:39:56 - Successfully acquired change log lock
14:39:56 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:56 - Reading from PUBLIC.DATABASECHANGELOG
14:39:56 - Successfully released change log lock
14:39:56 - Successfully acquired change log lock
Skipping auto-registration
14:39:56 - Skipping auto-registration
14:39:56 - Table EXCHANGE_ACCOUNTS created
14:39:56 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:56 - Table STRATEGIES created
14:39:56 - Auto-increment added to STRATEGIES.ID
14:39:56 - Table POSITIONS created
14:39:56 - Auto-increment added to POSITIONS.ID
14:39:56 - Table ORDERS created
14:39:56 - Auto-increment added to ORDERS.ID
14:39:56 - Table TRADES created
14:39:56 - Auto-increment added to TRADES.ID
14:39:56 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:56 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:56 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:56 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:56 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:56 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:56 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:56 - Index IDX_POSITIONS_POSITION_ID created
14:39:56 - Index IDX_POSITIONS_STATUS created
14:39:56 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:56 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:56 - Index IDX_ORDERS_ORDER_ID created
14:39:56 - Index IDX_TRADES_TRADE_ID created
14:39:56 - Index IDX_TRADES_ORDER_ID created
14:39:56 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:39:56 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:56 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:56 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:56 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:56 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:56 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:56 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:56 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:56 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:39:56 - Successfully released change log lock
14:39:56 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:56 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:39:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:39:56 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:57 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:58 - Calling Remote Init...
14:39:58 - ExchangeConfiguration - Dry mode is OFF
14:39:58 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:58 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:39:58 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:58 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:58 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:58 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:58 - Started Issue483Test in 4.323 seconds (JVM running for 5.054)
14:39:58 - UserService - InterruptedException : null
14:39:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:58 - HikariPool-1 - Shutdown initiated...
14:39:58 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:39:58 - Starting Issue483Test using Java 11.0.17 on repairnator with PID 22925 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:39:58 - No active profile set, falling back to default profiles: default
14:39:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:58 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:39:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:39:58 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:39:59 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:39:59 - HikariPool-2 - Starting...
14:39:59 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:39:59 - HikariPool-2 - Start completed.
14:39:59 - Successfully acquired change log lock
14:39:59 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:39:59 - Reading from PUBLIC.DATABASECHANGELOG
14:39:59 - Successfully released change log lock
14:39:59 - Successfully acquired change log lock
Skipping auto-registration
14:39:59 - Skipping auto-registration
14:39:59 - Table EXCHANGE_ACCOUNTS created
14:39:59 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:39:59 - Table STRATEGIES created
14:39:59 - Auto-increment added to STRATEGIES.ID
14:39:59 - Table POSITIONS created
14:39:59 - Auto-increment added to POSITIONS.ID
14:39:59 - Table ORDERS created
14:39:59 - Auto-increment added to ORDERS.ID
14:39:59 - Table TRADES created
14:39:59 - Auto-increment added to TRADES.ID
14:39:59 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:39:59 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:39:59 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:39:59 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:39:59 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:39:59 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:39:59 - Index IDX_STRATEGIES_STRATEGY_ID created
14:39:59 - Index IDX_POSITIONS_POSITION_ID created
14:39:59 - Index IDX_POSITIONS_STATUS created
14:39:59 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:39:59 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:39:59 - Index IDX_ORDERS_ORDER_ID created
14:39:59 - Index IDX_TRADES_TRADE_ID created
14:39:59 - Index IDX_TRADES_ORDER_ID created
14:39:59 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:39:59 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:39:59 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:39:59 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:39:59 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:39:59 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:39:59 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:39:59 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:39:59 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:39:59 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:39:59 - Successfully released change log lock
14:39:59 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:39:59 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:39:59 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:39:59 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:39:59 - Calling Remote Init...
14:39:59 - ExchangeConfiguration - Dry mode is OFF
14:39:59 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:39:59 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:39:59 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:39:59 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:39:59 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:39:59 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:39:59 - Started Issue483Test in 0.851 seconds (JVM running for 5.927)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.46 s - in tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
14:39:59 - UserService - InterruptedException : null
14:39:59 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:39:59 - HikariPool-2 - Shutdown initiated...
14:39:59 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
14:40:00.672 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:40:00.679 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:40:00.710 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:40:00.723 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test], using SpringBootContextLoader
14:40:00.726 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue510Test-context.xml] does not exist
14:40:00.726 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue510TestContext.groovy] does not exist
14:40:00.726 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:40:00.727 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: Issue510Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:40:00.796 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:40:00.796 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
14:40:00.850 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: using defaults.
14:40:00.850 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:40:00.855 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:40:00.861 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5be46f9d, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3f91b517, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7a220c9a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2421cc4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@30c93896, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@59a008ba, org.springframework.test.context.event.EventPublishingTestExecutionListener@338c99c8, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@21ba0741, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@58ce9668, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@172b013, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@56673b2c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2796aeae, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@b4711e2]
14:40:00.862 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@d41f816 testClass = Issue510Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5c2375a9 testClass = Issue510Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6da21078, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56cdfb3b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@543588e6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74751b3, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@ffaa6af, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:40:00.904 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@d41f816 testClass = Issue510Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test@6b88ca8c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5c2375a9 testClass = Issue510Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6da21078, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@56cdfb3b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@543588e6, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@74751b3, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@ffaa6af, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:40:00.917 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:40:00.920 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:40:01 - Starting Issue510Test using Java 11.0.17 on repairnator with PID 23186 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:40:01 - The following profiles are active: schedule-disabled
14:40:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:01 - Finished Spring Data repository scanning in 148 ms. Found 5 JPA repository interfaces.
14:40:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:01 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
14:40:02 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:40:02 - HikariPool-1 - Starting...
14:40:02 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:40:02 - HikariPool-1 - Start completed.
14:40:02 - Successfully acquired change log lock
14:40:03 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:40:03 - Reading from PUBLIC.DATABASECHANGELOG
14:40:03 - Successfully released change log lock
14:40:03 - Successfully acquired change log lock
Skipping auto-registration
14:40:03 - Skipping auto-registration
14:40:03 - Table EXCHANGE_ACCOUNTS created
14:40:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:40:03 - Table STRATEGIES created
14:40:03 - Auto-increment added to STRATEGIES.ID
14:40:03 - Table POSITIONS created
14:40:03 - Auto-increment added to POSITIONS.ID
14:40:03 - Table ORDERS created
14:40:03 - Auto-increment added to ORDERS.ID
14:40:03 - Table TRADES created
14:40:03 - Auto-increment added to TRADES.ID
14:40:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:40:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:40:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:40:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:40:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:40:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:40:03 - Index IDX_STRATEGIES_STRATEGY_ID created
14:40:03 - Index IDX_POSITIONS_POSITION_ID created
14:40:03 - Index IDX_POSITIONS_STATUS created
14:40:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:40:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:40:03 - Index IDX_ORDERS_ORDER_ID created
14:40:03 - Index IDX_TRADES_TRADE_ID created
14:40:03 - Index IDX_TRADES_ORDER_ID created
14:40:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
14:40:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:40:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:40:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:40:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:40:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:40:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:40:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:40:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:40:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:40:03 - Successfully released change log lock
14:40:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:40:03 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:40:03 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:40:03 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:40:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:40:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:40:04 - Calling Remote Init...
14:40:04 - ExchangeConfiguration - Dry mode is OFF
14:40:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:40:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:40:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:40:05 - StrategyConfiguration - Accounts available : 'null/null'.
14:40:05 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:40:06 - Started Issue510Test in 5.178 seconds (JVM running for 6.009)
14:40:06 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:40:06 - HikariPool-1 - Shutdown initiated...
14:40:06 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:40:06 - Starting Issue510Test using Java 11.0.17 on repairnator with PID 23186 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:40:06 - The following profiles are active: schedule-disabled
14:40:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:06 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
14:40:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:06 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:40:06 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:40:06 - HikariPool-2 - Starting...
14:40:06 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:40:06 - HikariPool-2 - Start completed.
14:40:06 - Successfully acquired change log lock
14:40:06 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:40:06 - Reading from PUBLIC.DATABASECHANGELOG
14:40:06 - Successfully released change log lock
14:40:06 - Successfully acquired change log lock
Skipping auto-registration
14:40:06 - Skipping auto-registration
14:40:06 - Table EXCHANGE_ACCOUNTS created
14:40:06 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:40:06 - Table STRATEGIES created
14:40:06 - Auto-increment added to STRATEGIES.ID
14:40:06 - Table POSITIONS created
14:40:06 - Auto-increment added to POSITIONS.ID
14:40:06 - Table ORDERS created
14:40:06 - Auto-increment added to ORDERS.ID
14:40:06 - Table TRADES created
14:40:06 - Auto-increment added to TRADES.ID
14:40:06 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:40:06 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:40:06 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:40:06 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:40:06 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:40:06 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:40:06 - Index IDX_STRATEGIES_STRATEGY_ID created
14:40:06 - Index IDX_POSITIONS_POSITION_ID created
14:40:06 - Index IDX_POSITIONS_STATUS created
14:40:06 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:40:06 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:40:06 - Index IDX_ORDERS_ORDER_ID created
14:40:06 - Index IDX_TRADES_TRADE_ID created
14:40:06 - Index IDX_TRADES_ORDER_ID created
14:40:06 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
14:40:06 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:40:06 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:40:06 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:40:06 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:40:06 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:40:06 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:40:06 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
14:40:06 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:40:06 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
14:40:06 - Successfully released change log lock
14:40:06 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:40:06 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:40:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:40:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:40:06 - Calling Remote Init...
14:40:06 - ExchangeConfiguration - Dry mode is OFF
14:40:06 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:40:06 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:40:06 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:40:06 - StrategyConfiguration - Accounts available : 'null/null'.
14:40:06 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:40:07 - Started Issue510Test in 1.439 seconds (JVM running for 7.468)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.994 s - in tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
14:40:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:40:07 - HikariPool-2 - Shutdown initiated...
14:40:07 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
14:40:08.659 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:40:08.666 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:40:08.689 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:40:08.696 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test], using SpringBootContextLoader
14:40:08.699 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue509Test-context.xml] does not exist
14:40:08.699 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue509TestContext.groovy] does not exist
14:40:08.699 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: no resource found for suffixes {-context.xml, Context.groovy}.
14:40:08.700 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: Issue509Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:40:08.766 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
14:40:08.766 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
14:40:08.820 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: using defaults.
14:40:08.820 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:40:08.825 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:40:08.830 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@338c99c8, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@21ba0741, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@58ce9668, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@172b013, org.springframework.test.context.support.DirtiesContextTestExecutionListener@56673b2c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2796aeae, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@b4711e2, org.springframework.test.context.event.EventPublishingTestExecutionListener@1fa1cab1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@70f02c32, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@51fadaff, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@401f7633, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@31ff43be, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5b6ec132]
14:40:08.832 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@27216cd testClass = Issue509Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@558bdf1f testClass = Issue509Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@169e6180, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47987356, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bd4937b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@209da20d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@31fa1761, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
14:40:08.872 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@27216cd testClass = Issue509Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test@53941c2f, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@558bdf1f testClass = Issue509Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@169e6180, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47987356, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bd4937b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@209da20d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@31fa1761, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:40:08.884 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
14:40:08.887 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:40:09 - Starting Issue509Test using Java 11.0.17 on repairnator with PID 23538 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:40:09 - The following profiles are active: schedule-disabled
14:40:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:09 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
14:40:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:09 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
14:40:10 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:40:10 - HikariPool-1 - Starting...
14:40:10 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:40:10 - HikariPool-1 - Start completed.
14:40:10 - Successfully acquired change log lock
14:40:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:40:10 - Reading from PUBLIC.DATABASECHANGELOG
14:40:11 - Successfully released change log lock
14:40:11 - Successfully acquired change log lock
Skipping auto-registration
14:40:11 - Skipping auto-registration
14:40:11 - Table EXCHANGE_ACCOUNTS created
14:40:11 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:40:11 - Table STRATEGIES created
14:40:11 - Auto-increment added to STRATEGIES.ID
14:40:11 - Table POSITIONS created
14:40:11 - Auto-increment added to POSITIONS.ID
14:40:11 - Table ORDERS created
14:40:11 - Auto-increment added to ORDERS.ID
14:40:11 - Table TRADES created
14:40:11 - Auto-increment added to TRADES.ID
14:40:11 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:40:11 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:40:11 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:40:11 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:40:11 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:40:11 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:40:11 - Index IDX_STRATEGIES_STRATEGY_ID created
14:40:11 - Index IDX_POSITIONS_POSITION_ID created
14:40:11 - Index IDX_POSITIONS_STATUS created
14:40:11 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:40:11 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:40:11 - Index IDX_ORDERS_ORDER_ID created
14:40:11 - Index IDX_TRADES_TRADE_ID created
14:40:11 - Index IDX_TRADES_ORDER_ID created
14:40:11 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
14:40:11 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:40:11 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:40:11 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:40:11 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:40:11 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:40:11 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:40:11 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:40:11 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:40:11 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:40:11 - Successfully released change log lock
14:40:11 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:40:11 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:40:11 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:40:11 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:40:12 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:40:12 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:40:12 - Calling Remote Init...
14:40:12 - ExchangeConfiguration - Dry mode is OFF
14:40:12 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:40:12 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:40:13 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:40:13 - StrategyConfiguration - Accounts available : 'null/null'.
14:40:13 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:40:13 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:14 - Started Issue509Test in 5.359 seconds (JVM running for 6.178)
14:40:14 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:40:14 - HikariPool-1 - Shutdown initiated...
14:40:14 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:40:14 - Starting Issue509Test using Java 11.0.17 on repairnator with PID 23538 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
14:40:14 - The following profiles are active: schedule-disabled
14:40:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:14 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
14:40:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:14 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
14:40:14 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
14:40:14 - HikariPool-2 - Starting...
14:40:14 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
14:40:14 - HikariPool-2 - Start completed.
14:40:14 - Successfully acquired change log lock
14:40:14 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:14 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:40:14 - Reading from PUBLIC.DATABASECHANGELOG
14:40:14 - Successfully released change log lock
14:40:14 - Successfully acquired change log lock
Skipping auto-registration
14:40:14 - Skipping auto-registration
14:40:14 - Table EXCHANGE_ACCOUNTS created
14:40:14 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:40:14 - Table STRATEGIES created
14:40:14 - Auto-increment added to STRATEGIES.ID
14:40:14 - Table POSITIONS created
14:40:14 - Auto-increment added to POSITIONS.ID
14:40:14 - Table ORDERS created
14:40:14 - Auto-increment added to ORDERS.ID
14:40:14 - Table TRADES created
14:40:14 - Auto-increment added to TRADES.ID
14:40:14 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:40:14 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:40:14 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:40:14 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:40:14 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:40:14 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:40:14 - Index IDX_STRATEGIES_STRATEGY_ID created
14:40:14 - Index IDX_POSITIONS_POSITION_ID created
14:40:14 - Index IDX_POSITIONS_STATUS created
14:40:14 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:40:14 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:40:14 - Index IDX_ORDERS_ORDER_ID created
14:40:14 - Index IDX_TRADES_TRADE_ID created
14:40:14 - Index IDX_TRADES_ORDER_ID created
14:40:14 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
14:40:14 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:40:14 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:40:14 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:40:14 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:40:14 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:40:14 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:40:14 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:40:14 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:40:14 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:40:14 - Successfully released change log lock
14:40:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:40:14 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:40:14 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:40:14 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:40:14 - Calling Remote Init...
14:40:14 - ExchangeConfiguration - Dry mode is OFF
14:40:14 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:40:14 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
14:40:14 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:40:15 - StrategyConfiguration - Accounts available : 'null/null'.
14:40:15 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
14:40:15 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:15 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:15 - Started Issue509Test in 1.384 seconds (JVM running for 7.582)
14:40:16 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:16 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:17 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:17 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:18 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:18 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:19 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:19 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:20 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

14:40:20 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=60, positionId=60, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605cee8ab5ab390006baef6a, openingOrder=OrderDTO(id=106, orderId=605cee8ab5ab390006baef6a, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T20:11:54.479442Z[Etc/UTC], trades=[TradeDTO(id=133, tradeId=605cee8a2e113d2923e554f0, type=ASK, orderId=605cee8ab5ab390006baef6a, currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52335.70000000 USDT, fee=0.05233570 USDT, userReference=null, timestamp=2021-03-25T20:11:54Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 12.133 s - in tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
14:40:20 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:40:20 - HikariPool-2 - Shutdown initiated...
14:40:20 - HikariPool-2 - Shutdown completed.
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 92, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter >--
[INFO] Building Trading bot spring boot starter 4.1.2-SNAPSHOT            [3/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter/starter/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-test-autoconfigure >--
[INFO] Building Trading bot spring boot autoconfigure test 4.1.2-SNAPSHOT [4/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 7 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 7 source files to /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
14:40:22.105 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
14:40:22.112 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
14:40:22.136 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
14:40:22.144 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest], using SpringBootContextLoader
14:40:22.146 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: class path resource [tech/cassandre/trading/bot/test/mock/TickerFluxMockTest-context.xml] does not exist
14:40:22.147 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: class path resource [tech/cassandre/trading/bot/test/mock/TickerFluxMockTestContext.groovy] does not exist
14:40:22.147 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: no resource found for suffixes {-context.xml, Context.groovy}.
14:40:22.147 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: TickerFluxMockTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
14:40:22.180 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]
14:40:22.217 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/test-classes/tech/cassandre/trading/bot/test/CassandreTradingBot.class]
14:40:22.218 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.test.CassandreTradingBot for test class tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
14:40:22.270 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: using defaults.
14:40:22.270 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
14:40:22.276 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
14:40:22.281 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7c8c9a05, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@d41f816, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@60129b9a, org.springframework.test.context.support.DirtiesContextTestExecutionListener@78d6692f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a55af6b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3d9c13b5, org.springframework.test.context.event.EventPublishingTestExecutionListener@492691d7, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@27216cd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@558bdf1f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@8576fa0, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7582ff54, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@67545b57, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@6c2c1385]
14:40:22.284 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4ae9cfc1 testClass = TickerFluxMockTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@512baff6 testClass = TickerFluxMockTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.test.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@632ceb35 key = [tech.cassandre.trading.bot.test.mock.TickerFluxMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bd4937b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@58d75e99, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2805d709, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@316bcf94, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@26e356f0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@548ad73b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
14:40:22.296 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4ae9cfc1 testClass = TickerFluxMockTest, testInstance = tech.cassandre.trading.bot.test.mock.TickerFluxMockTest@24ba9639, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@512baff6 testClass = TickerFluxMockTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.test.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@632ceb35 key = [tech.cassandre.trading.bot.test.mock.TickerFluxMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7bd4937b, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@58d75e99, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2805d709, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@316bcf94, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@26e356f0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@548ad73b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
14:40:22.309 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
14:40:22 - Starting TickerFluxMockTest using Java 11.0.17 on repairnator with PID 24057 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure)
14:40:22 - No active profile set, falling back to default profiles: default
14:40:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:22 - Finished Spring Data repository scanning in 5 ms. Found 0 JPA repository interfaces.
14:40:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
14:40:23 - Finished Spring Data repository scanning in 105 ms. Found 5 JPA repository interfaces.
14:40:23 - HikariPool-1 - Starting...
14:40:23 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
14:40:23 - HikariPool-1 - Start completed.
14:40:24 - Successfully acquired change log lock
14:40:26 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
14:40:26 - Reading from PUBLIC.DATABASECHANGELOG
14:40:26 - Table EXCHANGE_ACCOUNTS created
14:40:26 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
14:40:26 - Table STRATEGIES created
14:40:26 - Auto-increment added to STRATEGIES.ID
14:40:26 - Table POSITIONS created
14:40:26 - Auto-increment added to POSITIONS.ID
14:40:26 - Table ORDERS created
14:40:26 - Auto-increment added to ORDERS.ID
14:40:26 - Table TRADES created
14:40:26 - Auto-increment added to TRADES.ID
14:40:26 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
14:40:26 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
14:40:26 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
14:40:26 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
14:40:26 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
14:40:26 - Foreign key constraint added to TRADES (FK_ORDER_ID)
14:40:26 - Index IDX_STRATEGIES_STRATEGY_ID created
14:40:26 - Index IDX_POSITIONS_POSITION_ID created
14:40:26 - Index IDX_POSITIONS_STATUS created
14:40:26 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
14:40:26 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
14:40:26 - Index IDX_ORDERS_ORDER_ID created
14:40:26 - Index IDX_TRADES_TRADE_ID created
14:40:26 - Index IDX_TRADES_ORDER_ID created
14:40:26 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 29ms
14:40:26 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
14:40:26 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
14:40:26 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
14:40:26 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
14:40:26 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
14:40:26 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
14:40:26 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
14:40:26 - Columns FORCE_CLOSING(boolean) added to POSITIONS
14:40:26 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
14:40:26 - Successfully released change log lock
14:40:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
14:40:26 - HHH000412: Hibernate ORM core version 5.4.29.Final
14:40:26 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
14:40:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
14:40:27 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
14:40:27 - Initialized JPA EntityManagerFactory for persistence unit 'default'
14:40:27 - Adding tests data from tickers-BTC-USDT.tsv
14:40:27 - Adding tests data from tickers-ETH-BTC.tsv
14:40:27 - Adding tests data from tickers-KCS-USDT.csv
14:40:28 - Calling Remote Init...
14:40:28 - ExchangeConfiguration - Dry mode is ON
14:40:28 - Adding account 'trade'
14:40:28 - - Adding balance 0.99962937 BTC
14:40:28 - - Adding balance 1000 USDT
14:40:28 - - Adding balance 10 ETH
14:40:28 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
14:40:28 - ExchangeConfiguration - Supported currency pairs : BTC/USDT, ETH/BTC 
14:40:28 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
14:40:28 - StrategyConfiguration - Accounts available : 'trade/trade'.
14:40:28 - StrategyConfiguration - Running strategy '1/Testable strategy' (requires BTC/USDT, ETH/BTC).
14:40:28 - No TaskScheduler/ScheduledExecutorService bean found for scheduled processing
14:40:28 - Started TickerFluxMockTest in 6.075 seconds (JVM running for 6.821)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.42 s - in tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
14:40:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
14:40:37 - HikariPool-1 - Shutdown initiated...
14:40:37 - HikariPool-1 - Shutdown completed.
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-test >--
[INFO] Building Trading bot spring boot starter test 4.1.2-SNAPSHOT       [5/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter-test/starter/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-basic-archetype >--
[INFO] Building Cassandre trading bot basic archetype 4.1.2-SNAPSHOT      [6/7]
[INFO] --------------------------[ maven-archetype ]---------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Deleting /home/gabsko/breaking-updates/trading-bot-archetypes/basic-archetype/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 12 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 2 resources
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype >--
[INFO] Building Cassandre trading bot basic ta4j archetype 4.1.2-SNAPSHOT [7/7]
[INFO] --------------------------[ maven-archetype ]---------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Deleting /home/gabsko/breaking-updates/trading-bot-archetypes/basic-ta4j-archetype/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 12 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 2 resources
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Cassandre trading bot 4.1.2-SNAPSHOT:
[INFO] 
[INFO] Cassandre trading bot .............................. SUCCESS [  0.067 s]
[INFO] Trading bot spring boot autoconfigure .............. SUCCESS [15:56 min]
[INFO] Trading bot spring boot starter .................... SUCCESS [  0.058 s]
[INFO] Trading bot spring boot autoconfigure test ......... SUCCESS [ 16.610 s]
[INFO] Trading bot spring boot starter test ............... SUCCESS [  0.038 s]
[INFO] Cassandre trading bot basic archetype .............. SUCCESS [  0.059 s]
[INFO] Cassandre trading bot basic ta4j archetype ......... SUCCESS [  0.009 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  16:13 min
[INFO] Finished at: 2023-01-17T14:40:37Z
[INFO] ------------------------------------------------------------------------
