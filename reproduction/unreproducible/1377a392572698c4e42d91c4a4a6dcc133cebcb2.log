[INFO] Scanning for projects...
[INFO] Inspecting build with total of 7 modules...
[INFO] Installing Nexus Staging features:
[INFO]   ... total of 7 executions of maven-deploy-plugin replaced with nexus-staging-maven-plugin
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] Cassandre trading bot                                              [pom]
[INFO] Trading bot spring boot autoconfigure                              [jar]
[INFO] Trading bot spring boot starter                                    [jar]
[INFO] Trading bot spring boot autoconfigure test                         [jar]
[INFO] Trading bot spring boot starter test                               [jar]
[INFO] Cassandre trading bot basic archetype                  [maven-archetype]
[INFO] Cassandre trading bot basic ta4j archetype             [maven-archetype]
[INFO] 
[INFO] ------< tech.cassandre.trading.bot:cassandre-trading-bot-project >------
[INFO] Building Cassandre trading bot 4.2.2-SNAPSHOT                      [1/7]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-project ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-autoconfigure >--
[INFO] Building Trading bot spring boot autoconfigure 4.2.2-SNAPSHOT      [2/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] Downloading from central: https://repo.maven.apache.org/maven2/org/knowm/xchange/xchange-coinbasepro/5.0.8/xchange-coinbasepro-5.0.8.jar
[INFO] Downloaded from central: https://repo.maven.apache.org/maven2/org/knowm/xchange/xchange-coinbasepro/5.0.8/xchange-coinbasepro-5.0.8.jar (97 kB at 230 kB/s)
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target
[INFO] 
[INFO] --- lombok-maven-plugin:1.18.20.0:delombok (default) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Delombok complete.
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 5 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 120 source files to /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/classes
[INFO] /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/src/main/java/tech/cassandre/trading/bot/service/xchange/TradeServiceXChangeImplementation.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/src/main/java/tech/cassandre/trading/bot/service/xchange/TradeServiceXChangeImplementation.java: Recompile with -Xlint:deprecation for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 11 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 145 source files to /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes
[WARNING] /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/src/test/java/tech/cassandre/trading/bot/issues/v4_2_1/Issue558TestMock.java:[32,58] unchecked generic array creation for varargs parameter of type java.util.List<org.knowm.xchange.dto.marketdata.Ticker>[]
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-autoconfigure ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running tech.cassandre.trading.bot.ta4j.BarContextTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.075 s - in tech.cassandre.trading.bot.ta4j.BarContextTest
[INFO] Running tech.cassandre.trading.bot.ta4j.DurationBarAggregatorTest
15:39:35.263 [main] DEBUG reactor.util.Loggers$LoggerFactory - Using Slf4j logging framework
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.187 s - in tech.cassandre.trading.bot.ta4j.DurationBarAggregatorTest
[INFO] Running tech.cassandre.trading.bot.test.domain.OrderTest
15:39:36.305 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:39:36.312 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:39:36.336 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.OrderTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:39:36.343 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.OrderTest], using SpringBootContextLoader
15:39:36.345 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: class path resource [tech/cassandre/trading/bot/test/domain/OrderTest-context.xml] does not exist
15:39:36.346 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: class path resource [tech/cassandre/trading/bot/test/domain/OrderTestContext.groovy] does not exist
15:39:36.346 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:39:36.346 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.OrderTest]: OrderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:39:36.416 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:39:36.416 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.OrderTest
15:39:36.472 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.OrderTest]: using defaults.
15:39:36.472 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:39:36.478 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:39:36.483 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@62010f5c, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@51fadaff, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@401f7633, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@31ff43be, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5b6ec132, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5c44c582, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@67d18ed7, org.springframework.test.context.event.EventPublishingTestExecutionListener@2c78d320, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6cc558c6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@15713d56]
15:39:36.485 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@74589991 testClass = OrderTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@146dfe6 testClass = OrderTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1da2cb77, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a530d0a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2b503c, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d0a1059, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7bab3f1a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@145eaa29], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:39:36.527 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@74589991 testClass = OrderTest, testInstance = tech.cassandre.trading.bot.test.domain.OrderTest@27d4a09, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@146dfe6 testClass = OrderTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1da2cb77, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@a530d0a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4f2b503c, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d0a1059, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7bab3f1a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@145eaa29], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:39:36.540 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:39:36.543 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:36 - Starting OrderTest using Java 11.0.17 on repairnator with PID 20348 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:36 - The following profiles are active: schedule-disabled
15:39:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:37 - Finished Spring Data repository scanning in 119 ms. Found 5 JPA repository interfaces.
15:39:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:37 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:39:37 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:37 - HikariPool-1 - Starting...
15:39:37 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:37 - HikariPool-1 - Start completed.
15:39:38 - Successfully acquired change log lock
15:39:38 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:38 - Reading from PUBLIC.DATABASECHANGELOG
15:39:38 - Successfully released change log lock
15:39:38 - Successfully acquired change log lock
Skipping auto-registration
15:39:38 - Skipping auto-registration
15:39:38 - Table EXCHANGE_ACCOUNTS created
15:39:38 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:38 - Table STRATEGIES created
15:39:38 - Auto-increment added to STRATEGIES.ID
15:39:38 - Table POSITIONS created
15:39:38 - Auto-increment added to POSITIONS.ID
15:39:38 - Table ORDERS created
15:39:38 - Auto-increment added to ORDERS.ID
15:39:38 - Table TRADES created
15:39:38 - Auto-increment added to TRADES.ID
15:39:38 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:38 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:38 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:38 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:38 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:38 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:38 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:38 - Index IDX_POSITIONS_POSITION_ID created
15:39:38 - Index IDX_POSITIONS_STATUS created
15:39:38 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:38 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:38 - Index IDX_ORDERS_ORDER_ID created
15:39:38 - Index IDX_TRADES_TRADE_ID created
15:39:38 - Index IDX_TRADES_ORDER_ID created
15:39:38 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:39:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:39:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:39:38 - Successfully released change log lock
15:39:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:38 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:39:38 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:39:38 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:40 - Calling Remote Init...
15:39:40 - ExchangeConfiguration - Dry mode is OFF
15:39:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:40 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:40 - Started OrderTest in 4.059 seconds (JVM running for 4.878)
15:39:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:40 - HikariPool-1 - Shutdown initiated...
15:39:40 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:40 - Starting OrderTest using Java 11.0.17 on repairnator with PID 20348 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:40 - The following profiles are active: schedule-disabled
15:39:40 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:40 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:39:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:40 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:39:40 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:40 - HikariPool-2 - Starting...
15:39:40 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:40 - HikariPool-2 - Start completed.
15:39:40 - Successfully acquired change log lock
15:39:40 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:40 - Reading from PUBLIC.DATABASECHANGELOG
15:39:41 - Successfully released change log lock
15:39:41 - Successfully acquired change log lock
Skipping auto-registration
15:39:41 - Skipping auto-registration
15:39:41 - Table EXCHANGE_ACCOUNTS created
15:39:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:41 - Table STRATEGIES created
15:39:41 - Auto-increment added to STRATEGIES.ID
15:39:41 - Table POSITIONS created
15:39:41 - Auto-increment added to POSITIONS.ID
15:39:41 - Table ORDERS created
15:39:41 - Auto-increment added to ORDERS.ID
15:39:41 - Table TRADES created
15:39:41 - Auto-increment added to TRADES.ID
15:39:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:41 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:41 - Index IDX_POSITIONS_POSITION_ID created
15:39:41 - Index IDX_POSITIONS_STATUS created
15:39:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:41 - Index IDX_ORDERS_ORDER_ID created
15:39:41 - Index IDX_TRADES_TRADE_ID created
15:39:41 - Index IDX_TRADES_ORDER_ID created
15:39:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 16ms
15:39:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:39:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:39:41 - Successfully released change log lock
15:39:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:41 - Calling Remote Init...
15:39:41 - ExchangeConfiguration - Dry mode is OFF
15:39:41 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:41 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:41 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:41 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:41 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:41 - Started OrderTest in 0.781 seconds (JVM running for 5.684)
15:39:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:41 - HikariPool-2 - Shutdown initiated...
15:39:41 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:41 - Starting OrderTest using Java 11.0.17 on repairnator with PID 20348 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:41 - The following profiles are active: schedule-disabled
15:39:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:41 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
15:39:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:41 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:39:41 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:41 - HikariPool-3 - Starting...
15:39:41 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:41 - HikariPool-3 - Start completed.
15:39:41 - Successfully acquired change log lock
15:39:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:41 - Reading from PUBLIC.DATABASECHANGELOG
15:39:41 - Successfully released change log lock
15:39:41 - Successfully acquired change log lock
Skipping auto-registration
15:39:41 - Skipping auto-registration
15:39:41 - Table EXCHANGE_ACCOUNTS created
15:39:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:41 - Table STRATEGIES created
15:39:41 - Auto-increment added to STRATEGIES.ID
15:39:41 - Table POSITIONS created
15:39:41 - Auto-increment added to POSITIONS.ID
15:39:41 - Table ORDERS created
15:39:41 - Auto-increment added to ORDERS.ID
15:39:41 - Table TRADES created
15:39:41 - Auto-increment added to TRADES.ID
15:39:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:41 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:41 - Index IDX_POSITIONS_POSITION_ID created
15:39:41 - Index IDX_POSITIONS_STATUS created
15:39:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:41 - Index IDX_ORDERS_ORDER_ID created
15:39:41 - Index IDX_TRADES_TRADE_ID created
15:39:41 - Index IDX_TRADES_ORDER_ID created
15:39:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 14ms
15:39:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:39:41 - Successfully released change log lock
15:39:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:42 - Calling Remote Init...
15:39:42 - ExchangeConfiguration - Dry mode is OFF
15:39:42 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:42 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:42 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:42 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:42 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:42 - Started OrderTest in 0.611 seconds (JVM running for 6.439)
15:39:42 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=BACKUP_ORDER_03, type=ASK, strategy=StrategyDTO(id=1, strategyId=001, type=null, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:39:42 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_03, order=Order(id=11, orderId=BACKUP_ORDER_03, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00002000 ETH, averagePrice=1.00003000 BTC, limitPrice=1.00005000 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002000 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=TRADE MY_REF_3, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:39:43 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=11, orderId=BACKUP_ORDER_03, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00002 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.974 s - in tech.cassandre.trading.bot.test.domain.OrderTest
15:39:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:43 - HikariPool-3 - Shutdown initiated...
15:39:43 - HikariPool-3 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.TradeTest
15:39:43.969 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:39:43.977 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:39:44.001 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.TradeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:39:44.008 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.TradeTest], using SpringBootContextLoader
15:39:44.011 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: class path resource [tech/cassandre/trading/bot/test/domain/TradeTest-context.xml] does not exist
15:39:44.011 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: class path resource [tech/cassandre/trading/bot/test/domain/TradeTestContext.groovy] does not exist
15:39:44.011 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:39:44.012 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.TradeTest]: TradeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:39:44.079 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:39:44.080 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.TradeTest
15:39:44.131 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.TradeTest]: using defaults.
15:39:44.132 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:39:44.137 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:39:44.142 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@51fadaff, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@401f7633, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@31ff43be, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5b6ec132, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c44c582, org.springframework.test.context.transaction.TransactionalTestExecutionListener@67d18ed7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2c78d320, org.springframework.test.context.event.EventPublishingTestExecutionListener@132e0cc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6cc558c6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@15713d56, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@63f259c3]
15:39:44.144 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@146dfe6 testClass = TradeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4716be8b testClass = TradeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@48f278eb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1a18644, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@bae7dc0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@485966cc, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@437da279, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6328d34a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:39:44.202 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@146dfe6 testClass = TradeTest, testInstance = tech.cassandre.trading.bot.test.domain.TradeTest@7e4204e2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4716be8b testClass = TradeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@48f278eb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1a18644, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@bae7dc0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@485966cc, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@437da279, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6328d34a], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:39:44.216 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:39:44.219 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:44 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20838 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:44 - The following profiles are active: schedule-disabled
15:39:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:44 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
15:39:44 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:44 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:39:45 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:45 - HikariPool-1 - Starting...
15:39:45 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:45 - HikariPool-1 - Start completed.
15:39:45 - Successfully acquired change log lock
15:39:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:46 - Reading from PUBLIC.DATABASECHANGELOG
15:39:46 - Successfully released change log lock
15:39:46 - Successfully acquired change log lock
Skipping auto-registration
15:39:46 - Skipping auto-registration
15:39:46 - Table EXCHANGE_ACCOUNTS created
15:39:46 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:46 - Table STRATEGIES created
15:39:46 - Auto-increment added to STRATEGIES.ID
15:39:46 - Table POSITIONS created
15:39:46 - Auto-increment added to POSITIONS.ID
15:39:46 - Table ORDERS created
15:39:46 - Auto-increment added to ORDERS.ID
15:39:46 - Table TRADES created
15:39:46 - Auto-increment added to TRADES.ID
15:39:46 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:46 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:46 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:46 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:46 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:46 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:46 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:46 - Index IDX_POSITIONS_POSITION_ID created
15:39:46 - Index IDX_POSITIONS_STATUS created
15:39:46 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:46 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:46 - Index IDX_ORDERS_ORDER_ID created
15:39:46 - Index IDX_TRADES_TRADE_ID created
15:39:46 - Index IDX_TRADES_ORDER_ID created
15:39:46 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:39:46 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:46 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:46 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:46 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:46 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:46 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:46 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:46 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:46 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:39:46 - Successfully released change log lock
15:39:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:46 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:39:46 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:39:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:48 - Calling Remote Init...
15:39:48 - ExchangeConfiguration - Dry mode is OFF
15:39:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:48 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:48 - Started TradeTest in 4.127 seconds (JVM running for 4.945)
15:39:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:48 - HikariPool-1 - Shutdown initiated...
15:39:48 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:48 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20838 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:48 - The following profiles are active: schedule-disabled
15:39:48 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:48 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:39:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:48 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:39:48 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:48 - HikariPool-2 - Starting...
15:39:48 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:48 - HikariPool-2 - Start completed.
15:39:48 - Successfully acquired change log lock
15:39:48 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:48 - Reading from PUBLIC.DATABASECHANGELOG
15:39:48 - Successfully released change log lock
15:39:48 - Successfully acquired change log lock
Skipping auto-registration
15:39:48 - Skipping auto-registration
15:39:48 - Table EXCHANGE_ACCOUNTS created
15:39:48 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:48 - Table STRATEGIES created
15:39:48 - Auto-increment added to STRATEGIES.ID
15:39:48 - Table POSITIONS created
15:39:48 - Auto-increment added to POSITIONS.ID
15:39:48 - Table ORDERS created
15:39:48 - Auto-increment added to ORDERS.ID
15:39:48 - Table TRADES created
15:39:48 - Auto-increment added to TRADES.ID
15:39:48 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:48 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:48 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:48 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:48 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:48 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:48 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:48 - Index IDX_POSITIONS_POSITION_ID created
15:39:48 - Index IDX_POSITIONS_STATUS created
15:39:48 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:48 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:48 - Index IDX_ORDERS_ORDER_ID created
15:39:48 - Index IDX_TRADES_TRADE_ID created
15:39:48 - Index IDX_TRADES_ORDER_ID created
15:39:48 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 18ms
15:39:48 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:48 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:48 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:48 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:48 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:48 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:48 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:39:48 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:48 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:39:48 - Successfully released change log lock
15:39:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:48 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:48 - Calling Remote Init...
15:39:48 - ExchangeConfiguration - Dry mode is OFF
15:39:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:49 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:49 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:49 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:49 - Started TradeTest in 0.705 seconds (JVM running for 5.672)
15:39:49 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, order=Order(id=1, orderId=BACKUP_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 ETH, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=My reference !, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:39:50 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, order=Order(id=1, orderId=BACKUP_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 ETH, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100002 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Updated reference, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:39:51 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=11, tradeId=BACKUP_TRADE_11, type=BID, orderId=BACKUP_ORDER_01, order=Order(id=1, orderId=BACKUP_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 ETH, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100003 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Updated reference, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:39:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:51 - HikariPool-2 - Shutdown initiated...
15:39:51 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:51 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20838 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:51 - The following profiles are active: schedule-disabled
15:39:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:51 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:39:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:51 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:39:51 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:51 - HikariPool-3 - Starting...
15:39:51 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:51 - HikariPool-3 - Start completed.
15:39:51 - Successfully acquired change log lock
15:39:51 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:51 - Reading from PUBLIC.DATABASECHANGELOG
15:39:51 - Successfully released change log lock
15:39:51 - Successfully acquired change log lock
Skipping auto-registration
15:39:51 - Skipping auto-registration
15:39:51 - Table EXCHANGE_ACCOUNTS created
15:39:51 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:51 - Table STRATEGIES created
15:39:51 - Auto-increment added to STRATEGIES.ID
15:39:51 - Table POSITIONS created
15:39:51 - Auto-increment added to POSITIONS.ID
15:39:51 - Table ORDERS created
15:39:51 - Auto-increment added to ORDERS.ID
15:39:51 - Table TRADES created
15:39:51 - Auto-increment added to TRADES.ID
15:39:51 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:51 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:51 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:51 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:51 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:51 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:51 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:51 - Index IDX_POSITIONS_POSITION_ID created
15:39:51 - Index IDX_POSITIONS_STATUS created
15:39:51 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:51 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:51 - Index IDX_ORDERS_ORDER_ID created
15:39:51 - Index IDX_TRADES_TRADE_ID created
15:39:51 - Index IDX_TRADES_ORDER_ID created
15:39:51 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 14ms
15:39:51 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:51 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:51 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:51 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:51 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:51 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:51 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:51 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:51 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:39:51 - Successfully released change log lock
15:39:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:51 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:51 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:51 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:51 - Calling Remote Init...
15:39:51 - ExchangeConfiguration - Dry mode is OFF
15:39:51 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:51 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:51 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:51 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:51 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:51 - Started TradeTest in 0.627 seconds (JVM running for 8.503)
15:39:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:51 - HikariPool-3 - Shutdown initiated...
15:39:51 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:51 - Starting TradeTest using Java 11.0.17 on repairnator with PID 20838 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:51 - The following profiles are active: schedule-disabled
15:39:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:52 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
15:39:52 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:52 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:39:52 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:52 - HikariPool-4 - Starting...
15:39:52 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:52 - HikariPool-4 - Start completed.
15:39:52 - Successfully acquired change log lock
15:39:52 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:52 - Reading from PUBLIC.DATABASECHANGELOG
15:39:52 - Successfully released change log lock
15:39:52 - Successfully acquired change log lock
Skipping auto-registration
15:39:52 - Skipping auto-registration
15:39:52 - Table EXCHANGE_ACCOUNTS created
15:39:52 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:52 - Table STRATEGIES created
15:39:52 - Auto-increment added to STRATEGIES.ID
15:39:52 - Table POSITIONS created
15:39:52 - Auto-increment added to POSITIONS.ID
15:39:52 - Table ORDERS created
15:39:52 - Auto-increment added to ORDERS.ID
15:39:52 - Table TRADES created
15:39:52 - Auto-increment added to TRADES.ID
15:39:52 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:52 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:52 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:52 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:52 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:52 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:52 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:52 - Index IDX_POSITIONS_POSITION_ID created
15:39:52 - Index IDX_POSITIONS_STATUS created
15:39:52 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:52 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:52 - Index IDX_ORDERS_ORDER_ID created
15:39:52 - Index IDX_TRADES_TRADE_ID created
15:39:52 - Index IDX_TRADES_ORDER_ID created
15:39:52 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 14ms
15:39:52 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:52 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:52 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:52 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:52 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:52 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:52 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:52 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:52 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:39:52 - Successfully released change log lock
15:39:52 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:52 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:52 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:52 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:52 - Calling Remote Init...
15:39:52 - ExchangeConfiguration - Dry mode is OFF
15:39:52 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:52 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:52 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:52 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:52 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:52 - Started TradeTest in 0.601 seconds (JVM running for 9.153)
15:39:52 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=NEW_ORDER, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=null, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.646 s - in tech.cassandre.trading.bot.test.domain.TradeTest
15:39:52 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=NEW_TRADE, type=BID, orderId=NEW_ORDER, order=Order(id=11, orderId=NEW_ORDER, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00001000 ETH, averagePrice=1.00003000 BTC, limitPrice=1.00005000 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002000 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100003 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=null, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:39:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:52 - HikariPool-4 - Shutdown initiated...
15:39:52 - HikariPool-4 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
15:39:53.530 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:39:53.537 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:39:53.561 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:39:53.568 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest], using SpringBootContextLoader
15:39:53.570 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountExistingTest-context.xml] does not exist
15:39:53.571 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountExistingTestContext.groovy] does not exist
15:39:53.571 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:39:53.571 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: ExchangeAccountExistingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:39:53.658 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:39:53.658 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
15:39:53.712 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest]: using defaults.
15:39:53.713 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:39:53.719 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:39:53.724 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@479460a6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7164ca4c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5be46f9d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3f91b517, org.springframework.test.context.transaction.TransactionalTestExecutionListener@68702e03, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a220c9a, org.springframework.test.context.event.EventPublishingTestExecutionListener@2421cc4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@338c99c8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21ba0741, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@58ce9668, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@172b013]
15:39:53.726 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@26ceffa8 testClass = ExchangeAccountExistingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = ExchangeAccountExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:39:53.735 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@26ceffa8 testClass = ExchangeAccountExistingTest, testInstance = tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest@1603cd68, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = ExchangeAccountExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:39:53.748 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:39:53.751 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:53 - Starting ExchangeAccountExistingTest using Java 11.0.17 on repairnator with PID 21407 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:53 - The following profiles are active: schedule-disabled
15:39:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:54 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
15:39:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:54 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:39:54 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:54 - HikariPool-1 - Starting...
15:39:55 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:55 - HikariPool-1 - Start completed.
15:39:55 - Successfully acquired change log lock
15:39:55 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:55 - Reading from PUBLIC.DATABASECHANGELOG
15:39:55 - Successfully released change log lock
15:39:55 - Successfully acquired change log lock
Skipping auto-registration
15:39:55 - Skipping auto-registration
15:39:55 - Table EXCHANGE_ACCOUNTS created
15:39:55 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:55 - Table STRATEGIES created
15:39:55 - Auto-increment added to STRATEGIES.ID
15:39:55 - Table POSITIONS created
15:39:55 - Auto-increment added to POSITIONS.ID
15:39:55 - Table ORDERS created
15:39:55 - Auto-increment added to ORDERS.ID
15:39:55 - Table TRADES created
15:39:55 - Auto-increment added to TRADES.ID
15:39:55 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:55 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:55 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:55 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:55 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:55 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:55 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:55 - Index IDX_POSITIONS_POSITION_ID created
15:39:55 - Index IDX_POSITIONS_STATUS created
15:39:55 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:55 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:55 - Index IDX_ORDERS_ORDER_ID created
15:39:55 - Index IDX_TRADES_TRADE_ID created
15:39:55 - Index IDX_TRADES_ORDER_ID created
15:39:55 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:39:55 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:55 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:55 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:55 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:55 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:55 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:55 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:55 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:55 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:39:55 - Successfully released change log lock
15:39:55 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:55 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:39:56 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:39:56 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:56 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:56 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:57 - Calling Remote Init...
15:39:57 - ExchangeConfiguration - Dry mode is OFF
15:39:57 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:57 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:57 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:57 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:57 - Started ExchangeAccountExistingTest in 4.0 seconds (JVM running for 4.744)
15:39:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:57 - HikariPool-1 - Shutdown initiated...
15:39:57 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:39:57 - Starting ExchangeAccountExistingTest using Java 11.0.17 on repairnator with PID 21407 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:39:57 - The following profiles are active: schedule-disabled
15:39:57 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:57 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:39:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:39:57 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:39:58 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:39:58 - HikariPool-2 - Starting...
15:39:58 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:39:58 - HikariPool-2 - Start completed.
15:39:58 - Successfully acquired change log lock
15:39:58 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:39:58 - Reading from PUBLIC.DATABASECHANGELOG
15:39:58 - Successfully released change log lock
15:39:58 - Successfully acquired change log lock
Skipping auto-registration
15:39:58 - Skipping auto-registration
15:39:58 - Table EXCHANGE_ACCOUNTS created
15:39:58 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:39:58 - Table STRATEGIES created
15:39:58 - Auto-increment added to STRATEGIES.ID
15:39:58 - Table POSITIONS created
15:39:58 - Auto-increment added to POSITIONS.ID
15:39:58 - Table ORDERS created
15:39:58 - Auto-increment added to ORDERS.ID
15:39:58 - Table TRADES created
15:39:58 - Auto-increment added to TRADES.ID
15:39:58 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:39:58 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:39:58 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:39:58 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:39:58 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:39:58 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:39:58 - Index IDX_STRATEGIES_STRATEGY_ID created
15:39:58 - Index IDX_POSITIONS_POSITION_ID created
15:39:58 - Index IDX_POSITIONS_STATUS created
15:39:58 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:39:58 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:39:58 - Index IDX_ORDERS_ORDER_ID created
15:39:58 - Index IDX_TRADES_TRADE_ID created
15:39:58 - Index IDX_TRADES_ORDER_ID created
15:39:58 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
15:39:58 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:39:58 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:39:58 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:39:58 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:39:58 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:39:58 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:39:58 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:39:58 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:39:58 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:39:58 - Successfully released change log lock
15:39:58 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:39:58 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:39:58 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:39:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:39:58 - Calling Remote Init...
15:39:58 - ExchangeConfiguration - Dry mode is OFF
15:39:58 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:39:58 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:39:58 - StrategyConfiguration - Accounts available : 'null/null'.
15:39:58 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:39:58 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:39:58 - Started ExchangeAccountExistingTest in 0.785 seconds (JVM running for 5.554)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.115 s - in tech.cassandre.trading.bot.test.domain.ExchangeAccountExistingTest
15:39:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:39:58 - HikariPool-2 - Shutdown initiated...
15:39:58 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
15:39:59.821 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:39:59.829 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:39:59.853 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:39:59.860 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest], using SpringBootContextLoader
15:39:59.863 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountTest-context.xml] does not exist
15:39:59.863 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: class path resource [tech/cassandre/trading/bot/test/domain/ExchangeAccountTestContext.groovy] does not exist
15:39:59.863 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:39:59.864 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: ExchangeAccountTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:39:59.954 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:39:59.954 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
15:40:00.008 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.ExchangeAccountTest]: using defaults.
15:40:00.009 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:40:00.014 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:40:00.019 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@479460a6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7164ca4c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5be46f9d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3f91b517, org.springframework.test.context.transaction.TransactionalTestExecutionListener@68702e03, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a220c9a, org.springframework.test.context.event.EventPublishingTestExecutionListener@2421cc4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@338c99c8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21ba0741, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@58ce9668, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@172b013]
15:40:00.021 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@26ceffa8 testClass = ExchangeAccountTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = ExchangeAccountTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:40:00.031 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@26ceffa8 testClass = ExchangeAccountTest, testInstance = tech.cassandre.trading.bot.test.domain.ExchangeAccountTest@1603cd68, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = ExchangeAccountTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:40:00.044 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:40:00.046 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:00 - Starting ExchangeAccountTest using Java 11.0.17 on repairnator with PID 21709 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:00 - The following profiles are active: schedule-disabled
15:40:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:00 - Finished Spring Data repository scanning in 115 ms. Found 5 JPA repository interfaces.
15:40:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:00 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:40:01 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:01 - HikariPool-1 - Starting...
15:40:01 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:01 - HikariPool-1 - Start completed.
15:40:01 - Successfully acquired change log lock
15:40:02 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:02 - Reading from PUBLIC.DATABASECHANGELOG
15:40:02 - Successfully released change log lock
15:40:02 - Successfully acquired change log lock
Skipping auto-registration
15:40:02 - Skipping auto-registration
15:40:02 - Table EXCHANGE_ACCOUNTS created
15:40:02 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:02 - Table STRATEGIES created
15:40:02 - Auto-increment added to STRATEGIES.ID
15:40:02 - Table POSITIONS created
15:40:02 - Auto-increment added to POSITIONS.ID
15:40:02 - Table ORDERS created
15:40:02 - Auto-increment added to ORDERS.ID
15:40:02 - Table TRADES created
15:40:02 - Auto-increment added to TRADES.ID
15:40:02 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:02 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:02 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:02 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:02 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:02 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:02 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:02 - Index IDX_POSITIONS_POSITION_ID created
15:40:02 - Index IDX_POSITIONS_STATUS created
15:40:02 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:02 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:02 - Index IDX_ORDERS_ORDER_ID created
15:40:02 - Index IDX_TRADES_TRADE_ID created
15:40:02 - Index IDX_TRADES_ORDER_ID created
15:40:02 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:40:02 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:02 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:02 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:02 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:02 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:02 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:02 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:02 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:02 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:40:02 - Successfully released change log lock
15:40:02 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:02 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:40:02 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:40:02 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:03 - Calling Remote Init...
15:40:03 - ExchangeConfiguration - Dry mode is OFF
15:40:03 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:03 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:03 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:40:03 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:03 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:04 - Started ExchangeAccountTest in 3.962 seconds (JVM running for 4.968)
15:40:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:04 - HikariPool-1 - Shutdown initiated...
15:40:04 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:04 - Starting ExchangeAccountTest using Java 11.0.17 on repairnator with PID 21709 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:04 - The following profiles are active: schedule-disabled
15:40:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:04 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:40:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:04 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:40:04 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:04 - HikariPool-2 - Starting...
15:40:04 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:04 - HikariPool-2 - Start completed.
15:40:04 - Successfully acquired change log lock
15:40:04 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:04 - Reading from PUBLIC.DATABASECHANGELOG
15:40:04 - Successfully released change log lock
15:40:04 - Successfully acquired change log lock
Skipping auto-registration
15:40:04 - Skipping auto-registration
15:40:04 - Table EXCHANGE_ACCOUNTS created
15:40:04 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:04 - Table STRATEGIES created
15:40:04 - Auto-increment added to STRATEGIES.ID
15:40:04 - Table POSITIONS created
15:40:04 - Auto-increment added to POSITIONS.ID
15:40:04 - Table ORDERS created
15:40:04 - Auto-increment added to ORDERS.ID
15:40:04 - Table TRADES created
15:40:04 - Auto-increment added to TRADES.ID
15:40:04 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:04 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:04 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:04 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:04 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:04 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:04 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:04 - Index IDX_POSITIONS_POSITION_ID created
15:40:04 - Index IDX_POSITIONS_STATUS created
15:40:04 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:04 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:04 - Index IDX_ORDERS_ORDER_ID created
15:40:04 - Index IDX_TRADES_TRADE_ID created
15:40:04 - Index IDX_TRADES_ORDER_ID created
15:40:04 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:40:04 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:04 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:04 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:04 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:04 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:04 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:04 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:04 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:04 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:40:04 - Successfully released change log lock
15:40:04 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:04 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:04 - Calling Remote Init...
15:40:04 - ExchangeConfiguration - Dry mode is OFF
15:40:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:40:04 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:04 - Started ExchangeAccountTest in 0.765 seconds (JVM running for 5.754)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.073 s - in tech.cassandre.trading.bot.test.domain.ExchangeAccountTest
15:40:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:04 - HikariPool-2 - Shutdown initiated...
15:40:04 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.PositionTest
15:40:05.869 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:40:05.877 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:40:05.901 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.PositionTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:40:05.908 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.PositionTest], using SpringBootContextLoader
15:40:05.910 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: class path resource [tech/cassandre/trading/bot/test/domain/PositionTest-context.xml] does not exist
15:40:05.910 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: class path resource [tech/cassandre/trading/bot/test/domain/PositionTestContext.groovy] does not exist
15:40:05.911 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:40:05.911 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.PositionTest]: PositionTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:40:05.980 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:40:05.981 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.PositionTest
15:40:06.035 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.PositionTest]: using defaults.
15:40:06.035 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:40:06.040 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:40:06.045 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2796aeae, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@b4711e2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@70f02c32, org.springframework.test.context.support.DirtiesContextTestExecutionListener@62010f5c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@51fadaff, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@401f7633, org.springframework.test.context.event.EventPublishingTestExecutionListener@31ff43be, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5b6ec132, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5c44c582, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@67d18ed7, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2c78d320, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7b205dbd]
15:40:06.047 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6c2c1385 testClass = PositionTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f354bcf testClass = PositionTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6283d8b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@611889f4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@741a8937, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@d5b810e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@66f57048, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:40:06.092 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6c2c1385 testClass = PositionTest, testInstance = tech.cassandre.trading.bot.test.domain.PositionTest@65a15628, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f354bcf testClass = PositionTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6283d8b8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@611889f4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@741a8937, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@d5b810e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@66f57048, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:40:06.106 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:40:06.109 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:06 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21980 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:06 - The following profiles are active: schedule-disabled
15:40:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:06 - Finished Spring Data repository scanning in 132 ms. Found 5 JPA repository interfaces.
15:40:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:06 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:40:07 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:07 - HikariPool-1 - Starting...
15:40:07 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:07 - HikariPool-1 - Start completed.
15:40:07 - Successfully acquired change log lock
15:40:08 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:08 - Reading from PUBLIC.DATABASECHANGELOG
15:40:08 - Successfully released change log lock
15:40:08 - Successfully acquired change log lock
Skipping auto-registration
15:40:08 - Skipping auto-registration
15:40:08 - Table EXCHANGE_ACCOUNTS created
15:40:08 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:08 - Table STRATEGIES created
15:40:08 - Auto-increment added to STRATEGIES.ID
15:40:08 - Table POSITIONS created
15:40:08 - Auto-increment added to POSITIONS.ID
15:40:08 - Table ORDERS created
15:40:08 - Auto-increment added to ORDERS.ID
15:40:08 - Table TRADES created
15:40:08 - Auto-increment added to TRADES.ID
15:40:08 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:08 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:08 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:08 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:08 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:08 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:08 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:08 - Index IDX_POSITIONS_POSITION_ID created
15:40:08 - Index IDX_POSITIONS_STATUS created
15:40:08 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:08 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:08 - Index IDX_ORDERS_ORDER_ID created
15:40:08 - Index IDX_TRADES_TRADE_ID created
15:40:08 - Index IDX_TRADES_ORDER_ID created
15:40:08 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 38ms
15:40:08 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:08 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:08 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:08 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:08 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:08 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:08 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:08 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:08 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:40:08 - Successfully released change log lock
15:40:08 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:08 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:40:08 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:40:08 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:09 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:09 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:09 - Calling Remote Init...
15:40:09 - ExchangeConfiguration - Dry mode is ON
15:40:10 - Adding account 'main'
15:40:10 - - Adding balance 99.0001 BTC
15:40:10 - Adding account 'savings'
15:40:10 - - Adding balance 1.1 BTC
15:40:10 - - Adding balance 2.2 USDT
15:40:10 - - Adding balance 3.3 ETH
15:40:10 - Adding account 'trade'
15:40:10 - - Adding balance 0.99962937 BTC
15:40:10 - - Adding balance 1000 USDT
15:40:10 - - Adding balance 10 ETH
15:40:10 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:10 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:40:10 - StrategyConfiguration - Accounts available : 'main/main'.
15:40:10 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:40:10 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:40:10 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:10 - Started PositionTest in 4.236 seconds (JVM running for 5.061)
15:40:10 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:10 - HikariPool-1 - Shutdown initiated...
15:40:10 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:10 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21980 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:10 - The following profiles are active: schedule-disabled
15:40:10 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:10 - Finished Spring Data repository scanning in 47 ms. Found 5 JPA repository interfaces.
15:40:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:10 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:40:10 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:10 - HikariPool-2 - Starting...
15:40:10 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:10 - HikariPool-2 - Start completed.
15:40:10 - Successfully acquired change log lock
15:40:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:10 - Reading from PUBLIC.DATABASECHANGELOG
15:40:10 - Successfully released change log lock
15:40:10 - Successfully acquired change log lock
Skipping auto-registration
15:40:10 - Skipping auto-registration
15:40:10 - Table EXCHANGE_ACCOUNTS created
15:40:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:10 - Table STRATEGIES created
15:40:10 - Auto-increment added to STRATEGIES.ID
15:40:10 - Table POSITIONS created
15:40:10 - Auto-increment added to POSITIONS.ID
15:40:10 - Table ORDERS created
15:40:10 - Auto-increment added to ORDERS.ID
15:40:10 - Table TRADES created
15:40:10 - Auto-increment added to TRADES.ID
15:40:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:10 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:10 - Index IDX_POSITIONS_POSITION_ID created
15:40:10 - Index IDX_POSITIONS_STATUS created
15:40:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:10 - Index IDX_ORDERS_ORDER_ID created
15:40:10 - Index IDX_TRADES_TRADE_ID created
15:40:10 - Index IDX_TRADES_ORDER_ID created
15:40:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
15:40:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:40:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:40:10 - Successfully released change log lock
15:40:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:10 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:11 - Calling Remote Init...
15:40:11 - ExchangeConfiguration - Dry mode is ON
15:40:11 - Adding account 'main'
15:40:11 - - Adding balance 99.0001 BTC
15:40:11 - Adding account 'savings'
15:40:11 - - Adding balance 1.1 BTC
15:40:11 - - Adding balance 2.2 USDT
15:40:11 - - Adding balance 3.3 ETH
15:40:11 - Adding account 'trade'
15:40:11 - - Adding balance 0.99962937 BTC
15:40:11 - - Adding balance 1000 USDT
15:40:11 - - Adding balance 10 ETH
15:40:11 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:11 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:40:11 - StrategyConfiguration - Accounts available : 'main/main'.
15:40:11 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:40:11 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:40:11 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:11 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:11 - Started PositionTest in 0.753 seconds (JVM running for 5.839)
15:40:11 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:11 - HikariPool-2 - Shutdown initiated...
15:40:11 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:11 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21980 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:11 - The following profiles are active: schedule-disabled
15:40:11 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:11 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
15:40:11 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:11 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:40:11 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:11 - HikariPool-3 - Starting...
15:40:11 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:11 - HikariPool-3 - Start completed.
15:40:11 - Successfully acquired change log lock
15:40:11 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:11 - Reading from PUBLIC.DATABASECHANGELOG
15:40:11 - Successfully released change log lock
15:40:11 - Successfully acquired change log lock
Skipping auto-registration
15:40:11 - Skipping auto-registration
15:40:11 - Table EXCHANGE_ACCOUNTS created
15:40:11 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:11 - Table STRATEGIES created
15:40:11 - Auto-increment added to STRATEGIES.ID
15:40:11 - Table POSITIONS created
15:40:11 - Auto-increment added to POSITIONS.ID
15:40:11 - Table ORDERS created
15:40:11 - Auto-increment added to ORDERS.ID
15:40:11 - Table TRADES created
15:40:11 - Auto-increment added to TRADES.ID
15:40:11 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:11 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:11 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:11 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:11 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:11 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:11 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:11 - Index IDX_POSITIONS_POSITION_ID created
15:40:11 - Index IDX_POSITIONS_STATUS created
15:40:11 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:11 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:11 - Index IDX_ORDERS_ORDER_ID created
15:40:11 - Index IDX_TRADES_TRADE_ID created
15:40:11 - Index IDX_TRADES_ORDER_ID created
15:40:11 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:40:11 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:11 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:11 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:11 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:11 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:11 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:11 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:40:11 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:11 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:40:11 - Successfully released change log lock
15:40:11 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:11 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:11 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:11 - Calling Remote Init...
15:40:11 - ExchangeConfiguration - Dry mode is ON
15:40:11 - Adding account 'main'
15:40:11 - - Adding balance 99.0001 BTC
15:40:11 - Adding account 'savings'
15:40:11 - - Adding balance 1.1 BTC
15:40:11 - - Adding balance 2.2 USDT
15:40:11 - - Adding balance 3.3 ETH
15:40:11 - Adding account 'trade'
15:40:11 - - Adding balance 0.99962937 BTC
15:40:11 - - Adding balance 1000 USDT
15:40:11 - - Adding balance 10 ETH
15:40:11 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:11 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:40:11 - StrategyConfiguration - Accounts available : 'main/main'.
15:40:11 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:40:11 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:40:11 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:11 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:11 - Started PositionTest in 0.603 seconds (JVM running for 6.56)
15:40:11 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:40:12 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:40:12 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:12 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:40:13 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:13 - HikariPool-3 - Shutdown initiated...
15:40:13 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:13 - Starting PositionTest using Java 11.0.17 on repairnator with PID 21980 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:13 - The following profiles are active: schedule-disabled
15:40:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:14 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
15:40:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:14 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:40:14 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:14 - HikariPool-4 - Starting...
15:40:14 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:14 - HikariPool-4 - Start completed.
15:40:14 - Successfully acquired change log lock
15:40:14 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:14 - Reading from PUBLIC.DATABASECHANGELOG
15:40:14 - Successfully released change log lock
15:40:14 - Successfully acquired change log lock
Skipping auto-registration
15:40:14 - Skipping auto-registration
15:40:14 - Table EXCHANGE_ACCOUNTS created
15:40:14 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:14 - Table STRATEGIES created
15:40:14 - Auto-increment added to STRATEGIES.ID
15:40:14 - Table POSITIONS created
15:40:14 - Auto-increment added to POSITIONS.ID
15:40:14 - Table ORDERS created
15:40:14 - Auto-increment added to ORDERS.ID
15:40:14 - Table TRADES created
15:40:14 - Auto-increment added to TRADES.ID
15:40:14 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:14 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:14 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:14 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:14 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:14 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:14 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:14 - Index IDX_POSITIONS_POSITION_ID created
15:40:14 - Index IDX_POSITIONS_STATUS created
15:40:14 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:14 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:14 - Index IDX_ORDERS_ORDER_ID created
15:40:14 - Index IDX_TRADES_TRADE_ID created
15:40:14 - Index IDX_TRADES_ORDER_ID created
15:40:14 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:40:14 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:14 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:14 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:14 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:14 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:14 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:14 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:40:14 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:14 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:40:14 - Successfully released change log lock
15:40:14 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:14 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:14 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:14 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:14 - Calling Remote Init...
15:40:14 - ExchangeConfiguration - Dry mode is ON
15:40:14 - Adding account 'main'
15:40:14 - - Adding balance 99.0001 BTC
15:40:14 - Adding account 'savings'
15:40:14 - - Adding balance 1.1 BTC
15:40:14 - - Adding balance 2.2 USDT
15:40:14 - - Adding balance 3.3 ETH
15:40:14 - Adding account 'trade'
15:40:14 - - Adding balance 0.99962937 BTC
15:40:14 - - Adding balance 1000 USDT
15:40:14 - - Adding balance 10 ETH
15:40:14 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:14 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:40:14 - StrategyConfiguration - Accounts available : 'main/main'.
15:40:14 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:40:14 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:40:14 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:14 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:14 - Started PositionTest in 0.603 seconds (JVM running for 9.258)
15:40:14 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.01, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:40:14 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:15 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=0.01 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:40:15 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:15 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1 ETH, price=0.01 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:40:15 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:16 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:16 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:40:16.598177Z[Etc/UTC])

15:40:16 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 1 % / Stop loss at 2 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:17 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=0.01 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:17 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=7, positionId=7, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0002 ETH, rules=No rules, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:18 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:18 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.02, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:40:18.617589Z[Etc/UTC])

15:40:18 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=7, positionId=7, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0002 ETH, rules=No rules, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:19 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:40:20 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.06 BTC, latestGainPrice=0.06 BTC)

15:40:20 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.03, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:40:20.631459Z[Etc/UTC])

15:40:21 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.02 BTC, highestGainPrice=0.06000000 BTC, latestGainPrice=0.02 BTC)

15:40:22 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.02000000 BTC, highestGainPrice=0.06000000 BTC, latestGainPrice=0.03 BTC)

15:40:22 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.005, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:40:22.644723Z[Etc/UTC])

15:40:23 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.005 BTC, highestGainPrice=0.06000000 BTC, latestGainPrice=0.005 BTC)

15:40:24 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.07, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:40:24.658963Z[Etc/UTC])

15:40:25 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.00500000 BTC, highestGainPrice=0.07 BTC, latestGainPrice=0.07 BTC)

15:40:26 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000002, closingOrder=null, lowestGainPrice=0.00500000 BTC, highestGainPrice=0.07000000 BTC, latestGainPrice=0.07000000 BTC)

15:40:26 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=12, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=1.00003 BTC, limitPrice=1.00005 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:40:26 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=12, tradeId=000002, type=ASK, orderId=DRY_ORDER_000000002, order=Order(id=12, orderId=DRY_ORDER_000000002, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=1.00003000 BTC, limitPrice=1.00005000 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002000 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

15:40:27 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000002, closingOrder=null, lowestGainPrice=0.00500000 BTC, highestGainPrice=0.07000000 BTC, latestGainPrice=0.07000000 BTC)

15:40:27 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=13, tradeId=000003, type=ASK, orderId=DRY_ORDER_000000002, order=Order(id=12, orderId=DRY_ORDER_000000002, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=1.00003000 BTC, limitPrice=1.00005000 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002000 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

15:40:28 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=6, positionId=6, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=11, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=0.01000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.00000000 ETH, price=0.01000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000002, closingOrder=OrderDTO(id=12, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=1.00003000 BTC, limitPrice=1.00005000 BTC, leverage=leverage3, status=NEW, cumulativeAmount=1.00002000 ETH, userReference=MY_REF_3, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.00500000 BTC, highestGainPrice=0.07000000 BTC, latestGainPrice=0.07000000 BTC)

[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 22.935 s - in tech.cassandre.trading.bot.test.domain.PositionTest
15:40:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:28 - HikariPool-4 - Shutdown initiated...
15:40:28 - HikariPool-4 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.StrategyExistingTest
15:40:29.914 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:40:29.946 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:40:29.989 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:40:29.997 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest], using SpringBootContextLoader
15:40:29.999 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyExistingTest-context.xml] does not exist
15:40:30.000 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyExistingTestContext.groovy] does not exist
15:40:30.000 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:40:30.000 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: StrategyExistingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:40:30.091 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:40:30.092 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.StrategyExistingTest
15:40:30.157 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.StrategyExistingTest]: using defaults.
15:40:30.157 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:40:30.163 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:40:30.169 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@49c66ade, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6239aba6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3e6104fc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@12359a82, org.springframework.test.context.support.DirtiesContextTestExecutionListener@68df9280, org.springframework.test.context.transaction.TransactionalTestExecutionListener@479460a6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7164ca4c, org.springframework.test.context.event.EventPublishingTestExecutionListener@4f3bbf68, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5be46f9d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@30c93896]
15:40:30.170 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@106cc338 testClass = StrategyExistingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a67e3c6 testClass = StrategyExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:40:30.185 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@106cc338 testClass = StrategyExistingTest, testInstance = tech.cassandre.trading.bot.test.domain.StrategyExistingTest@5d066c7d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7a67e3c6 testClass = StrategyExistingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@32ee6fee, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3232a28a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@614ca7df, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@5d7148e2, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3ee37e5a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:40:30.198 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:40:30.201 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:30 - Starting StrategyExistingTest using Java 11.0.17 on repairnator with PID 22869 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:30 - The following profiles are active: schedule-disabled
15:40:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:31 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
15:40:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:31 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:40:31 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:31 - HikariPool-1 - Starting...
15:40:31 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:31 - HikariPool-1 - Start completed.
15:40:31 - Successfully acquired change log lock
15:40:32 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:32 - Reading from PUBLIC.DATABASECHANGELOG
15:40:32 - Successfully released change log lock
15:40:32 - Successfully acquired change log lock
Skipping auto-registration
15:40:32 - Skipping auto-registration
15:40:32 - Table EXCHANGE_ACCOUNTS created
15:40:32 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:32 - Table STRATEGIES created
15:40:32 - Auto-increment added to STRATEGIES.ID
15:40:32 - Table POSITIONS created
15:40:32 - Auto-increment added to POSITIONS.ID
15:40:32 - Table ORDERS created
15:40:32 - Auto-increment added to ORDERS.ID
15:40:32 - Table TRADES created
15:40:32 - Auto-increment added to TRADES.ID
15:40:32 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:32 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:32 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:32 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:32 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:32 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:32 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:32 - Index IDX_POSITIONS_POSITION_ID created
15:40:32 - Index IDX_POSITIONS_STATUS created
15:40:32 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:32 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:32 - Index IDX_ORDERS_ORDER_ID created
15:40:32 - Index IDX_TRADES_TRADE_ID created
15:40:32 - Index IDX_TRADES_ORDER_ID created
15:40:32 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:40:32 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:32 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:32 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:32 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:32 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:32 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:32 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:32 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:32 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:40:32 - Successfully released change log lock
15:40:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:32 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:40:32 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:40:32 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:33 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:34 - Calling Remote Init...
15:40:34 - ExchangeConfiguration - Dry mode is OFF
15:40:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:34 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:34 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:34 - Started StrategyExistingTest in 4.156 seconds (JVM running for 5.138)
15:40:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:34 - HikariPool-1 - Shutdown initiated...
15:40:34 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:34 - Starting StrategyExistingTest using Java 11.0.17 on repairnator with PID 22869 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:34 - The following profiles are active: schedule-disabled
15:40:34 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:34 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:40:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:34 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:40:34 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:34 - HikariPool-2 - Starting...
15:40:34 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:34 - HikariPool-2 - Start completed.
15:40:34 - Successfully acquired change log lock
15:40:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:34 - Reading from PUBLIC.DATABASECHANGELOG
15:40:34 - Successfully released change log lock
15:40:34 - Successfully acquired change log lock
Skipping auto-registration
15:40:34 - Skipping auto-registration
15:40:34 - Table EXCHANGE_ACCOUNTS created
15:40:34 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:34 - Table STRATEGIES created
15:40:34 - Auto-increment added to STRATEGIES.ID
15:40:34 - Table POSITIONS created
15:40:34 - Auto-increment added to POSITIONS.ID
15:40:34 - Table ORDERS created
15:40:34 - Auto-increment added to ORDERS.ID
15:40:34 - Table TRADES created
15:40:34 - Auto-increment added to TRADES.ID
15:40:34 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:34 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:34 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:34 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:34 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:34 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:34 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:34 - Index IDX_POSITIONS_POSITION_ID created
15:40:34 - Index IDX_POSITIONS_STATUS created
15:40:34 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:34 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:34 - Index IDX_ORDERS_ORDER_ID created
15:40:34 - Index IDX_TRADES_TRADE_ID created
15:40:34 - Index IDX_TRADES_ORDER_ID created
15:40:34 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:40:34 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:34 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:34 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:34 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:34 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:34 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:34 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:40:34 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:34 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:40:34 - Successfully released change log lock
15:40:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:34 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:35 - Calling Remote Init...
15:40:35 - ExchangeConfiguration - Dry mode is OFF
15:40:35 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:35 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:35 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:35 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:35 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

15:40:35 - Started StrategyExistingTest in 0.743 seconds (JVM running for 5.901)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.293 s - in tech.cassandre.trading.bot.test.domain.StrategyExistingTest
15:40:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:35 - HikariPool-2 - Shutdown initiated...
15:40:35 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.domain.StrategyTest
15:40:36.187 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:40:36.194 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:40:36.219 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.domain.StrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:40:36.227 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.domain.StrategyTest], using SpringBootContextLoader
15:40:36.229 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyTest-context.xml] does not exist
15:40:36.230 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: class path resource [tech/cassandre/trading/bot/test/domain/StrategyTestContext.groovy] does not exist
15:40:36.230 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:40:36.230 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.domain.StrategyTest]: StrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:40:36.302 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:40:36.303 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.domain.StrategyTest
15:40:36.362 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.domain.StrategyTest]: using defaults.
15:40:36.363 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:40:36.369 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:40:36.374 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@479460a6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7164ca4c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4f3bbf68, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5be46f9d, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3f91b517, org.springframework.test.context.transaction.TransactionalTestExecutionListener@68702e03, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a220c9a, org.springframework.test.context.event.EventPublishingTestExecutionListener@2421cc4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@338c99c8, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@21ba0741, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@58ce9668, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@172b013]
15:40:36.376 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@26ceffa8 testClass = StrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = StrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:40:36.386 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@26ceffa8 testClass = StrategyTest, testInstance = tech.cassandre.trading.bot.test.domain.StrategyTest@1603cd68, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@600b90df testClass = StrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@47faa49c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@6da21078, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@17497425, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:40:36.400 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:40:36.403 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:36 - Starting StrategyTest using Java 11.0.17 on repairnator with PID 23179 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:36 - The following profiles are active: schedule-disabled
15:40:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:37 - Finished Spring Data repository scanning in 135 ms. Found 5 JPA repository interfaces.
15:40:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:37 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:40:37 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:37 - HikariPool-1 - Starting...
15:40:37 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:37 - HikariPool-1 - Start completed.
15:40:38 - Successfully acquired change log lock
15:40:38 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:38 - Reading from PUBLIC.DATABASECHANGELOG
15:40:38 - Successfully released change log lock
15:40:38 - Successfully acquired change log lock
Skipping auto-registration
15:40:38 - Skipping auto-registration
15:40:38 - Table EXCHANGE_ACCOUNTS created
15:40:38 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:38 - Table STRATEGIES created
15:40:38 - Auto-increment added to STRATEGIES.ID
15:40:38 - Table POSITIONS created
15:40:38 - Auto-increment added to POSITIONS.ID
15:40:38 - Table ORDERS created
15:40:38 - Auto-increment added to ORDERS.ID
15:40:38 - Table TRADES created
15:40:38 - Auto-increment added to TRADES.ID
15:40:38 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:38 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:38 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:38 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:38 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:38 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:38 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:38 - Index IDX_POSITIONS_POSITION_ID created
15:40:38 - Index IDX_POSITIONS_STATUS created
15:40:38 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:38 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:38 - Index IDX_ORDERS_ORDER_ID created
15:40:38 - Index IDX_TRADES_TRADE_ID created
15:40:38 - Index IDX_TRADES_ORDER_ID created
15:40:38 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:40:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:40:38 - Successfully released change log lock
15:40:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:38 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:40:38 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:40:38 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:40 - Calling Remote Init...
15:40:40 - ExchangeConfiguration - Dry mode is OFF
15:40:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:40 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:40:40 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:40 - Started StrategyTest in 4.132 seconds (JVM running for 4.918)
15:40:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:40 - HikariPool-1 - Shutdown initiated...
15:40:40 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:40 - Starting StrategyTest using Java 11.0.17 on repairnator with PID 23179 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:40 - The following profiles are active: schedule-disabled
15:40:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:40 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:40:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:40 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:40:40 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:40 - HikariPool-2 - Starting...
15:40:40 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:40 - HikariPool-2 - Start completed.
15:40:40 - Successfully acquired change log lock
15:40:40 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:40 - Reading from PUBLIC.DATABASECHANGELOG
15:40:40 - Successfully released change log lock
15:40:40 - Successfully acquired change log lock
Skipping auto-registration
15:40:40 - Skipping auto-registration
15:40:40 - Table EXCHANGE_ACCOUNTS created
15:40:40 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:40 - Table STRATEGIES created
15:40:40 - Auto-increment added to STRATEGIES.ID
15:40:40 - Table POSITIONS created
15:40:40 - Auto-increment added to POSITIONS.ID
15:40:40 - Table ORDERS created
15:40:40 - Auto-increment added to ORDERS.ID
15:40:40 - Table TRADES created
15:40:40 - Auto-increment added to TRADES.ID
15:40:40 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:40 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:40 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:40 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:40 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:40 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:40 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:40 - Index IDX_POSITIONS_POSITION_ID created
15:40:40 - Index IDX_POSITIONS_STATUS created
15:40:40 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:40 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:40 - Index IDX_ORDERS_ORDER_ID created
15:40:40 - Index IDX_TRADES_TRADE_ID created
15:40:40 - Index IDX_TRADES_ORDER_ID created
15:40:40 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 19ms
15:40:40 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:40 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:40 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:40 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:40 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:40 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:40 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:40 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:40 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 3ms
15:40:40 - Successfully released change log lock
15:40:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:41 - Calling Remote Init...
15:40:41 - ExchangeConfiguration - Dry mode is OFF
15:40:41 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:41 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:41 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:40:41 - StrategyConfiguration - Accounts available : 'null/null'.
15:40:41 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:41 - Started StrategyTest in 0.769 seconds (JVM running for 5.744)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.262 s - in tech.cassandre.trading.bot.test.domain.StrategyTest
15:40:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:41 - HikariPool-2 - Shutdown initiated...
15:40:41 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.batch.AccountFluxTest
15:40:42.443 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:40:42.450 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:40:42.473 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:40:42.481 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest], using SpringBootContextLoader
15:40:42.483 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/AccountFluxTest-context.xml] does not exist
15:40:42.484 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/AccountFluxTestContext.groovy] does not exist
15:40:42.484 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:40:42.484 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: AccountFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:40:42.518 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]
15:40:42.560 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:40:42.560 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.AccountFluxTest
15:40:42.614 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.AccountFluxTest]: using defaults.
15:40:42.615 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:40:42.620 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:40:42.626 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67545b57, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6c2c1385, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5f354bcf, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3daf7722, org.springframework.test.context.support.DirtiesContextTestExecutionListener@78641d23, org.springframework.test.context.transaction.TransactionalTestExecutionListener@74589991, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@146dfe6, org.springframework.test.context.event.EventPublishingTestExecutionListener@4716be8b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1869fbd2, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7efaad5a]
15:40:42.627 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@130e116b testClass = AccountFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@e383572 testClass = AccountFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5ddf0d24 key = [tech.cassandre.trading.bot.test.batch.AccountFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@e15b7e8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2ed2d9cb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6404f418, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@d9345cd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
15:40:42.694 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@130e116b testClass = AccountFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.AccountFluxTest@6bca7e0d, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@e383572 testClass = AccountFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@5ddf0d24 key = [tech.cassandre.trading.bot.test.batch.AccountFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@e15b7e8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2ed2d9cb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6404f418, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@d9345cd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:40:42.712 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:40:42 - Starting AccountFluxTest using Java 11.0.17 on repairnator with PID 23389 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:40:42 - No active profile set, falling back to default profiles: default
15:40:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:43 - Finished Spring Data repository scanning in 118 ms. Found 5 JPA repository interfaces.
15:40:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:40:43 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:40:43 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:40:43 - HikariPool-1 - Starting...
15:40:44 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:40:44 - HikariPool-1 - Start completed.
15:40:44 - Successfully acquired change log lock
15:40:44 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:40:44 - Reading from PUBLIC.DATABASECHANGELOG
15:40:44 - Successfully released change log lock
15:40:44 - Successfully acquired change log lock
Skipping auto-registration
15:40:44 - Skipping auto-registration
15:40:44 - Table EXCHANGE_ACCOUNTS created
15:40:44 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:40:44 - Table STRATEGIES created
15:40:44 - Auto-increment added to STRATEGIES.ID
15:40:44 - Table POSITIONS created
15:40:44 - Auto-increment added to POSITIONS.ID
15:40:44 - Table ORDERS created
15:40:44 - Auto-increment added to ORDERS.ID
15:40:44 - Table TRADES created
15:40:44 - Auto-increment added to TRADES.ID
15:40:44 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:40:44 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:40:44 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:40:44 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:40:44 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:40:44 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:40:44 - Index IDX_STRATEGIES_STRATEGY_ID created
15:40:44 - Index IDX_POSITIONS_POSITION_ID created
15:40:44 - Index IDX_POSITIONS_STATUS created
15:40:44 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:40:44 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:40:44 - Index IDX_ORDERS_ORDER_ID created
15:40:44 - Index IDX_TRADES_TRADE_ID created
15:40:44 - Index IDX_TRADES_ORDER_ID created
15:40:44 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:40:44 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:40:44 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:40:44 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:40:44 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:40:44 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:40:44 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:40:44 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:40:44 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:40:44 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:40:44 - Successfully released change log lock
15:40:44 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:40:44 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:40:45 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:40:45 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:40:45 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:40:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 5
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 5
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
15:40:46 - 1 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 4
15:40:46 - 2 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 8
15:40:46 - 3 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 12
15:40:46 - 11 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 59
15:40:46 - Calling Remote Init...
15:40:46 - ExchangeConfiguration - Dry mode is OFF
15:40:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:40:46 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:40:46 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:40:46 - Initializing ExecutorService 'taskScheduler'
15:40:46 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:40:46 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:40:46 - Started AccountFluxTest in 4.153 seconds (JVM running for 5.011)
15:40:47 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

15:40:48 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=02, name=Account 02, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1)})

15:40:49 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

15:40:50 - TestableStrategy-onAccountUpdate 004 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), ETH=BalanceDTO(currency=ETH, total=2, available=2, frozen=2, loaned=2, borrowed=5, withdrawing=2, depositing=2), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

15:40:51 - TestableStrategy-onAccountUpdate 005 : AccountDTO(accountId=02, name=Account 02, features=[], balances={BTC=BalanceDTO(currency=BTC, total=3, available=3, frozen=3, loaned=3, borrowed=3, withdrawing=3, depositing=3)})

15:40:52 - TestableStrategy-onAccountUpdate 006 : AccountDTO(accountId=01, name=Account 01, features=[], balances={BTC=BalanceDTO(currency=BTC, total=1, available=1, frozen=1, loaned=1, borrowed=1, withdrawing=1, depositing=1), USDT=BalanceDTO(currency=USDT, total=2, available=2, frozen=2, loaned=2, borrowed=2, withdrawing=2, depositing=2)})

15:40:53 - TestableStrategy-onAccountUpdate 007 : AccountDTO(accountId=03, name=Account 03, features=[], balances={BTC=BalanceDTO(currency=BTC, total=11, available=12, frozen=13, loaned=15, borrowed=14, withdrawing=16, depositing=17)})

15:40:58 - Shutting down ExecutorService 'taskScheduler'
15:40:58 - UserService - InterruptedException : null
15:40:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:40:58 - HikariPool-1 - Shutdown initiated...
15:40:58 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.527 s - in tech.cassandre.trading.bot.test.batch.AccountFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.TickerFluxTest
15:40:59.972 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:40:59.981 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:41:00.005 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:41:00.012 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest], using SpringBootContextLoader
15:41:00.015 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TickerFluxTest-context.xml] does not exist
15:41:00.015 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TickerFluxTestContext.groovy] does not exist
15:41:00.015 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:41:00.016 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: TickerFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:41:00.064 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]
15:41:00.110 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:41:00.110 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.TickerFluxTest
15:41:00.165 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.TickerFluxTest]: using defaults.
15:41:00.165 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:41:00.171 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:41:00.176 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74589991, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@146dfe6, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@4716be8b, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1fc32e4f, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2f67b837, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1869fbd2, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6af9fcb2, org.springframework.test.context.event.EventPublishingTestExecutionListener@6cce16f4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@416c58f5]
15:41:00.178 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2fd953a6 testClass = TickerFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a4add54 testClass = TickerFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@141e5bef key = [tech.cassandre.trading.bot.test.batch.TickerFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@43dac38f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d0a1059, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@957e06, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e1a0406, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bd61f98, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
15:41:00.218 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2fd953a6 testClass = TickerFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.TickerFluxTest@19835e64, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@a4add54 testClass = TickerFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@141e5bef key = [tech.cassandre.trading.bot.test.batch.TickerFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@43dac38f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d0a1059, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@957e06, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e1a0406, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6bd61f98, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:41:00.231 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:41:00 - Starting TickerFluxTest using Java 11.0.17 on repairnator with PID 24124 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:41:00 - No active profile set, falling back to default profiles: default
15:41:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:41:01 - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
15:41:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:41:01 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:41:01 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:41:01 - HikariPool-1 - Starting...
15:41:01 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:41:01 - HikariPool-1 - Start completed.
15:41:01 - Successfully acquired change log lock
15:41:02 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:41:02 - Reading from PUBLIC.DATABASECHANGELOG
15:41:02 - Successfully released change log lock
15:41:02 - Successfully acquired change log lock
Skipping auto-registration
15:41:02 - Skipping auto-registration
15:41:02 - Table EXCHANGE_ACCOUNTS created
15:41:02 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:41:02 - Table STRATEGIES created
15:41:02 - Auto-increment added to STRATEGIES.ID
15:41:02 - Table POSITIONS created
15:41:02 - Auto-increment added to POSITIONS.ID
15:41:02 - Table ORDERS created
15:41:02 - Auto-increment added to ORDERS.ID
15:41:02 - Table TRADES created
15:41:02 - Auto-increment added to TRADES.ID
15:41:02 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:41:02 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:41:02 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:41:02 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:41:02 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:41:02 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:41:02 - Index IDX_STRATEGIES_STRATEGY_ID created
15:41:02 - Index IDX_POSITIONS_POSITION_ID created
15:41:02 - Index IDX_POSITIONS_STATUS created
15:41:02 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:41:02 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:41:02 - Index IDX_ORDERS_ORDER_ID created
15:41:02 - Index IDX_TRADES_TRADE_ID created
15:41:02 - Index IDX_TRADES_ORDER_ID created
15:41:02 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:41:02 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:41:02 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:41:02 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:41:02 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:41:02 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:41:02 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:41:02 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:41:02 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:41:02 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:41:02 - Successfully released change log lock
15:41:02 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:41:02 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:41:02 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:41:02 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:41:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:41:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:41:04 - Calling Remote Init...
15:41:04 - ExchangeConfiguration - Dry mode is OFF
15:41:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:41:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:41:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:41:04 - Initializing ExecutorService 'taskScheduler'
15:41:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:41:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:41:04 - Started TickerFluxTest in 4.245 seconds (JVM running for 5.124)
15:41:05 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:41:06 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:41:03.766Z[Etc/UTC])

15:41:08 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=10, last=10, bid=10, ask=10, high=10, low=10, vwap=10, volume=10, quoteVolume=10, bidSize=10, askSize=10, timestamp=2023-01-13T15:41:03.774Z[Etc/UTC])

15:41:09 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=2, last=2, bid=2, ask=2, high=2, low=2, vwap=2, volume=2, quoteVolume=2, bidSize=2, askSize=2, timestamp=2023-01-13T15:41:03.768Z[Etc/UTC])

15:41:11 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=20, last=20, bid=20, ask=20, high=20, low=20, vwap=20, volume=20, quoteVolume=20, bidSize=20, askSize=20, timestamp=2023-01-13T15:41:03.775Z[Etc/UTC])

15:41:13 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=3, last=3, bid=3, ask=3, high=3, low=3, vwap=3, volume=3, quoteVolume=3, bidSize=3, askSize=3, timestamp=2023-01-13T15:41:03.769Z[Etc/UTC])

15:41:15 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=30, last=30, bid=30, ask=30, high=30, low=30, vwap=30, volume=30, quoteVolume=30, bidSize=30, askSize=30, timestamp=2023-01-13T15:41:03.776Z[Etc/UTC])

15:41:18 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/USDT, open=40, last=40, bid=40, ask=40, high=40, low=40, vwap=40, volume=40, quoteVolume=40, bidSize=40, askSize=40, timestamp=2023-01-13T15:41:03.777Z[Etc/UTC])

15:41:20 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/BTC, open=4, last=4, bid=4, ask=4, high=4, low=4, vwap=4, volume=4, quoteVolume=4, bidSize=4, askSize=4, timestamp=2023-01-13T15:41:03.764Z[Etc/UTC])

15:41:22 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/USDT, open=50, last=50, bid=50, ask=50, high=50, low=50, vwap=50, volume=50, quoteVolume=50, bidSize=50, askSize=50, timestamp=2023-01-13T15:41:03.778Z[Etc/UTC])

15:41:27 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/BTC, open=5, last=5, bid=5, ask=5, high=5, low=5, vwap=5, volume=5, quoteVolume=5, bidSize=5, askSize=5, timestamp=2023-01-13T15:41:03.770Z[Etc/UTC])

15:41:29 - TestableStrategy-onTickerUpdate 011 : TickerDTO(currencyPair=ETH/USDT, open=60, last=60, bid=60, ask=60, high=60, low=60, vwap=60, volume=60, quoteVolume=60, bidSize=60, askSize=60, timestamp=2023-01-13T15:41:03.779Z[Etc/UTC])

15:41:31 - TestableStrategy-onTickerUpdate 012 : TickerDTO(currencyPair=ETH/BTC, open=6, last=6, bid=6, ask=6, high=6, low=6, vwap=6, volume=6, quoteVolume=6, bidSize=6, askSize=6, timestamp=2023-01-13T15:41:03.771Z[Etc/UTC])

15:41:36 - TestableStrategy-onTickerUpdate 013 : TickerDTO(currencyPair=ETH/USDT, open=70, last=70, bid=70, ask=70, high=70, low=70, vwap=70, volume=70, quoteVolume=70, bidSize=70, askSize=70, timestamp=2023-01-13T15:41:03.780Z[Etc/UTC])

15:41:37 - Shutting down ExecutorService 'taskScheduler'
15:41:37 - MarketService - InterruptedException : null
15:41:37 - UserService - InterruptedException : null
15:41:37 - TradeService - InterruptedException : null
15:41:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:41:37 - HikariPool-1 - Shutdown initiated...
15:41:37 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 37.627 s - in tech.cassandre.trading.bot.test.batch.TickerFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.OrderFluxTest
15:41:38.674 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:41:38.683 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:41:38.707 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:41:38.714 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest], using SpringBootContextLoader
15:41:38.716 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/OrderFluxTest-context.xml] does not exist
15:41:38.717 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/OrderFluxTestContext.groovy] does not exist
15:41:38.717 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:41:38.717 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: OrderFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:41:38.749 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]
15:41:38.792 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:41:38.793 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.OrderFluxTest
15:41:38.860 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.OrderFluxTest]: using defaults.
15:41:38.861 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:41:38.867 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:41:38.872 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4716be8b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fc32e4f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1869fbd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6af9fcb2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cce16f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7efaad5a, org.springframework.test.context.event.EventPublishingTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@73cd37c0]
15:41:38.873 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@141e5bef testClass = OrderFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = OrderFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.test.batch.OrderFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@c88a337, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1de76cc7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2c1b194a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@12aba8be, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13fd2ccd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
15:41:38.914 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@141e5bef testClass = OrderFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.OrderFluxTest@bcef303, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = OrderFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.test.batch.OrderFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@c88a337, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@1de76cc7, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2c1b194a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@12aba8be, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@13fd2ccd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:41:38.928 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:41:39 - Starting OrderFluxTest using Java 11.0.17 on repairnator with PID 25659 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:41:39 - No active profile set, falling back to default profiles: default
15:41:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:41:39 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
15:41:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:41:39 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:41:40 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:41:40 - HikariPool-1 - Starting...
15:41:40 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:41:40 - HikariPool-1 - Start completed.
15:41:40 - Successfully acquired change log lock
15:41:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:41:41 - Reading from PUBLIC.DATABASECHANGELOG
15:41:41 - Successfully released change log lock
15:41:41 - Successfully acquired change log lock
Skipping auto-registration
15:41:41 - Skipping auto-registration
15:41:41 - Table EXCHANGE_ACCOUNTS created
15:41:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:41:41 - Table STRATEGIES created
15:41:41 - Auto-increment added to STRATEGIES.ID
15:41:41 - Table POSITIONS created
15:41:41 - Auto-increment added to POSITIONS.ID
15:41:41 - Table ORDERS created
15:41:41 - Auto-increment added to ORDERS.ID
15:41:41 - Table TRADES created
15:41:41 - Auto-increment added to TRADES.ID
15:41:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:41:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:41:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:41:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:41:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:41:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:41:41 - Index IDX_STRATEGIES_STRATEGY_ID created
15:41:41 - Index IDX_POSITIONS_POSITION_ID created
15:41:41 - Index IDX_POSITIONS_STATUS created
15:41:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:41:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:41:41 - Index IDX_ORDERS_ORDER_ID created
15:41:41 - Index IDX_TRADES_TRADE_ID created
15:41:41 - Index IDX_TRADES_ORDER_ID created
15:41:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:41:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:41:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:41:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:41:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:41:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:41:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:41:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:41:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:41:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:41:41 - Successfully released change log lock
15:41:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:41:41 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:41:41 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:41:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:41:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:41:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:41:42 - Calling Remote Init...
15:41:42 - ExchangeConfiguration - Dry mode is OFF
15:41:42 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:41:42 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:41:43 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:41:43 - Initializing ExecutorService 'taskScheduler'
15:41:43 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:41:43 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:41:43 - Started OrderFluxTest in 4.29 seconds (JVM running for 5.266)
15:41:44 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:41:44 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:41:43.241498Z[Etc/UTC], trades=[])

15:41:45 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=2 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:41:43.242574Z[Etc/UTC], trades=[])

15:41:46 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=3 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:41:43.242667Z[Etc/UTC], trades=[])

15:41:47 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=11 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=111 ETH, userReference=My reference, timestamp=2023-01-13T15:41:42.594Z[Etc/UTC], trades=[])

15:41:48 - TestableStrategy-onOrderUpdate 005 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=22 ETH, averagePrice=1 USDT, limitPrice=0 USDT, leverage=null, status=FILLED, cumulativeAmount=222 ETH, userReference=My reference, timestamp=2023-01-13T15:41:42.595Z[Etc/UTC], trades=[])

15:41:49 - TestableStrategy-onOrderUpdate 006 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=33 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=333 ETH, userReference=My reference, timestamp=2023-01-13T15:41:42.595Z[Etc/UTC], trades=[])

15:41:50 - TestableStrategy-onOrderUpdate 007 : OrderDTO(id=3, orderId=ORDER_000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=3333 ETH, averagePrice=1 BTC, limitPrice=0 BTC, leverage=null, status=FILLED, cumulativeAmount=33333 ETH, userReference=My reference, timestamp=2023-01-13T15:41:42.595Z[Etc/UTC], trades=[])

15:41:52 - TestableStrategy-onOrderUpdate 008 : OrderDTO(id=2, orderId=ORDER_000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=22 ETH, averagePrice=2 USDT, limitPrice=0 USDT, leverage=null, status=FILLED, cumulativeAmount=222 ETH, userReference=My reference, timestamp=2023-01-13T15:41:42.595Z[Etc/UTC], trades=[])

15:41:57 - MarketService - InterruptedException : null
15:41:57 - TradeService - InterruptedException : null
15:41:57 - Shutting down ExecutorService 'taskScheduler'
15:41:57 - UserService - InterruptedException : null
15:41:59 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:41:59 - HikariPool-1 - Shutdown initiated...
15:41:59 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.882 s - in tech.cassandre.trading.bot.test.batch.OrderFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
15:42:00.508 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:42:00.523 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:42:00.550 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:42:00.557 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest], using SpringBootContextLoader
15:42:00.559 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/LongPositionFluxTest-context.xml] does not exist
15:42:00.560 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/LongPositionFluxTestContext.groovy] does not exist
15:42:00.560 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:42:00.560 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: LongPositionFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:42:00.591 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]
15:42:00.632 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:42:00.632 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
15:42:00.701 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.LongPositionFluxTest]: using defaults.
15:42:00.702 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:42:00.707 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:42:00.712 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3daf7722, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@78641d23, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@74589991, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@146dfe6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4716be8b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1fc32e4f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f67b837, org.springframework.test.context.event.EventPublishingTestExecutionListener@1869fbd2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1046d517]
15:42:00.714 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@363a52f testClass = LongPositionFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60856961 testClass = LongPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2fd953a6 key = [tech.cassandre.trading.bot.test.batch.LongPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
15:42:00.754 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@363a52f testClass = LongPositionFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.LongPositionFluxTest@8ad6665, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60856961 testClass = LongPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2fd953a6 key = [tech.cassandre.trading.bot.test.batch.LongPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:42:00.767 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:42:00 - Starting LongPositionFluxTest using Java 11.0.17 on repairnator with PID 26357 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:42:01 - No active profile set, falling back to default profiles: default
15:42:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:42:01 - Finished Spring Data repository scanning in 118 ms. Found 5 JPA repository interfaces.
15:42:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:42:01 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:42:02 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:42:02 - HikariPool-1 - Starting...
15:42:02 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:42:02 - HikariPool-1 - Start completed.
15:42:02 - Successfully acquired change log lock
15:42:02 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:42:02 - Reading from PUBLIC.DATABASECHANGELOG
15:42:03 - Successfully released change log lock
15:42:03 - Successfully acquired change log lock
Skipping auto-registration
15:42:03 - Skipping auto-registration
15:42:03 - Table EXCHANGE_ACCOUNTS created
15:42:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:42:03 - Table STRATEGIES created
15:42:03 - Auto-increment added to STRATEGIES.ID
15:42:03 - Table POSITIONS created
15:42:03 - Auto-increment added to POSITIONS.ID
15:42:03 - Table ORDERS created
15:42:03 - Auto-increment added to ORDERS.ID
15:42:03 - Table TRADES created
15:42:03 - Auto-increment added to TRADES.ID
15:42:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:42:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:42:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:42:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:42:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:42:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:42:03 - Index IDX_STRATEGIES_STRATEGY_ID created
15:42:03 - Index IDX_POSITIONS_POSITION_ID created
15:42:03 - Index IDX_POSITIONS_STATUS created
15:42:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:42:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:42:03 - Index IDX_ORDERS_ORDER_ID created
15:42:03 - Index IDX_TRADES_TRADE_ID created
15:42:03 - Index IDX_TRADES_ORDER_ID created
15:42:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:42:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:42:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:42:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:42:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:42:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:42:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:42:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:42:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:42:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:42:03 - Successfully released change log lock
15:42:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:42:03 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:42:03 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:42:03 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:42:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:42:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:42:04 - Calling Remote Init...
15:42:04 - ExchangeConfiguration - Dry mode is OFF
15:42:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:42:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:42:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:42:05 - Initializing ExecutorService 'taskScheduler'
15:42:05 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:42:05 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:42:05 - Started LongPositionFluxTest in 4.333 seconds (JVM running for 5.164)
15:42:05 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:06 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:42:06 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117081Z[Etc/UTC], trades=[])

15:42:06 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:07 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117081Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:08 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:09 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:09 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203209Z[Etc/UTC], trades=[])

15:42:10 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203209Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:10 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-02T00:00Z[Etc/UTC])

15:42:11 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:11 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])

15:42:12 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:12 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:42:13 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:13 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:42:14 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:15 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:15 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.18, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:15.298393Z[Etc/UTC])

15:42:16 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.18 BTC, highestGainPrice=0.18 BTC, latestGainPrice=0.18 BTC)

15:42:17 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:17.300468Z[Etc/UTC])

15:42:18 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.06 BTC)

15:42:19 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.09, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:19.303391Z[Etc/UTC])

15:42:20 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06000000 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.09 BTC)

15:42:21 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:21.305983Z[Etc/UTC])

15:42:22 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.015 BTC)

15:42:23 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:23.308423Z[Etc/UTC])

15:42:24 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:24.313501Z[Etc/UTC])

15:42:25 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

15:42:27 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.03 USDT, fee=null, userReference=null, timestamp=null)

15:42:27 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:28 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:08.203Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:42:29 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:42:29.340649Z[Etc/UTC])

15:42:30 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

15:42:31 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345902Z[Etc/UTC], trades=[])

15:42:31 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

15:42:32 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345902Z[Etc/UTC], trades=[]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:42:33 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:42:33 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:42:34 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:42:34 - TestableStrategy-onPositionUpdate 018 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:42:35 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:42:35 - TestableStrategy-onPositionUpdate 019 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=2.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:42:36 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:05.117Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=2.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:42:36 - TestableStrategy-onTradeUpdate 009 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:42:30.345Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:42:37 - Shutting down ExecutorService 'taskScheduler'
15:42:37 - MarketService - InterruptedException : null
15:42:37 - UserService - InterruptedException : null
15:42:37 - TradeService - InterruptedException : null
15:42:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:42:38 - HikariPool-1 - Shutdown initiated...
15:42:38 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 38.035 s - in tech.cassandre.trading.bot.test.batch.LongPositionFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.TradeFluxTest
15:42:39.605 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:42:39.621 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:42:39.649 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:42:39.657 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest], using SpringBootContextLoader
15:42:39.659 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TradeFluxTest-context.xml] does not exist
15:42:39.660 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/TradeFluxTestContext.groovy] does not exist
15:42:39.660 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:42:39.660 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: TradeFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:42:39.692 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]
15:42:39.733 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:42:39.734 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.TradeFluxTest
15:42:39.790 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.TradeFluxTest]: using defaults.
15:42:39.791 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:42:39.797 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:42:39.802 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6cce16f4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7efaad5a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@ca30bc1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1046d517, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3b7d3a38, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@416c58f5, org.springframework.test.context.event.EventPublishingTestExecutionListener@5505ae1a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60df60da, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5a2d131d]
15:42:39.804 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@c9d0d6 testClass = TradeFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6ccdb29f testClass = TradeFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3adcc812 key = [tech.cassandre.trading.bot.test.batch.TradeFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@593aaf41, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@57cf54e1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@36916eb0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@71a8adcf, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@54e1c68b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_EACH_TEST_METHOD].
15:42:39.843 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@c9d0d6 testClass = TradeFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.TradeFluxTest@a87f8ec, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6ccdb29f testClass = TradeFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3adcc812 key = [tech.cassandre.trading.bot.test.batch.TradeFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@593aaf41, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@57cf54e1, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@36916eb0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@71a8adcf, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@54e1c68b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:42:39.856 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:42:40 - Starting TradeFluxTest using Java 11.0.17 on repairnator with PID 28006 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:42:40 - No active profile set, falling back to default profiles: default
15:42:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:42:40 - Finished Spring Data repository scanning in 136 ms. Found 5 JPA repository interfaces.
15:42:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:42:40 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:42:41 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:42:41 - HikariPool-1 - Starting...
15:42:41 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:42:41 - HikariPool-1 - Start completed.
15:42:41 - Successfully acquired change log lock
15:42:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:42:42 - Reading from PUBLIC.DATABASECHANGELOG
15:42:42 - Successfully released change log lock
15:42:42 - Successfully acquired change log lock
Skipping auto-registration
15:42:42 - Skipping auto-registration
15:42:42 - Table EXCHANGE_ACCOUNTS created
15:42:42 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:42:42 - Table STRATEGIES created
15:42:42 - Auto-increment added to STRATEGIES.ID
15:42:42 - Table POSITIONS created
15:42:42 - Auto-increment added to POSITIONS.ID
15:42:42 - Table ORDERS created
15:42:42 - Auto-increment added to ORDERS.ID
15:42:42 - Table TRADES created
15:42:42 - Auto-increment added to TRADES.ID
15:42:42 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:42:42 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:42:42 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:42:42 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:42:42 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:42:42 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:42:42 - Index IDX_STRATEGIES_STRATEGY_ID created
15:42:42 - Index IDX_POSITIONS_POSITION_ID created
15:42:42 - Index IDX_POSITIONS_STATUS created
15:42:42 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:42:42 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:42:42 - Index IDX_ORDERS_ORDER_ID created
15:42:42 - Index IDX_TRADES_TRADE_ID created
15:42:42 - Index IDX_TRADES_ORDER_ID created
15:42:42 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:42:42 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:42:42 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:42:42 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:42:42 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:42:42 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:42:42 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:42:42 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:42:42 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:42:42 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:42:42 - Successfully released change log lock
15:42:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:42:42 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:42:42 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:42:42 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:42:42 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:42:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:42:43 - Calling Remote Init...
15:42:43 - ExchangeConfiguration - Dry mode is OFF
15:42:43 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:42:43 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:42:44 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:42:44 - Initializing ExecutorService 'taskScheduler'
15:42:44 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:42:44 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:42:44 - Started TradeFluxTest in 4.36 seconds (JVM running for 5.238)
15:42:45 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:42:47 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=TRADE_0000001, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000001, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:42:48 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=TRADE_0000002, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000002, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:42:49 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=TRADE_0000003, type=BID, orderId=ORDER_0000002, order=Order(id=2, orderId=ORDER_0000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=USDT/BTC, amount=0.00001500 USDT, averagePrice=0.00001300 BTC, limitPrice=0.00001100 BTC, leverage=LEVERAGE_2, status=PENDING_NEW, cumulativeAmount=0.00001400 BTC, userReference=My reference 2, timestamp=2020-11-19T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.100001 ETH, price=2.200002 USDT, fee=3.300003 ETH, userReference=Ref TRADE_0000003, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:42:50 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=TRADE_0000004, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000004, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:42:51 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=5, tradeId=TRADE_0000005, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000005, timestamp=2020-09-01T00:00Z[Etc/UTC])

15:42:52 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=6, tradeId=TRADE_0000006, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.100001 ETH, price=2.200002 USDT, fee=3.300003 USDT, userReference=Ref TRADE_0000006, timestamp=2018-08-01T00:00Z[Etc/UTC])

15:42:53 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=7, tradeId=TRADE_0000008, type=BID, orderId=ORDER_0000001, order=Order(id=1, orderId=ORDER_0000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00000500 ETH, averagePrice=0.00000300 BTC, limitPrice=0.00000100 BTC, leverage=LEVERAGE_1, status=NEW, cumulativeAmount=0.00000400 BTC, userReference=My reference 1, timestamp=2020-11-18T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=1.100001 ETH, price=2.200002 BTC, fee=3.300003 BTC, userReference=Ref TRADE_0000008, timestamp=2020-09-02T00:00Z[Etc/UTC])

15:42:54 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=3, tradeId=TRADE_0000003, type=BID, orderId=ORDER_0000002, order=Order(id=2, orderId=ORDER_0000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=USDT/BTC, amount=0.00001500 USDT, averagePrice=0.00001300 BTC, limitPrice=0.00001100 BTC, leverage=LEVERAGE_2, status=PENDING_NEW, cumulativeAmount=0.00001400 BTC, userReference=My reference 2, timestamp=2020-11-19T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.110001 ETH, price=2.220002 USDT, fee=3.330003 BTC, userReference=Ref TRADE_0000003, timestamp=2021-09-01T00:00Z[Etc/UTC])

15:42:55 - Shutting down ExecutorService 'taskScheduler'
15:42:55 - UserService - InterruptedException : null
15:42:55 - MarketService - InterruptedException : null
15:42:55 - TradeService - InterruptedException : null
15:42:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:42:57 - HikariPool-1 - Shutdown initiated...
15:42:57 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 18.283 s - in tech.cassandre.trading.bot.test.batch.TradeFluxTest
[INFO] Running tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
15:42:58.835 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:42:58.842 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:42:58.866 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:42:58.873 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest], using SpringBootContextLoader
15:42:58.875 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/ShortPositionFluxTest-context.xml] does not exist
15:42:58.876 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: class path resource [tech/cassandre/trading/bot/test/batch/ShortPositionFluxTestContext.groovy] does not exist
15:42:58.876 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:42:58.876 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: ShortPositionFluxTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:42:58.908 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]
15:42:58.950 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:42:58.950 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
15:42:59.003 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest]: using defaults.
15:42:59.004 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:42:59.009 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:42:59.015 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3daf7722, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@78641d23, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@74589991, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@146dfe6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4716be8b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1fc32e4f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2f67b837, org.springframework.test.context.event.EventPublishingTestExecutionListener@1869fbd2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6cce16f4, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@291a7e3c, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1046d517]
15:42:59.016 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@363a52f testClass = ShortPositionFluxTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60856961 testClass = ShortPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2fd953a6 key = [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_CLASS].
15:42:59.068 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@363a52f testClass = ShortPositionFluxTest, testInstance = tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest@8ad6665, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@60856961 testClass = ShortPositionFluxTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2fd953a6 key = [tech.cassandre.trading.bot.test.batch.ShortPositionFluxTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.support.DependencyInjectionTestExecutionListener.reinjectDependencies' -> true, 'org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:42:59.081 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:42:59 - Starting ShortPositionFluxTest using Java 11.0.17 on repairnator with PID 28771 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:42:59 - No active profile set, falling back to default profiles: default
15:42:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:42:59 - Finished Spring Data repository scanning in 165 ms. Found 5 JPA repository interfaces.
15:43:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:00 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:43:00 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:00 - HikariPool-1 - Starting...
15:43:00 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:00 - HikariPool-1 - Start completed.
15:43:00 - Successfully acquired change log lock
15:43:01 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:01 - Reading from PUBLIC.DATABASECHANGELOG
15:43:01 - Successfully released change log lock
15:43:01 - Successfully acquired change log lock
Skipping auto-registration
15:43:01 - Skipping auto-registration
15:43:01 - Table EXCHANGE_ACCOUNTS created
15:43:01 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:01 - Table STRATEGIES created
15:43:01 - Auto-increment added to STRATEGIES.ID
15:43:01 - Table POSITIONS created
15:43:01 - Auto-increment added to POSITIONS.ID
15:43:01 - Table ORDERS created
15:43:01 - Auto-increment added to ORDERS.ID
15:43:01 - Table TRADES created
15:43:01 - Auto-increment added to TRADES.ID
15:43:01 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:01 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:01 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:01 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:01 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:01 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:01 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:01 - Index IDX_POSITIONS_POSITION_ID created
15:43:01 - Index IDX_POSITIONS_STATUS created
15:43:01 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:01 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:01 - Index IDX_ORDERS_ORDER_ID created
15:43:01 - Index IDX_TRADES_TRADE_ID created
15:43:01 - Index IDX_TRADES_ORDER_ID created
15:43:01 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:43:01 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:01 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:01 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:01 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:01 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:01 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:01 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:43:01 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:01 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:43:01 - Successfully released change log lock
15:43:01 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:01 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:43:01 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:43:01 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:02 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:03 - Calling Remote Init...
15:43:03 - ExchangeConfiguration - Dry mode is OFF
15:43:03 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:03 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:43:03 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:03 - Initializing ExecutorService 'taskScheduler'
15:43:03 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:03 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:43:03 - Started ShortPositionFluxTest in 4.355 seconds (JVM running for 5.182)
15:43:03 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:04 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:43:04 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453265Z[Etc/UTC], trades=[])

15:43:04 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:05 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453265Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:06 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:07 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:08 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533490Z[Etc/UTC], trades=[])

15:43:08 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533490Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:08 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-02T00:00Z[Etc/UTC])

15:43:09 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:09 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.02 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])

15:43:10 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:10 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:43:11 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:11 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5 ETH, price=0.04 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:43:12 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:13 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:13 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.01, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:13.621919Z[Etc/UTC])

15:43:14 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01 BTC, highestGainPrice=0.01 BTC, latestGainPrice=0.01 BTC)

15:43:15 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:15.623728Z[Etc/UTC])

15:43:16 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.015 BTC)

15:43:17 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:17.626536Z[Etc/UTC])

15:43:18 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.3 BTC)

15:43:19 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:19.629450Z[Etc/UTC])

15:43:19 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.03 USDT, fee=null, userReference=null, timestamp=null)

15:43:19 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:20 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:43:21 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.0003, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:21.660159Z[Etc/UTC])

15:43:21 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop gain at 10,000,000 % / Stop loss at 10,000,000 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=000002, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:06.533Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.03000000 USDT, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=100 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

15:43:22 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.0003 BTC)

15:43:23 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.0003 BTC)

15:43:24 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668454Z[Etc/UTC], trades=[])

15:43:24 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668454Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

15:43:29 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:43:29 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

15:43:30 - TestableStrategy-onTradeUpdate 007 : TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:43:30 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

15:43:31 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.04000000 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC]), TradeDTO(id=1, tradeId=000011, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:03.453Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=5.00000000 ETH, price=0.02000000 BTC, fee=null, userReference=null, timestamp=2020-02-03T00:00Z[Etc/UTC])]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=3, orderId=ORDER00011, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=000003, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC]), TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500.00000000 ETH, price=1.00000000 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.01000000 BTC, latestGainPrice=0.00030000 BTC)

15:43:31 - TestableStrategy-onTradeUpdate 008 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:43:32 - TestableStrategy-onTradeUpdate 009 : TradeDTO(id=5, tradeId=000004, type=ASK, orderId=ORDER00011, order=Order(id=3, orderId=ORDER00011, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1000.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:43:22.668Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=500 ETH, price=1 BTC, fee=null, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 33.924 s - in tech.cassandre.trading.bot.test.batch.ShortPositionFluxTest
15:43:32 - Shutting down ExecutorService 'taskScheduler'
15:43:32 - TradeService - InterruptedException : null
15:43:32 - UserService - InterruptedException : null
15:43:32 - MarketService - InterruptedException : null
15:43:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:34 - HikariPool-1 - Shutdown initiated...
15:43:34 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
15:43:34.789 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:43:34.796 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:43:34.821 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:43:34.828 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest], using SpringBootContextLoader
15:43:34.830 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceDryModeTest-context.xml] does not exist
15:43:34.830 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceDryModeTestContext.groovy] does not exist
15:43:34.831 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:43:34.831 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: UserServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:43:34.962 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:43:34.963 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
15:43:35.053 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest]: using defaults.
15:43:35.054 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:43:35.065 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:43:35.086 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@3b7d3a38, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@416c58f5, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@73cd37c0, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21337f7b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@2bb3058, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7a362b6b, org.springframework.test.context.event.EventPublishingTestExecutionListener@60df60da, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5a2d131d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@14fc1f0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4ae9cfc1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@512baff6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@632ceb35, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1c93f6e1]
15:43:35.088 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7a1a14a4 testClass = UserServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@265adfad testClass = UserServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a3d9978 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3ee37e5a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3c7f66c4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6253c26, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@54a7079e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2d52216b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57d5872c], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:43:35.131 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7a1a14a4 testClass = UserServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest@2e1ef60, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@265adfad testClass = UserServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@a3d9978 key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3ee37e5a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3c7f66c4, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6253c26, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@54a7079e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@2d52216b, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57d5872c], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:43:35.144 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:43:35.147 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:35 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29958 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:35 - The following profiles are active: schedule-disabled
15:43:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:35 - Finished Spring Data repository scanning in 112 ms. Found 5 JPA repository interfaces.
15:43:35 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:35 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:43:36 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:36 - HikariPool-1 - Starting...
15:43:36 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:36 - HikariPool-1 - Start completed.
15:43:36 - Successfully acquired change log lock
15:43:37 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:37 - Reading from PUBLIC.DATABASECHANGELOG
15:43:37 - Successfully released change log lock
15:43:37 - Successfully acquired change log lock
Skipping auto-registration
15:43:37 - Skipping auto-registration
15:43:37 - Table EXCHANGE_ACCOUNTS created
15:43:37 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:37 - Table STRATEGIES created
15:43:37 - Auto-increment added to STRATEGIES.ID
15:43:37 - Table POSITIONS created
15:43:37 - Auto-increment added to POSITIONS.ID
15:43:37 - Table ORDERS created
15:43:37 - Auto-increment added to ORDERS.ID
15:43:37 - Table TRADES created
15:43:37 - Auto-increment added to TRADES.ID
15:43:37 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:37 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:37 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:37 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:37 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:37 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:37 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:37 - Index IDX_POSITIONS_POSITION_ID created
15:43:37 - Index IDX_POSITIONS_STATUS created
15:43:37 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:37 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:37 - Index IDX_ORDERS_ORDER_ID created
15:43:37 - Index IDX_TRADES_TRADE_ID created
15:43:37 - Index IDX_TRADES_ORDER_ID created
15:43:37 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:43:37 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:37 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:37 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:37 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:37 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:37 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:37 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:43:37 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:37 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:43:37 - Successfully released change log lock
15:43:37 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:37 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:43:37 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:43:37 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:38 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:38 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:38 - Calling Remote Init...
15:43:38 - ExchangeConfiguration - Dry mode is ON
15:43:39 - Adding account 'main'
15:43:39 - - Adding balance 99.0001 BTC
15:43:39 - Adding account 'savings'
15:43:39 - - Adding balance 1.1 BTC
15:43:39 - - Adding balance 2.2 USDT
15:43:39 - - Adding balance 3.3 ETH
15:43:39 - Adding account 'trade'
15:43:39 - - Adding balance 0.99962937 BTC
15:43:39 - - Adding balance 1000 USDT
15:43:39 - - Adding balance 10 ETH
15:43:39 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:39 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:43:39 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:39 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:39 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:39 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:39 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:43:39 - Started UserServiceDryModeTest in 4.062 seconds (JVM running for 4.986)
15:43:39 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:39 - HikariPool-1 - Shutdown initiated...
15:43:39 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:39 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29958 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:39 - The following profiles are active: schedule-disabled
15:43:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:39 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:43:39 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:39 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:43:39 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:39 - HikariPool-2 - Starting...
15:43:39 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:39 - HikariPool-2 - Start completed.
15:43:39 - Successfully acquired change log lock
15:43:39 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:39 - Reading from PUBLIC.DATABASECHANGELOG
15:43:39 - Successfully released change log lock
15:43:39 - Successfully acquired change log lock
Skipping auto-registration
15:43:39 - Skipping auto-registration
15:43:39 - Table EXCHANGE_ACCOUNTS created
15:43:39 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:39 - Table STRATEGIES created
15:43:39 - Auto-increment added to STRATEGIES.ID
15:43:39 - Table POSITIONS created
15:43:39 - Auto-increment added to POSITIONS.ID
15:43:39 - Table ORDERS created
15:43:39 - Auto-increment added to ORDERS.ID
15:43:39 - Table TRADES created
15:43:39 - Auto-increment added to TRADES.ID
15:43:39 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:39 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:39 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:39 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:39 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:39 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:39 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:39 - Index IDX_POSITIONS_POSITION_ID created
15:43:39 - Index IDX_POSITIONS_STATUS created
15:43:39 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:39 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:39 - Index IDX_ORDERS_ORDER_ID created
15:43:39 - Index IDX_TRADES_TRADE_ID created
15:43:39 - Index IDX_TRADES_ORDER_ID created
15:43:39 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:43:39 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:39 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:39 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:39 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:39 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:39 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:39 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:43:39 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:39 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:43:39 - Successfully released change log lock
15:43:39 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:39 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:39 - Calling Remote Init...
15:43:39 - ExchangeConfiguration - Dry mode is ON
15:43:39 - Adding account 'main'
15:43:39 - - Adding balance 99.0001 BTC
15:43:39 - Adding account 'savings'
15:43:39 - - Adding balance 1.1 BTC
15:43:39 - - Adding balance 2.2 USDT
15:43:39 - - Adding balance 3.3 ETH
15:43:39 - Adding account 'trade'
15:43:39 - - Adding balance 0.99962937 BTC
15:43:39 - - Adding balance 1000 USDT
15:43:39 - - Adding balance 10 ETH
15:43:39 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:39 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:43:39 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:39 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:39 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:39 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:39 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:43:40 - Started UserServiceDryModeTest in 0.783 seconds (JVM running for 5.791)
15:43:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:40 - HikariPool-2 - Shutdown initiated...
15:43:40 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:40 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29958 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:40 - The following profiles are active: schedule-disabled
15:43:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:40 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
15:43:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:40 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:43:40 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:40 - HikariPool-3 - Starting...
15:43:40 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:40 - HikariPool-3 - Start completed.
15:43:40 - Successfully acquired change log lock
15:43:40 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:40 - Reading from PUBLIC.DATABASECHANGELOG
15:43:40 - Successfully released change log lock
15:43:40 - Successfully acquired change log lock
Skipping auto-registration
15:43:40 - Skipping auto-registration
15:43:40 - Table EXCHANGE_ACCOUNTS created
15:43:40 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:40 - Table STRATEGIES created
15:43:40 - Auto-increment added to STRATEGIES.ID
15:43:40 - Table POSITIONS created
15:43:40 - Auto-increment added to POSITIONS.ID
15:43:40 - Table ORDERS created
15:43:40 - Auto-increment added to ORDERS.ID
15:43:40 - Table TRADES created
15:43:40 - Auto-increment added to TRADES.ID
15:43:40 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:40 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:40 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:40 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:40 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:40 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:40 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:40 - Index IDX_POSITIONS_POSITION_ID created
15:43:40 - Index IDX_POSITIONS_STATUS created
15:43:40 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:40 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:40 - Index IDX_ORDERS_ORDER_ID created
15:43:40 - Index IDX_TRADES_TRADE_ID created
15:43:40 - Index IDX_TRADES_ORDER_ID created
15:43:40 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
15:43:40 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:40 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:40 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:40 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:40 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:40 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:40 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:43:40 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:40 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:43:40 - Successfully released change log lock
15:43:40 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:40 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:40 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:40 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:40 - Calling Remote Init...
15:43:40 - ExchangeConfiguration - Dry mode is ON
15:43:40 - Adding account 'main'
15:43:40 - - Adding balance 99.0001 BTC
15:43:40 - Adding account 'savings'
15:43:40 - - Adding balance 1.1 BTC
15:43:40 - - Adding balance 2.2 USDT
15:43:40 - - Adding balance 3.3 ETH
15:43:40 - Adding account 'trade'
15:43:40 - - Adding balance 0.99962937 BTC
15:43:40 - - Adding balance 1000 USDT
15:43:40 - - Adding balance 10 ETH
15:43:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:40 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:43:40 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:40 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:40 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:40 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:40 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:43:40 - Started UserServiceDryModeTest in 0.593 seconds (JVM running for 6.421)
15:43:40 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:43:41 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:43:42 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:43:44 - TestableStrategy-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99897605, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10.02, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:43:44 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:44.700934Z[Etc/UTC])

15:43:45 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.02 ETH, averagePrice=0.032666 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 ETH, userReference=null, timestamp=2023-01-13T15:43:44.702805Z[Etc/UTC], trades=[])

15:43:45 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/BTC, amount=0.02000000 ETH, averagePrice=0.03266600 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 ETH, userReference=null, timestamp=2023-01-13T15:43:44.702Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.02 ETH, price=0.032666 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:43:44.703668Z[Etc/UTC])

15:43:46 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032466, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:46.731932Z[Etc/UTC])

15:43:46 - TestableStrategy-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962537, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10.00, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:43:47 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.02 ETH, averagePrice=0.032466 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 ETH, userReference=null, timestamp=2023-01-13T15:43:46.733057Z[Etc/UTC], trades=[])

15:43:47 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=ASK, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/BTC, amount=0.02000000 ETH, averagePrice=0.03246600 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 ETH, userReference=null, timestamp=2023-01-13T15:43:46.733Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.02 ETH, price=0.032466 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:43:46.733130Z[Etc/UTC])

15:43:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:48 - HikariPool-3 - Shutdown initiated...
15:43:48 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:48 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29958 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:48 - The following profiles are active: schedule-disabled
15:43:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:48 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
15:43:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:48 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:43:48 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:48 - HikariPool-4 - Starting...
15:43:48 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:48 - HikariPool-4 - Start completed.
15:43:48 - Successfully acquired change log lock
15:43:49 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:49 - Reading from PUBLIC.DATABASECHANGELOG
15:43:49 - Successfully released change log lock
15:43:49 - Successfully acquired change log lock
Skipping auto-registration
15:43:49 - Skipping auto-registration
15:43:49 - Table EXCHANGE_ACCOUNTS created
15:43:49 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:49 - Table STRATEGIES created
15:43:49 - Auto-increment added to STRATEGIES.ID
15:43:49 - Table POSITIONS created
15:43:49 - Auto-increment added to POSITIONS.ID
15:43:49 - Table ORDERS created
15:43:49 - Auto-increment added to ORDERS.ID
15:43:49 - Table TRADES created
15:43:49 - Auto-increment added to TRADES.ID
15:43:49 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:49 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:49 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:49 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:49 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:49 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:49 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:49 - Index IDX_POSITIONS_POSITION_ID created
15:43:49 - Index IDX_POSITIONS_STATUS created
15:43:49 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:49 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:49 - Index IDX_ORDERS_ORDER_ID created
15:43:49 - Index IDX_TRADES_TRADE_ID created
15:43:49 - Index IDX_TRADES_ORDER_ID created
15:43:49 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:43:49 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:49 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:49 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:49 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:49 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:49 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:49 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:43:49 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:49 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:43:49 - Successfully released change log lock
15:43:49 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:49 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:49 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:49 - Calling Remote Init...
15:43:49 - ExchangeConfiguration - Dry mode is ON
15:43:49 - Adding account 'main'
15:43:49 - - Adding balance 99.0001 BTC
15:43:49 - Adding account 'savings'
15:43:49 - - Adding balance 1.1 BTC
15:43:49 - - Adding balance 2.2 USDT
15:43:49 - - Adding balance 3.3 ETH
15:43:49 - Adding account 'trade'
15:43:49 - - Adding balance 0.99962937 BTC
15:43:49 - - Adding balance 1000 USDT
15:43:49 - - Adding balance 10 ETH
15:43:49 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:49 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:43:49 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:49 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:49 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:49 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:49 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:43:49 - Started UserServiceDryModeTest in 0.587 seconds (JVM running for 15.144)
15:43:49 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:49.371732Z[Etc/UTC])

15:43:50 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/EUR, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:50.376256Z[Etc/UTC])

15:43:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:51 - HikariPool-4 - Shutdown initiated...
15:43:51 - HikariPool-4 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:51 - Starting UserServiceDryModeTest using Java 11.0.17 on repairnator with PID 29958 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:51 - The following profiles are active: schedule-disabled
15:43:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:51 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
15:43:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:51 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:43:51 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:51 - HikariPool-5 - Starting...
15:43:51 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:51 - HikariPool-5 - Start completed.
15:43:51 - Successfully acquired change log lock
15:43:51 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:51 - Reading from PUBLIC.DATABASECHANGELOG
15:43:51 - Successfully released change log lock
15:43:51 - Successfully acquired change log lock
Skipping auto-registration
15:43:51 - Skipping auto-registration
15:43:51 - Table EXCHANGE_ACCOUNTS created
15:43:51 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:51 - Table STRATEGIES created
15:43:51 - Auto-increment added to STRATEGIES.ID
15:43:51 - Table POSITIONS created
15:43:51 - Auto-increment added to POSITIONS.ID
15:43:51 - Table ORDERS created
15:43:51 - Auto-increment added to ORDERS.ID
15:43:51 - Table TRADES created
15:43:51 - Auto-increment added to TRADES.ID
15:43:51 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:51 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:51 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:51 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:51 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:51 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:51 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:51 - Index IDX_POSITIONS_POSITION_ID created
15:43:51 - Index IDX_POSITIONS_STATUS created
15:43:51 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:51 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:51 - Index IDX_ORDERS_ORDER_ID created
15:43:51 - Index IDX_TRADES_TRADE_ID created
15:43:51 - Index IDX_TRADES_ORDER_ID created
15:43:51 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
15:43:51 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:51 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:51 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:51 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:51 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:51 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:51 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:43:51 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:51 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:43:51 - Successfully released change log lock
15:43:51 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:51 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:51 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:51 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:51 - Calling Remote Init...
15:43:51 - ExchangeConfiguration - Dry mode is ON
15:43:51 - Adding account 'main'
15:43:51 - - Adding balance 99.0001 BTC
15:43:51 - Adding account 'savings'
15:43:51 - - Adding balance 1.1 BTC
15:43:51 - - Adding balance 2.2 USDT
15:43:51 - - Adding balance 3.3 ETH
15:43:51 - Adding account 'trade'
15:43:51 - - Adding balance 0.99962937 BTC
15:43:51 - - Adding balance 1000 USDT
15:43:51 - - Adding balance 10 ETH
15:43:51 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:51 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:43:51 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:51 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:51 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:51 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:51 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:43:51 - Started UserServiceDryModeTest in 0.567 seconds (JVM running for 17.735)
15:43:51 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:51.964633Z[Etc/UTC])

15:43:52 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/EUR, open=null, last=0.032666, bid=0.032466, ask=0.032657, high=0.034441, low=0.032355, vwap=null, volume=33794.9795777, quoteVolume=1146.8453384314658, bidSize=null, askSize=null, timestamp=2023-01-13T15:43:52.968244Z[Etc/UTC])

[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 19.194 s - in tech.cassandre.trading.bot.test.service.dry.UserServiceDryModeTest
15:43:54 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:54 - HikariPool-5 - Shutdown initiated...
15:43:54 - HikariPool-5 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
15:43:55.024 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:43:55.031 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:43:55.056 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:43:55.063 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest], using SpringBootContextLoader
15:43:55.065 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceDryModeTest-context.xml] does not exist
15:43:55.066 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceDryModeTestContext.groovy] does not exist
15:43:55.066 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:43:55.066 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: PositionServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:43:55.139 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:43:55.139 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
15:43:55.191 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest]: using defaults.
15:43:55.192 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:43:55.197 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:43:55.202 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6af9fcb2, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6cce16f4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@291a7e3c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@ca30bc1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1046d517, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b7d3a38, org.springframework.test.context.event.EventPublishingTestExecutionListener@416c58f5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@60df60da]
15:43:55.204 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@61fe30 testClass = PositionServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = PositionServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:43:55.244 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61fe30 testClass = PositionServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest@4f9a2c08, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = PositionServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:43:55.257 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:43:55.260 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:55 - Starting PositionServiceDryModeTest using Java 11.0.17 on repairnator with PID 30841 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:55 - The following profiles are active: schedule-disabled
15:43:55 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:56 - Finished Spring Data repository scanning in 116 ms. Found 5 JPA repository interfaces.
15:43:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:56 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:43:56 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:56 - HikariPool-1 - Starting...
15:43:56 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:56 - HikariPool-1 - Start completed.
15:43:56 - Successfully acquired change log lock
15:43:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:57 - Reading from PUBLIC.DATABASECHANGELOG
15:43:57 - Successfully released change log lock
15:43:57 - Successfully acquired change log lock
Skipping auto-registration
15:43:57 - Skipping auto-registration
15:43:57 - Table EXCHANGE_ACCOUNTS created
15:43:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:57 - Table STRATEGIES created
15:43:57 - Auto-increment added to STRATEGIES.ID
15:43:57 - Table POSITIONS created
15:43:57 - Auto-increment added to POSITIONS.ID
15:43:57 - Table ORDERS created
15:43:57 - Auto-increment added to ORDERS.ID
15:43:57 - Table TRADES created
15:43:57 - Auto-increment added to TRADES.ID
15:43:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:43:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:43:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:43:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:43:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:43:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:43:57 - Index IDX_STRATEGIES_STRATEGY_ID created
15:43:57 - Index IDX_POSITIONS_POSITION_ID created
15:43:57 - Index IDX_POSITIONS_STATUS created
15:43:57 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:43:57 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:43:57 - Index IDX_ORDERS_ORDER_ID created
15:43:57 - Index IDX_TRADES_TRADE_ID created
15:43:57 - Index IDX_TRADES_ORDER_ID created
15:43:57 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:43:57 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:43:57 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:43:57 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:43:57 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:43:57 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:43:57 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:43:57 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:43:57 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:43:57 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:43:57 - Successfully released change log lock
15:43:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:43:57 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:43:57 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:43:57 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:43:58 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:43:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:43:59 - Calling Remote Init...
15:43:59 - ExchangeConfiguration - Dry mode is ON
15:43:59 - Adding account 'main'
15:43:59 - - Adding balance 99.0001 BTC
15:43:59 - Adding account 'savings'
15:43:59 - - Adding balance 1.1 BTC
15:43:59 - - Adding balance 2.2 USDT
15:43:59 - - Adding balance 3.3 ETH
15:43:59 - Adding account 'trade'
15:43:59 - - Adding balance 0.99962937 BTC
15:43:59 - - Adding balance 1000 USDT
15:43:59 - - Adding balance 10 ETH
15:43:59 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:43:59 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:43:59 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:43:59 - StrategyConfiguration - Accounts available : 'main/main'.
15:43:59 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:43:59 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:43:59 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:43:59 - Started PositionServiceDryModeTest in 4.372 seconds (JVM running for 5.203)
15:43:59 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:43:59 - HikariPool-1 - Shutdown initiated...
15:43:59 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:43:59 - Starting PositionServiceDryModeTest using Java 11.0.17 on repairnator with PID 30841 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:43:59 - The following profiles are active: schedule-disabled
15:43:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:59 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:43:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:43:59 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:43:59 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:43:59 - HikariPool-2 - Starting...
15:43:59 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:43:59 - HikariPool-2 - Start completed.
15:43:59 - Successfully acquired change log lock
15:43:59 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:43:59 - Reading from PUBLIC.DATABASECHANGELOG
15:43:59 - Successfully released change log lock
15:43:59 - Successfully acquired change log lock
Skipping auto-registration
15:43:59 - Skipping auto-registration
15:43:59 - Table EXCHANGE_ACCOUNTS created
15:43:59 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:43:59 - Table STRATEGIES created
15:43:59 - Auto-increment added to STRATEGIES.ID
15:43:59 - Table POSITIONS created
15:43:59 - Auto-increment added to POSITIONS.ID
15:44:00 - Table ORDERS created
15:44:00 - Auto-increment added to ORDERS.ID
15:44:00 - Table TRADES created
15:44:00 - Auto-increment added to TRADES.ID
15:44:00 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:44:00 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:44:00 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:44:00 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:44:00 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:44:00 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:44:00 - Index IDX_STRATEGIES_STRATEGY_ID created
15:44:00 - Index IDX_POSITIONS_POSITION_ID created
15:44:00 - Index IDX_POSITIONS_STATUS created
15:44:00 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:44:00 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:44:00 - Index IDX_ORDERS_ORDER_ID created
15:44:00 - Index IDX_TRADES_TRADE_ID created
15:44:00 - Index IDX_TRADES_ORDER_ID created
15:44:00 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:44:00 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:44:00 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:44:00 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:44:00 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:44:00 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:44:00 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:44:00 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:44:00 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:44:00 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:44:00 - Successfully released change log lock
15:44:00 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:44:00 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:44:00 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:44:00 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:44:00 - Calling Remote Init...
15:44:00 - ExchangeConfiguration - Dry mode is ON
15:44:00 - Adding account 'main'
15:44:00 - - Adding balance 99.0001 BTC
15:44:00 - Adding account 'savings'
15:44:00 - - Adding balance 1.1 BTC
15:44:00 - - Adding balance 2.2 USDT
15:44:00 - - Adding balance 3.3 ETH
15:44:00 - Adding account 'trade'
15:44:00 - - Adding balance 0.99962937 BTC
15:44:00 - - Adding balance 1000 USDT
15:44:00 - - Adding balance 10 ETH
15:44:00 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:44:00 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:44:00 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:44:00 - StrategyConfiguration - Accounts available : 'main/main'.
15:44:00 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:44:00 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:44:00 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:44:00 - Started PositionServiceDryModeTest in 0.78 seconds (JVM running for 6.006)
15:44:00 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:44:00 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:01 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:44:01 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:44:01 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:01 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:44:02 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:03 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:04 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:05 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:06 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

15:44:06 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:06 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.3 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:44:07 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:08 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:09 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:09 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:44:10 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

15:44:10 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.3 BTC, latestGainPrice=0.3 BTC)

15:44:11 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 USDT, highestGainPrice=0.3 USDT, latestGainPrice=0.3 USDT)

15:44:14 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:44:15 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.6, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

15:44:15 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.4 BTC)

15:44:16 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.4 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[])

15:44:16 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.4 BTC)

15:44:16 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.4 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:44:17 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.4 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

15:44:18 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.6 USDT, latestGainPrice=0.6 USDT)

15:44:19 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

15:44:19 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.40000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

15:44:20 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.1, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:44:20 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.40000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.40000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-03T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 BTC, highestGainPrice=0.30000000 BTC, latestGainPrice=0.40000000 BTC)

15:44:21 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.1 USDT)

15:44:22 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.1 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[])

15:44:22 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.1 USDT)

15:44:22 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.1 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:44:23 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.1 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

15:44:24 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.10000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

15:44:25 - TestableStrategy-onPositionStatusUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.10000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.10000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.60000000 USDT, latestGainPrice=0.10000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 30.626 s - in tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTest
15:44:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:44:25 - HikariPool-2 - Shutdown initiated...
15:44:25 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
15:44:26.627 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:44:26.634 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:44:26.657 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:44:26.665 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest], using SpringBootContextLoader
15:44:26.667 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/ExchangeServiceDryModeTest-context.xml] does not exist
15:44:26.668 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/ExchangeServiceDryModeTestContext.groovy] does not exist
15:44:26.668 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:44:26.668 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: ExchangeServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:44:26.748 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:44:26.749 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
15:44:26.821 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest]: using defaults.
15:44:26.822 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:44:26.828 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:44:26.833 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@56673b2c, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2796aeae, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@b4711e2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1fa1cab1, org.springframework.test.context.support.DirtiesContextTestExecutionListener@70f02c32, org.springframework.test.context.transaction.TransactionalTestExecutionListener@62010f5c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@51fadaff, org.springframework.test.context.event.EventPublishingTestExecutionListener@401f7633, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@31ff43be, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@5b6ec132, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c44c582, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@67d18ed7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2c78d320, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@132e0cc]
15:44:26.835 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@67545b57 testClass = ExchangeServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c2c1385 testClass = ExchangeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:44:26.845 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67545b57 testClass = ExchangeServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest@1e097d59, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6c2c1385 testClass = ExchangeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53fdffa1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d0f2471, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7e7be63f, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6e0f5f7f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:44:26.859 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:44:26.862 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:44:27 - Starting ExchangeServiceDryModeTest using Java 11.0.17 on repairnator with PID 31919 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:44:27 - The following profiles are active: schedule-disabled
15:44:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:27 - Finished Spring Data repository scanning in 138 ms. Found 5 JPA repository interfaces.
15:44:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:27 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:44:28 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:44:28 - HikariPool-1 - Starting...
15:44:28 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:44:28 - HikariPool-1 - Start completed.
15:44:28 - Successfully acquired change log lock
15:44:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:44:28 - Reading from PUBLIC.DATABASECHANGELOG
15:44:29 - Successfully released change log lock
15:44:29 - Successfully acquired change log lock
Skipping auto-registration
15:44:29 - Skipping auto-registration
15:44:29 - Table EXCHANGE_ACCOUNTS created
15:44:29 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:44:29 - Table STRATEGIES created
15:44:29 - Auto-increment added to STRATEGIES.ID
15:44:29 - Table POSITIONS created
15:44:29 - Auto-increment added to POSITIONS.ID
15:44:29 - Table ORDERS created
15:44:29 - Auto-increment added to ORDERS.ID
15:44:29 - Table TRADES created
15:44:29 - Auto-increment added to TRADES.ID
15:44:29 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:44:29 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:44:29 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:44:29 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:44:29 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:44:29 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:44:29 - Index IDX_STRATEGIES_STRATEGY_ID created
15:44:29 - Index IDX_POSITIONS_POSITION_ID created
15:44:29 - Index IDX_POSITIONS_STATUS created
15:44:29 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:44:29 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:44:29 - Index IDX_ORDERS_ORDER_ID created
15:44:29 - Index IDX_TRADES_TRADE_ID created
15:44:29 - Index IDX_TRADES_ORDER_ID created
15:44:29 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:44:29 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:44:29 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:44:29 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:44:29 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:44:29 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:44:29 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:44:29 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:44:29 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:44:29 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:44:29 - Successfully released change log lock
15:44:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:44:29 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:44:29 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:44:29 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:44:29 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:44:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:44:30 - Calling Remote Init...
15:44:30 - ExchangeConfiguration - Dry mode is ON
15:44:30 - Adding account 'main'
15:44:30 - - Adding balance 99.0001 BTC
15:44:30 - Adding account 'savings'
15:44:30 - - Adding balance 1.1 BTC
15:44:30 - - Adding balance 2.2 USDT
15:44:30 - - Adding balance 3.3 ETH
15:44:30 - Adding account 'trade'
15:44:30 - - Adding balance 0.99962937 BTC
15:44:30 - - Adding balance 1000 USDT
15:44:30 - - Adding balance 10 ETH
15:44:30 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:44:30 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:44:31 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:44:31 - StrategyConfiguration - Accounts available : 'main/main'.
15:44:31 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:44:31 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:44:31 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:44:31 - Started ExchangeServiceDryModeTest in 4.306 seconds (JVM running for 5.136)
15:44:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:44:31 - HikariPool-1 - Shutdown initiated...
15:44:31 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:44:31 - Starting ExchangeServiceDryModeTest using Java 11.0.17 on repairnator with PID 31919 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:44:31 - The following profiles are active: schedule-disabled
15:44:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:31 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:44:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:31 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:44:31 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:44:31 - HikariPool-2 - Starting...
15:44:31 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:44:31 - HikariPool-2 - Start completed.
15:44:31 - Successfully acquired change log lock
15:44:31 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:44:31 - Reading from PUBLIC.DATABASECHANGELOG
15:44:31 - Successfully released change log lock
15:44:31 - Successfully acquired change log lock
Skipping auto-registration
15:44:31 - Skipping auto-registration
15:44:31 - Table EXCHANGE_ACCOUNTS created
15:44:31 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:44:31 - Table STRATEGIES created
15:44:31 - Auto-increment added to STRATEGIES.ID
15:44:31 - Table POSITIONS created
15:44:31 - Auto-increment added to POSITIONS.ID
15:44:31 - Table ORDERS created
15:44:31 - Auto-increment added to ORDERS.ID
15:44:31 - Table TRADES created
15:44:31 - Auto-increment added to TRADES.ID
15:44:31 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:44:31 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:44:31 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:44:31 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:44:31 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:44:31 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:44:31 - Index IDX_STRATEGIES_STRATEGY_ID created
15:44:31 - Index IDX_POSITIONS_POSITION_ID created
15:44:31 - Index IDX_POSITIONS_STATUS created
15:44:31 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:44:31 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:44:31 - Index IDX_ORDERS_ORDER_ID created
15:44:31 - Index IDX_TRADES_TRADE_ID created
15:44:31 - Index IDX_TRADES_ORDER_ID created
15:44:31 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
15:44:31 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:44:31 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:44:31 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:44:31 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:44:31 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:44:31 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:44:31 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:44:31 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:44:31 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:44:31 - Successfully released change log lock
15:44:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:44:31 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:44:31 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:44:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:44:31 - Calling Remote Init...
15:44:31 - ExchangeConfiguration - Dry mode is ON
15:44:31 - Adding account 'main'
15:44:31 - - Adding balance 99.0001 BTC
15:44:31 - Adding account 'savings'
15:44:31 - - Adding balance 1.1 BTC
15:44:31 - - Adding balance 2.2 USDT
15:44:31 - - Adding balance 3.3 ETH
15:44:31 - Adding account 'trade'
15:44:31 - - Adding balance 0.99962937 BTC
15:44:31 - - Adding balance 1000 USDT
15:44:31 - - Adding balance 10 ETH
15:44:31 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:44:31 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:44:31 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:44:31 - StrategyConfiguration - Accounts available : 'main/main'.
15:44:31 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:44:31 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:44:31 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:44:31 - Started ExchangeServiceDryModeTest in 0.71 seconds (JVM running for 5.867)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.346 s - in tech.cassandre.trading.bot.test.service.dry.ExchangeServiceDryModeTest
15:44:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:44:31 - HikariPool-2 - Shutdown initiated...
15:44:31 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
15:44:32.954 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:44:32.961 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:44:32.987 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:44:32.995 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest], using SpringBootContextLoader
15:44:32.998 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceWithPositionsDryModeTest-context.xml] does not exist
15:44:32.998 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/UserServiceWithPositionsDryModeTestContext.groovy] does not exist
15:44:32.998 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:44:32.999 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: UserServiceWithPositionsDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:44:33.074 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:44:33.075 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
15:44:33.129 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest]: using defaults.
15:44:33.129 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:44:33.135 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:44:33.143 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@67d18ed7, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2c78d320, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@132e0cc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7b205dbd, org.springframework.test.context.support.DirtiesContextTestExecutionListener@106cc338, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7a67e3c6, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6cc558c6, org.springframework.test.context.event.EventPublishingTestExecutionListener@15713d56, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@63f259c3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@26ceffa8, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@600b90df, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@5c2375a9]
15:44:33.146 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@6af9fcb2 testClass = UserServiceWithPositionsDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cce16f4 testClass = UserServiceWithPositionsDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7fee8714, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2b91004a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@741a8937, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ce1329, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:44:33.209 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@6af9fcb2 testClass = UserServiceWithPositionsDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest@1c481ff2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cce16f4 testClass = UserServiceWithPositionsDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7fee8714, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2b91004a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f5acb9d, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@741a8937, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53ce1329, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:44:33.223 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:44:33.226 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:44:33 - Starting UserServiceWithPositionsDryModeTest using Java 11.0.17 on repairnator with PID 32142 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:44:33 - The following profiles are active: schedule-disabled
15:44:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:33 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
15:44:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:34 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:44:34 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:44:34 - HikariPool-1 - Starting...
15:44:34 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:44:34 - HikariPool-1 - Start completed.
15:44:34 - Successfully acquired change log lock
15:44:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:44:35 - Reading from PUBLIC.DATABASECHANGELOG
15:44:35 - Successfully released change log lock
15:44:35 - Successfully acquired change log lock
Skipping auto-registration
15:44:35 - Skipping auto-registration
15:44:35 - Table EXCHANGE_ACCOUNTS created
15:44:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:44:35 - Table STRATEGIES created
15:44:35 - Auto-increment added to STRATEGIES.ID
15:44:35 - Table POSITIONS created
15:44:35 - Auto-increment added to POSITIONS.ID
15:44:35 - Table ORDERS created
15:44:35 - Auto-increment added to ORDERS.ID
15:44:35 - Table TRADES created
15:44:35 - Auto-increment added to TRADES.ID
15:44:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:44:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:44:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:44:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:44:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:44:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:44:35 - Index IDX_STRATEGIES_STRATEGY_ID created
15:44:35 - Index IDX_POSITIONS_POSITION_ID created
15:44:35 - Index IDX_POSITIONS_STATUS created
15:44:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:44:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:44:35 - Index IDX_ORDERS_ORDER_ID created
15:44:35 - Index IDX_TRADES_TRADE_ID created
15:44:35 - Index IDX_TRADES_ORDER_ID created
15:44:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:44:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:44:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:44:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:44:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:44:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:44:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:44:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:44:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:44:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:44:35 - Successfully released change log lock
15:44:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:44:35 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:44:35 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:44:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:44:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:44:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:44:37 - Calling Remote Init...
15:44:37 - ExchangeConfiguration - Dry mode is ON
15:44:37 - Adding account 'main'
15:44:37 - - Adding balance 99.0001 BTC
15:44:37 - Adding account 'savings'
15:44:37 - - Adding balance 1.1 BTC
15:44:37 - - Adding balance 2.2 USDT
15:44:37 - - Adding balance 3.3 ETH
15:44:37 - Adding account 'trade'
15:44:37 - - Adding balance 0.99962937 BTC
15:44:37 - - Adding balance 1000 USDT
15:44:37 - - Adding balance 10 ETH
15:44:37 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:44:37 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:44:37 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:44:37 - StrategyConfiguration - Accounts available : 'main/main'.
15:44:37 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:44:37 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:44:37 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:44:37 - Started UserServiceWithPositionsDryModeTest in 4.345 seconds (JVM running for 5.209)
15:44:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:44:37 - HikariPool-1 - Shutdown initiated...
15:44:37 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:44:37 - Starting UserServiceWithPositionsDryModeTest using Java 11.0.17 on repairnator with PID 32142 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:44:37 - The following profiles are active: schedule-disabled
15:44:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:37 - Finished Spring Data repository scanning in 27 ms. Found 5 JPA repository interfaces.
15:44:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:44:37 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:44:37 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:44:37 - HikariPool-2 - Starting...
15:44:37 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:44:37 - HikariPool-2 - Start completed.
15:44:37 - Successfully acquired change log lock
15:44:37 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:44:37 - Reading from PUBLIC.DATABASECHANGELOG
15:44:37 - Successfully released change log lock
15:44:37 - Successfully acquired change log lock
Skipping auto-registration
15:44:37 - Skipping auto-registration
15:44:37 - Table EXCHANGE_ACCOUNTS created
15:44:37 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:44:37 - Table STRATEGIES created
15:44:37 - Auto-increment added to STRATEGIES.ID
15:44:37 - Table POSITIONS created
15:44:37 - Auto-increment added to POSITIONS.ID
15:44:37 - Table ORDERS created
15:44:37 - Auto-increment added to ORDERS.ID
15:44:37 - Table TRADES created
15:44:37 - Auto-increment added to TRADES.ID
15:44:37 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:44:37 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:44:37 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:44:37 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:44:37 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:44:37 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:44:37 - Index IDX_STRATEGIES_STRATEGY_ID created
15:44:37 - Index IDX_POSITIONS_POSITION_ID created
15:44:37 - Index IDX_POSITIONS_STATUS created
15:44:37 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:44:37 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:44:37 - Index IDX_ORDERS_ORDER_ID created
15:44:37 - Index IDX_TRADES_TRADE_ID created
15:44:37 - Index IDX_TRADES_ORDER_ID created
15:44:37 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 20ms
15:44:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:44:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:44:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:44:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:44:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:44:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:44:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:44:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:44:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:44:38 - Successfully released change log lock
15:44:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:44:38 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:44:38 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:44:38 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:44:38 - Calling Remote Init...
15:44:38 - ExchangeConfiguration - Dry mode is ON
15:44:38 - Adding account 'main'
15:44:38 - - Adding balance 99.0001 BTC
15:44:38 - Adding account 'savings'
15:44:38 - - Adding balance 1.1 BTC
15:44:38 - - Adding balance 2.2 USDT
15:44:38 - - Adding balance 3.3 ETH
15:44:38 - Adding account 'trade'
15:44:38 - - Adding balance 0.99962937 BTC
15:44:38 - - Adding balance 1000 USDT
15:44:38 - - Adding balance 10 ETH
15:44:38 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:44:38 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR 
15:44:38 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:44:38 - StrategyConfiguration - Accounts available : 'main/main'.
15:44:38 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:44:38 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:44:38 - StrategyConfiguration - Running strategy '09/Large testable strategy' (requires ETH/BTC, ETH/USDT, BTC/USDT, KCS/USDT, BTC/ETH, ETH/EUR).
15:44:38 - Started UserServiceWithPositionsDryModeTest in 0.775 seconds (JVM running for 6.008)
15:44:38 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:44:38 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.03, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:38.466610Z[Etc/UTC])

15:44:39 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:44:39 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=1500, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:39.508839Z[Etc/UTC])

15:44:40 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:44:40 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:40.512254Z[Etc/UTC])

15:44:41 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=KCS/USDT, open=null, last=4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:41.515215Z[Etc/UTC])

15:44:42 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/ETH, open=null, last=50, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:42.517974Z[Etc/UTC])

15:44:45 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:46 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, averagePrice=1500 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.5 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482290Z[Etc/UTC], trades=[])

15:44:46 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:46 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.5 ETH, price=1500 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483183Z[Etc/UTC])

15:44:47 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.5 ETH, averagePrice=1500 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.5 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482290Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:48 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:49 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:52 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=10, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:44:52.567036Z[Etc/UTC])

15:44:52 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:53 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568337Z[Etc/UTC], trades=[])

15:44:53 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:53 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10 ETH, price=10 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568410Z[Etc/UTC])

15:44:54 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568337Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:55 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10 USDT, highestGainPrice=10 USDT, latestGainPrice=10 USDT)

15:44:56 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:57 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:44:59 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:00 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, averagePrice=4 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609739Z[Etc/UTC], trades=[])

15:45:00 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:00 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC], trades=[]), currencyPair=KCS/USDT, amount=20 KCS, price=4 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:44:59.609798Z[Etc/UTC])

15:45:01 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20 KCS, averagePrice=4 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609739Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:02 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC], trades=[]), currencyPair=KCS/USDT, amount=20.00000000 KCS, price=4.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:03 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=KCS/USDT, amount=20.00000000 KCS, averagePrice=4.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=20.00000000 KCS, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC], trades=[]), currencyPair=KCS/USDT, amount=20.00000000 KCS, price=4.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:59.609Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:06 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:07 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637447Z[Etc/UTC], trades=[])

15:45:07 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:07 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1 ETH, price=10 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637551Z[Etc/UTC])

15:45:08 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1 ETH, averagePrice=10 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637447Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:09 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:10 - TestableStrategy-onPositionStatusUpdate 008 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:13 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/USDT, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:45:13.671708Z[Etc/UTC])

15:45:14 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10.00000000 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

15:45:15 - TestableStrategy-onOrderUpdate 005 : OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694015Z[Etc/UTC], trades=[])

15:45:15 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100 USDT)

15:45:15 - TestableStrategy-onTradeUpdate 005 : TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:45:14.694044Z[Etc/UTC])

15:45:16 - TestableStrategy-onPositionStatusUpdate 009 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100 USDT)

15:45:17 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=100 USDT, highestGainPrice=100 USDT, latestGainPrice=100 USDT)

15:45:17 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:45:17.730316Z[Etc/UTC])

15:45:18 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694015Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

15:45:19 - TestableStrategy-onOrderUpdate 006 : OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749732Z[Etc/UTC], trades=[])

15:45:19 - TestableStrategy-onPositionUpdate 018 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

15:45:19 - TestableStrategy-onTradeUpdate 006 : TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, order=Order(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:45:18.749785Z[Etc/UTC])

15:45:20 - TestableStrategy-onPositionStatusUpdate 010 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:52.568Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=10.00000000 ETH, averagePrice=100.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=10.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=10.00000000 ETH, price=100.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:14.694Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=100.00000000 USDT)

15:45:21 - TestableStrategy-onPositionUpdate 019 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=0.50000000 ETH, averagePrice=1500.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.50000000 ETH, userReference=null, timestamp=2023-01-13T15:44:45.482Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.50000000 ETH, price=1500.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:44:45.483Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=2 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

15:45:22 - TestableStrategy-onPositionUpdate 020 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=null, lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

15:45:23 - TestableStrategy-onPositionStatusUpdate 011 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=null, lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2 USDT)

15:45:24 - TestableStrategy-onPositionUpdate 021 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749732Z[Etc/UTC], trades=[]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

15:45:25 - TestableStrategy-onPositionUpdate 022 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC], trades=[TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, order=Order(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC])]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

15:45:26 - TestableStrategy-onPositionStatusUpdate 012 : PositionDTO(id=4, positionId=4, type=SHORT, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=1.00000000 ETH, averagePrice=10.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=1.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=1.00000000 ETH, price=10.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:06.637Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000006, closingOrder=OrderDTO(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=StrategyDTO(id=1, strategyId=09, type=BASIC_STRATEGY, name=Large testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC], trades=[TradeDTO(id=6, tradeId=DRY_TRADE_000000006, type=BID, orderId=DRY_ORDER_000000006, order=Order(id=6, orderId=DRY_ORDER_000000006, type=BID, strategy=Strategy(id=1, strategyId=09, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Large testable strategy), currencyPair=ETH/USDT, amount=5.00000000 ETH, averagePrice=2.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=5.00000000 ETH, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=5.00000000 ETH, price=2.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:45:18.749Z[Etc/UTC])]), lowestGainPrice=100.00000000 USDT, highestGainPrice=100.00000000 USDT, latestGainPrice=2.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 58.827 s - in tech.cassandre.trading.bot.test.service.dry.UserServiceWithPositionsDryModeTest
15:45:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:45:31 - HikariPool-2 - Shutdown initiated...
15:45:31 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
15:45:32.718 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:45:32.725 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:45:32.750 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:45:32.757 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest], using SpringBootContextLoader
15:45:32.760 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceForceClosingTest-context.xml] does not exist
15:45:32.760 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/PositionServiceForceClosingTestContext.groovy] does not exist
15:45:32.760 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:45:32.761 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: PositionServiceForceClosingTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:45:32.839 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:45:32.839 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
15:45:32.897 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest]: using defaults.
15:45:32.898 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:45:32.904 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:45:32.909 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6af9fcb2, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6cce16f4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@291a7e3c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@ca30bc1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1046d517, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b7d3a38, org.springframework.test.context.event.EventPublishingTestExecutionListener@416c58f5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@60df60da]
15:45:32.911 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@61fe30 testClass = PositionServiceForceClosingTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = PositionServiceForceClosingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:45:32.953 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61fe30 testClass = PositionServiceForceClosingTest, testInstance = tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest@4f9a2c08, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = PositionServiceForceClosingTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:45:32.967 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:45:32.969 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:45:33 - Starting PositionServiceForceClosingTest using Java 11.0.17 on repairnator with PID 34504 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:45:33 - The following profiles are active: schedule-disabled
15:45:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:45:33 - Finished Spring Data repository scanning in 142 ms. Found 5 JPA repository interfaces.
15:45:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:45:33 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:45:34 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:45:34 - HikariPool-1 - Starting...
15:45:34 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:45:34 - HikariPool-1 - Start completed.
15:45:34 - Successfully acquired change log lock
15:45:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:45:35 - Reading from PUBLIC.DATABASECHANGELOG
15:45:35 - Successfully released change log lock
15:45:35 - Successfully acquired change log lock
Skipping auto-registration
15:45:35 - Skipping auto-registration
15:45:35 - Table EXCHANGE_ACCOUNTS created
15:45:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:45:35 - Table STRATEGIES created
15:45:35 - Auto-increment added to STRATEGIES.ID
15:45:35 - Table POSITIONS created
15:45:35 - Auto-increment added to POSITIONS.ID
15:45:35 - Table ORDERS created
15:45:35 - Auto-increment added to ORDERS.ID
15:45:35 - Table TRADES created
15:45:35 - Auto-increment added to TRADES.ID
15:45:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:45:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:45:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:45:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:45:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:45:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:45:35 - Index IDX_STRATEGIES_STRATEGY_ID created
15:45:35 - Index IDX_POSITIONS_POSITION_ID created
15:45:35 - Index IDX_POSITIONS_STATUS created
15:45:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:45:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:45:35 - Index IDX_ORDERS_ORDER_ID created
15:45:35 - Index IDX_TRADES_TRADE_ID created
15:45:35 - Index IDX_TRADES_ORDER_ID created
15:45:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 27ms
15:45:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:45:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:45:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:45:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:45:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:45:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:45:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:45:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:45:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:45:35 - Successfully released change log lock
15:45:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:45:35 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:45:35 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:45:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:45:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:45:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:45:36 - Calling Remote Init...
15:45:36 - ExchangeConfiguration - Dry mode is ON
15:45:37 - Adding account 'main'
15:45:37 - - Adding balance 99.0001 BTC
15:45:37 - Adding account 'savings'
15:45:37 - - Adding balance 1.1 BTC
15:45:37 - - Adding balance 2.2 USDT
15:45:37 - - Adding balance 3.3 ETH
15:45:37 - Adding account 'trade'
15:45:37 - - Adding balance 0.99962937 BTC
15:45:37 - - Adding balance 1000 USDT
15:45:37 - - Adding balance 10 ETH
15:45:37 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:45:37 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:45:37 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:45:37 - StrategyConfiguration - Accounts available : 'main/main'.
15:45:37 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:45:37 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:45:37 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:45:37 - Started PositionServiceForceClosingTest in 4.291 seconds (JVM running for 5.06)
15:45:37 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:45:37 - HikariPool-1 - Shutdown initiated...
15:45:37 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:45:37 - Starting PositionServiceForceClosingTest using Java 11.0.17 on repairnator with PID 34504 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:45:37 - The following profiles are active: schedule-disabled
15:45:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:45:37 - Finished Spring Data repository scanning in 28 ms. Found 5 JPA repository interfaces.
15:45:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:45:37 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:45:37 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:45:37 - HikariPool-2 - Starting...
15:45:37 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:45:37 - HikariPool-2 - Start completed.
15:45:37 - Successfully acquired change log lock
15:45:37 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:45:37 - Reading from PUBLIC.DATABASECHANGELOG
15:45:37 - Successfully released change log lock
15:45:37 - Successfully acquired change log lock
Skipping auto-registration
15:45:37 - Skipping auto-registration
15:45:37 - Table EXCHANGE_ACCOUNTS created
15:45:37 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:45:37 - Table STRATEGIES created
15:45:37 - Auto-increment added to STRATEGIES.ID
15:45:37 - Table POSITIONS created
15:45:37 - Auto-increment added to POSITIONS.ID
15:45:37 - Table ORDERS created
15:45:37 - Auto-increment added to ORDERS.ID
15:45:37 - Table TRADES created
15:45:37 - Auto-increment added to TRADES.ID
15:45:37 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:45:37 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:45:37 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:45:37 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:45:37 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:45:37 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:45:37 - Index IDX_STRATEGIES_STRATEGY_ID created
15:45:37 - Index IDX_POSITIONS_POSITION_ID created
15:45:37 - Index IDX_POSITIONS_STATUS created
15:45:37 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:45:37 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:45:37 - Index IDX_ORDERS_ORDER_ID created
15:45:37 - Index IDX_TRADES_TRADE_ID created
15:45:37 - Index IDX_TRADES_ORDER_ID created
15:45:37 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
15:45:37 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:45:37 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:45:37 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:45:37 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:45:37 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:45:37 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:45:37 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:45:37 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:45:37 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:45:37 - Successfully released change log lock
15:45:37 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:45:37 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:45:37 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:45:37 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:45:38 - Calling Remote Init...
15:45:38 - ExchangeConfiguration - Dry mode is ON
15:45:38 - Adding account 'main'
15:45:38 - - Adding balance 99.0001 BTC
15:45:38 - Adding account 'savings'
15:45:38 - - Adding balance 1.1 BTC
15:45:38 - - Adding balance 2.2 USDT
15:45:38 - - Adding balance 3.3 ETH
15:45:38 - Adding account 'trade'
15:45:38 - - Adding balance 0.99962937 BTC
15:45:38 - - Adding balance 1000 USDT
15:45:38 - - Adding balance 10 ETH
15:45:38 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:45:38 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:45:38 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:45:38 - StrategyConfiguration - Accounts available : 'main/main'.
15:45:38 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:45:38 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:45:38 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:45:38 - Started PositionServiceForceClosingTest in 0.83 seconds (JVM running for 5.911)
15:45:38 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:45:38 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:38 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:45:39 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:45:39 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:45:39 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:40 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0001 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:41 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:42 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:43 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:43 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

15:45:44 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:44 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.0002 ETH, price=0.3 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:45:45 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=0.3 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:46 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:47 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:45:47 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:45:48 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

15:45:48 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.2 BTC, highestGainPrice=0.2 BTC, latestGainPrice=0.2 BTC)

15:45:49 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 USDT, highestGainPrice=0.3 USDT, latestGainPrice=0.3 USDT)

15:45:52 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:45:53 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

15:45:53 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

15:45:54 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31 USDT, latestGainPrice=0.31 USDT)

15:45:57 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

15:45:58 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:45:58 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

15:45:59 - TestableStrategy-onPositionUpdate 012 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31 USDT)

15:45:59 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[])

15:46:00 - TestableStrategy-onPositionStatusUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=null, lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31 USDT)

15:46:00 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31 USDT, fee=0 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:46:01 - TestableStrategy-onPositionUpdate 013 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

15:46:02 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:46:02 - TestableStrategy-onPositionUpdate 014 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

15:46:03 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.31, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

15:46:03 - TestableStrategy-onPositionStatusUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.30000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.30000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000003, closingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=ASK, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=0.31000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00020000 ETH, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.00020000 ETH, price=0.31000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2020-01-08T00:00Z[Etc/UTC])]), lowestGainPrice=0.30000000 USDT, highestGainPrice=0.31000000 USDT, latestGainPrice=0.31000000 USDT)

15:46:03 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[])

15:46:04 - TestableStrategy-onPositionUpdate 015 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

15:46:04 - TestableStrategy-onTradeUpdate 004 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.21 BTC, fee=0 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:46:05 - TestableStrategy-onPositionStatusUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=null, lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21 BTC)

15:46:06 - TestableStrategy-onPositionUpdate 016 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSING, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21000000 BTC)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 34.623 s - in tech.cassandre.trading.bot.test.service.dry.PositionServiceForceClosingTest
15:46:07 - TestableStrategy-onPositionUpdate 017 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=CLOSED, forceClosing=true, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000004, closingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=ASK, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=0.21000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00010000 ETH, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.21000000 BTC, fee=0E-8 BTC, userReference=null, timestamp=2020-01-05T00:00Z[Etc/UTC])]), lowestGainPrice=0.20000000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=0.21000000 BTC)

15:46:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:07 - HikariPool-2 - Shutdown initiated...
15:46:07 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
15:46:08.272 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:46:08.279 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:46:08.303 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:46:08.311 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest], using SpringBootContextLoader
15:46:08.313 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/TradeServiceDryModeTest-context.xml] does not exist
15:46:08.313 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: class path resource [tech/cassandre/trading/bot/test/service/dry/TradeServiceDryModeTestContext.groovy] does not exist
15:46:08.313 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:46:08.314 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: TradeServiceDryModeTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:46:08.394 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:46:08.395 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
15:46:08.448 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest]: using defaults.
15:46:08.449 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:46:08.454 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:46:08.460 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6af9fcb2, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6cce16f4, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7efaad5a, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@291a7e3c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@ca30bc1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1046d517, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b7d3a38, org.springframework.test.context.event.EventPublishingTestExecutionListener@416c58f5, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@60df60da]
15:46:08.461 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@61fe30 testClass = TradeServiceDryModeTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = TradeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:46:08.501 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61fe30 testClass = TradeServiceDryModeTest, testInstance = tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest@4f9a2c08, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@c9d0d6 testClass = TradeServiceDryModeTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@6ccdb29f key = [tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@57cf54e1, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@434a63ab, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@273e7444, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@2ea6137], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:46:08.514 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:46:08.521 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:08 - Starting TradeServiceDryModeTest using Java 11.0.17 on repairnator with PID 35647 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:08 - The following profiles are active: schedule-disabled
15:46:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:09 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
15:46:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:09 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:09 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:09 - HikariPool-1 - Starting...
15:46:09 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:09 - HikariPool-1 - Start completed.
15:46:10 - Successfully acquired change log lock
15:46:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:10 - Reading from PUBLIC.DATABASECHANGELOG
15:46:10 - Successfully released change log lock
15:46:10 - Successfully acquired change log lock
Skipping auto-registration
15:46:10 - Skipping auto-registration
15:46:10 - Table EXCHANGE_ACCOUNTS created
15:46:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:10 - Table STRATEGIES created
15:46:10 - Auto-increment added to STRATEGIES.ID
15:46:10 - Table POSITIONS created
15:46:10 - Auto-increment added to POSITIONS.ID
15:46:10 - Table ORDERS created
15:46:10 - Auto-increment added to ORDERS.ID
15:46:10 - Table TRADES created
15:46:10 - Auto-increment added to TRADES.ID
15:46:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:10 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:10 - Index IDX_POSITIONS_POSITION_ID created
15:46:10 - Index IDX_POSITIONS_STATUS created
15:46:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:10 - Index IDX_ORDERS_ORDER_ID created
15:46:10 - Index IDX_TRADES_TRADE_ID created
15:46:10 - Index IDX_TRADES_ORDER_ID created
15:46:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:46:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:46:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:46:10 - Successfully released change log lock
15:46:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:10 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:46:10 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:46:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:11 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:12 - Calling Remote Init...
15:46:12 - ExchangeConfiguration - Dry mode is ON
15:46:12 - Adding account 'main'
15:46:12 - - Adding balance 99.0001 BTC
15:46:12 - Adding account 'savings'
15:46:12 - - Adding balance 1.1 BTC
15:46:12 - - Adding balance 2.2 USDT
15:46:12 - - Adding balance 3.3 ETH
15:46:12 - Adding account 'trade'
15:46:12 - - Adding balance 0.99962937 BTC
15:46:12 - - Adding balance 1000 USDT
15:46:12 - - Adding balance 10 ETH
15:46:12 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:12 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:46:12 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:12 - StrategyConfiguration - Accounts available : 'main/main'.
15:46:12 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:46:12 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:46:12 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:12 - Started TradeServiceDryModeTest in 4.13 seconds (JVM running for 4.904)
15:46:12 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:12 - HikariPool-1 - Shutdown initiated...
15:46:12 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:12 - Starting TradeServiceDryModeTest using Java 11.0.17 on repairnator with PID 35647 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:12 - The following profiles are active: schedule-disabled
15:46:12 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:12 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:46:12 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:12 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:12 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:12 - HikariPool-2 - Starting...
15:46:12 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:12 - HikariPool-2 - Start completed.
15:46:12 - Successfully acquired change log lock
15:46:13 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:13 - Reading from PUBLIC.DATABASECHANGELOG
15:46:13 - Successfully released change log lock
15:46:13 - Successfully acquired change log lock
Skipping auto-registration
15:46:13 - Skipping auto-registration
15:46:13 - Table EXCHANGE_ACCOUNTS created
15:46:13 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:13 - Table STRATEGIES created
15:46:13 - Auto-increment added to STRATEGIES.ID
15:46:13 - Table POSITIONS created
15:46:13 - Auto-increment added to POSITIONS.ID
15:46:13 - Table ORDERS created
15:46:13 - Auto-increment added to ORDERS.ID
15:46:13 - Table TRADES created
15:46:13 - Auto-increment added to TRADES.ID
15:46:13 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:13 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:13 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:13 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:13 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:13 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:13 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:13 - Index IDX_POSITIONS_POSITION_ID created
15:46:13 - Index IDX_POSITIONS_STATUS created
15:46:13 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:13 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:13 - Index IDX_ORDERS_ORDER_ID created
15:46:13 - Index IDX_TRADES_TRADE_ID created
15:46:13 - Index IDX_TRADES_ORDER_ID created
15:46:13 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
15:46:13 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:13 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:13 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:13 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:13 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:13 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:13 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:46:13 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:13 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:46:13 - Successfully released change log lock
15:46:13 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:13 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:13 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:13 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:13 - Calling Remote Init...
15:46:13 - ExchangeConfiguration - Dry mode is ON
15:46:13 - Adding account 'main'
15:46:13 - - Adding balance 99.0001 BTC
15:46:13 - Adding account 'savings'
15:46:13 - - Adding balance 1.1 BTC
15:46:13 - - Adding balance 2.2 USDT
15:46:13 - - Adding balance 3.3 ETH
15:46:13 - Adding account 'trade'
15:46:13 - - Adding balance 0.99962937 BTC
15:46:13 - - Adding balance 1000 USDT
15:46:13 - - Adding balance 10 ETH
15:46:13 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:13 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:46:13 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:13 - StrategyConfiguration - Accounts available : 'main/main'.
15:46:13 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:46:13 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:46:13 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:13 - Started TradeServiceDryModeTest in 0.83 seconds (JVM running for 5.76)
15:46:13 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:13.248226Z[Etc/UTC])

15:46:14 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.001 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 ETH, userReference=null, timestamp=2023-01-13T15:46:13.248226Z[Etc/UTC], trades=[])

15:46:14 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00100000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 ETH, userReference=null, timestamp=2023-01-13T15:46:13.248Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.001 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:46:13.248226Z[Etc/UTC])

15:46:16 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.002 ETH, averagePrice=0.2 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.002 ETH, userReference=null, timestamp=2023-01-13T15:46:13.248226Z[Etc/UTC], trades=[])

15:46:16 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=ASK, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00200000 ETH, averagePrice=0.20000000 BTC, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00200000 ETH, userReference=null, timestamp=2023-01-13T15:46:13.248Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.002 ETH, price=0.2 BTC, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:46:13.248226Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 14.356 s - in tech.cassandre.trading.bot.test.service.dry.TradeServiceDryModeTest
15:46:22 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:22 - HikariPool-2 - Shutdown initiated...
15:46:22 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
15:46:23.565 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:46:23.572 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:46:23.596 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:46:23.603 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest], using SpringBootContextLoader
15:46:23.606 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionGainsServiceTest-context.xml] does not exist
15:46:23.606 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionGainsServiceTestContext.groovy] does not exist
15:46:23.606 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:46:23.607 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: PositionGainsServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:46:23.679 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:46:23.680 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
15:46:23.733 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest]: using defaults.
15:46:23.734 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:46:23.739 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:46:23.744 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59a008ba, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@338c99c8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@21ba0741, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@58ce9668, org.springframework.test.context.support.DirtiesContextTestExecutionListener@172b013, org.springframework.test.context.transaction.TransactionalTestExecutionListener@56673b2c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2796aeae, org.springframework.test.context.event.EventPublishingTestExecutionListener@b4711e2, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@70f02c32, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@51fadaff, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@401f7633, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@31ff43be]
15:46:23.746 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@492691d7 testClass = PositionGainsServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@27216cd testClass = PositionGainsServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3bf9ce3e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@383bfa16, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@48f278eb, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1af2d44a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7c711375, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:46:23.757 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@492691d7 testClass = PositionGainsServiceTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest@13ad5cd3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@27216cd testClass = PositionGainsServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@3bf9ce3e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@383bfa16, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@48f278eb, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1af2d44a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@7c711375, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@57175e74], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:46:23.770 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:46:23.773 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:23 - Starting PositionGainsServiceTest using Java 11.0.17 on repairnator with PID 36515 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:23 - The following profiles are active: schedule-disabled
15:46:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:24 - Finished Spring Data repository scanning in 120 ms. Found 5 JPA repository interfaces.
15:46:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:24 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:24 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:24 - HikariPool-1 - Starting...
15:46:25 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:25 - HikariPool-1 - Start completed.
15:46:25 - Successfully acquired change log lock
15:46:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:25 - Reading from PUBLIC.DATABASECHANGELOG
15:46:25 - Successfully released change log lock
15:46:25 - Successfully acquired change log lock
Skipping auto-registration
15:46:25 - Skipping auto-registration
15:46:25 - Table EXCHANGE_ACCOUNTS created
15:46:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:25 - Table STRATEGIES created
15:46:25 - Auto-increment added to STRATEGIES.ID
15:46:25 - Table POSITIONS created
15:46:25 - Auto-increment added to POSITIONS.ID
15:46:25 - Table ORDERS created
15:46:25 - Auto-increment added to ORDERS.ID
15:46:25 - Table TRADES created
15:46:25 - Auto-increment added to TRADES.ID
15:46:25 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:25 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:25 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:25 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:25 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:25 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:25 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:25 - Index IDX_POSITIONS_POSITION_ID created
15:46:25 - Index IDX_POSITIONS_STATUS created
15:46:25 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:25 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:25 - Index IDX_ORDERS_ORDER_ID created
15:46:25 - Index IDX_TRADES_TRADE_ID created
15:46:25 - Index IDX_TRADES_ORDER_ID created
15:46:25 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:46:25 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:25 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:25 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:25 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:25 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:25 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:25 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:46:25 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:25 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:46:25 - Successfully released change log lock
15:46:25 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:25 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:46:26 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:46:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:27 - Calling Remote Init...
15:46:27 - ExchangeConfiguration - Dry mode is OFF
15:46:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:27 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:46:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:27 - StrategyConfiguration - Accounts available : 'null/null'.
15:46:27 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:27 - Started PositionGainsServiceTest in 4.215 seconds (JVM running for 4.972)
15:46:28 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=4, positionId=4, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, rules=No rules, status=OPENED, forceClosing=false, openingOrderId=OPEN_ORDER_04, openingOrder=OrderDTO(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=10, tradeId=TRADE_41, type=BID, orderId=OPEN_ORDER_04, order=Order(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=50.00000000 BTC, price=20.00000000 USDT, fee=6.00000000 USDT, userReference=null, timestamp=2020-08-05T00:00Z[Etc/UTC])]), closingOrderId=CLOSE_ORDER_04, closingOrder=OrderDTO(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=TRADE_42, type=ASK, orderId=CLOSE_ORDER_04, order=Order(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=50.00000000 BTC, price=25.00000000 USDT, fee=5.00000000 USDT, userReference=null, timestamp=2020-08-06T00:00Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:28 - HikariPool-1 - Shutdown initiated...
15:46:28 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:28 - Starting PositionGainsServiceTest using Java 11.0.17 on repairnator with PID 36515 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:28 - The following profiles are active: schedule-disabled
15:46:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:28 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:46:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:28 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:28 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:28 - HikariPool-2 - Starting...
15:46:28 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:28 - HikariPool-2 - Start completed.
15:46:28 - Successfully acquired change log lock
15:46:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:28 - Reading from PUBLIC.DATABASECHANGELOG
15:46:28 - Successfully released change log lock
15:46:28 - Successfully acquired change log lock
Skipping auto-registration
15:46:28 - Skipping auto-registration
15:46:28 - Table EXCHANGE_ACCOUNTS created
15:46:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:28 - Table STRATEGIES created
15:46:28 - Auto-increment added to STRATEGIES.ID
15:46:28 - Table POSITIONS created
15:46:28 - Auto-increment added to POSITIONS.ID
15:46:28 - Table ORDERS created
15:46:28 - Auto-increment added to ORDERS.ID
15:46:28 - Table TRADES created
15:46:28 - Auto-increment added to TRADES.ID
15:46:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:28 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:28 - Index IDX_POSITIONS_POSITION_ID created
15:46:28 - Index IDX_POSITIONS_STATUS created
15:46:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:28 - Index IDX_ORDERS_ORDER_ID created
15:46:28 - Index IDX_TRADES_TRADE_ID created
15:46:28 - Index IDX_TRADES_ORDER_ID created
15:46:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:46:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:46:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:46:28 - Successfully released change log lock
15:46:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:28 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:28 - Calling Remote Init...
15:46:28 - ExchangeConfiguration - Dry mode is OFF
15:46:28 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:28 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:46:28 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:28 - StrategyConfiguration - Accounts available : 'null/null'.
15:46:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:28 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=4, positionId=4, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, rules=No rules, status=OPENED, forceClosing=false, openingOrderId=OPEN_ORDER_04, openingOrder=OrderDTO(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=10, tradeId=TRADE_41, type=BID, orderId=OPEN_ORDER_04, order=Order(id=7, orderId=OPEN_ORDER_04, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=50.00000000 BTC, price=20.00000000 USDT, fee=6.00000000 USDT, userReference=null, timestamp=2020-08-05T00:00Z[Etc/UTC])]), closingOrderId=CLOSE_ORDER_04, closingOrder=OrderDTO(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=11, tradeId=TRADE_42, type=ASK, orderId=CLOSE_ORDER_04, order=Order(id=8, orderId=CLOSE_ORDER_04, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=50.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=NEW, cumulativeAmount=10.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=50.00000000 BTC, price=25.00000000 USDT, fee=5.00000000 USDT, userReference=null, timestamp=2020-08-06T00:00Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:28 - Started PositionGainsServiceTest in 0.821 seconds (JVM running for 5.821)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.388 s - in tech.cassandre.trading.bot.test.service.xchange.PositionGainsServiceTest
15:46:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:28 - HikariPool-2 - Shutdown initiated...
15:46:28 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
15:46:29.979 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:46:29.990 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:46:30.022 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:46:30.029 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest], using SpringBootContextLoader
15:46:30.031 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionServiceTest-context.xml] does not exist
15:46:30.032 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/PositionServiceTestContext.groovy] does not exist
15:46:30.032 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:46:30.033 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: PositionServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:46:30.137 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:46:30.138 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
15:46:30.217 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest]: using defaults.
15:46:30.218 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:46:30.223 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:46:30.228 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@14fc1f0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@4ae9cfc1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@512baff6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@632ceb35, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1c93f6e1, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1800a575, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1458ed9c, org.springframework.test.context.event.EventPublishingTestExecutionListener@10a9d961, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@130e116b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@e383572, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5ddf0d24, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@363a52f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@60856961, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2fd953a6]
15:46:30.230 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@56928307 testClass = PositionServiceTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899782c testClass = PositionServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1603cd68 key = [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53ce1329, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3e11f9e9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@61001b64, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@55634720, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@60bd273d, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6ee12bac], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:46:30.270 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@56928307 testClass = PositionServiceTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest@344f4dea, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3899782c testClass = PositionServiceTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1603cd68 key = [tech.cassandre.trading.bot.test.service.xchange.PositionServiceTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@53ce1329, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3e11f9e9, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@61001b64, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@55634720, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@60bd273d, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@6ee12bac], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:46:30.284 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:46:30.287 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:30 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:30 - The following profiles are active: schedule-disabled
15:46:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:31 - Finished Spring Data repository scanning in 118 ms. Found 5 JPA repository interfaces.
15:46:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:31 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:31 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:31 - HikariPool-1 - Starting...
15:46:31 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:31 - HikariPool-1 - Start completed.
15:46:31 - Successfully acquired change log lock
15:46:32 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:32 - Reading from PUBLIC.DATABASECHANGELOG
15:46:32 - Successfully released change log lock
15:46:32 - Successfully acquired change log lock
Skipping auto-registration
15:46:32 - Skipping auto-registration
15:46:32 - Table EXCHANGE_ACCOUNTS created
15:46:32 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:32 - Table STRATEGIES created
15:46:32 - Auto-increment added to STRATEGIES.ID
15:46:32 - Table POSITIONS created
15:46:32 - Auto-increment added to POSITIONS.ID
15:46:32 - Table ORDERS created
15:46:32 - Auto-increment added to ORDERS.ID
15:46:32 - Table TRADES created
15:46:32 - Auto-increment added to TRADES.ID
15:46:32 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:32 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:32 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:32 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:32 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:32 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:32 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:32 - Index IDX_POSITIONS_POSITION_ID created
15:46:32 - Index IDX_POSITIONS_STATUS created
15:46:32 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:32 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:32 - Index IDX_ORDERS_ORDER_ID created
15:46:32 - Index IDX_TRADES_TRADE_ID created
15:46:32 - Index IDX_TRADES_ORDER_ID created
15:46:32 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
15:46:32 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:32 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:32 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:32 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:32 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:32 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:32 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 4ms
15:46:32 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:32 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 4ms
15:46:32 - Successfully released change log lock
15:46:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:32 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:46:32 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:46:32 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:33 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:34 - Calling Remote Init...
15:46:34 - ExchangeConfiguration - Dry mode is OFF
15:46:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:34 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:46:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:34 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:46:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:34 - Started PositionServiceTest in 4.164 seconds (JVM running for 5.099)
15:46:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:34 - HikariPool-1 - Shutdown initiated...
15:46:34 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:34 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:34 - The following profiles are active: schedule-disabled
15:46:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:34 - Finished Spring Data repository scanning in 26 ms. Found 5 JPA repository interfaces.
15:46:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:34 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:46:34 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:34 - HikariPool-2 - Starting...
15:46:34 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:34 - HikariPool-2 - Start completed.
15:46:34 - Successfully acquired change log lock
15:46:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:34 - Reading from PUBLIC.DATABASECHANGELOG
15:46:34 - Successfully released change log lock
15:46:34 - Successfully acquired change log lock
Skipping auto-registration
15:46:34 - Skipping auto-registration
15:46:34 - Table EXCHANGE_ACCOUNTS created
15:46:34 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:34 - Table STRATEGIES created
15:46:34 - Auto-increment added to STRATEGIES.ID
15:46:34 - Table POSITIONS created
15:46:34 - Auto-increment added to POSITIONS.ID
15:46:34 - Table ORDERS created
15:46:34 - Auto-increment added to ORDERS.ID
15:46:34 - Table TRADES created
15:46:34 - Auto-increment added to TRADES.ID
15:46:34 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:34 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:34 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:34 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:34 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:34 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:34 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:34 - Index IDX_POSITIONS_POSITION_ID created
15:46:34 - Index IDX_POSITIONS_STATUS created
15:46:34 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:34 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:34 - Index IDX_ORDERS_ORDER_ID created
15:46:34 - Index IDX_TRADES_TRADE_ID created
15:46:34 - Index IDX_TRADES_ORDER_ID created
15:46:34 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:46:34 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:34 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:34 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:34 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:34 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:34 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:34 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:46:34 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:34 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:46:34 - Successfully released change log lock
15:46:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:34 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:34 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:35 - Calling Remote Init...
15:46:35 - ExchangeConfiguration - Dry mode is OFF
15:46:35 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:35 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:46:35 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:35 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:46:35 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:35 - Started PositionServiceTest in 0.748 seconds (JVM running for 5.871)
15:46:35 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:35 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240948Z[Etc/UTC], trades=[])

15:46:36 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:37 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240948Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:38 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

15:46:38 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:39 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:39 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/USDT, open=null, last=0.5, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:39.379398Z[Etc/UTC])

15:46:44 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:44.389904Z[Etc/UTC])

15:46:45 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:35.240Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.3 BTC, highestGainPrice=0.3 BTC, latestGainPrice=0.3 BTC)

15:46:49 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:46:49 - HikariPool-2 - Shutdown initiated...
15:46:49 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:46:49 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:46:49 - The following profiles are active: schedule-disabled
15:46:49 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:49 - Finished Spring Data repository scanning in 16 ms. Found 5 JPA repository interfaces.
15:46:49 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:46:49 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:46:49 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:46:49 - HikariPool-3 - Starting...
15:46:49 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:46:49 - HikariPool-3 - Start completed.
15:46:49 - Successfully acquired change log lock
15:46:49 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:46:49 - Reading from PUBLIC.DATABASECHANGELOG
15:46:49 - Successfully released change log lock
15:46:49 - Successfully acquired change log lock
Skipping auto-registration
15:46:49 - Skipping auto-registration
15:46:49 - Table EXCHANGE_ACCOUNTS created
15:46:49 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:46:49 - Table STRATEGIES created
15:46:49 - Auto-increment added to STRATEGIES.ID
15:46:49 - Table POSITIONS created
15:46:49 - Auto-increment added to POSITIONS.ID
15:46:49 - Table ORDERS created
15:46:49 - Auto-increment added to ORDERS.ID
15:46:49 - Table TRADES created
15:46:49 - Auto-increment added to TRADES.ID
15:46:49 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:46:49 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:46:49 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:46:49 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:46:49 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:46:49 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:46:49 - Index IDX_STRATEGIES_STRATEGY_ID created
15:46:49 - Index IDX_POSITIONS_POSITION_ID created
15:46:49 - Index IDX_POSITIONS_STATUS created
15:46:49 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:46:49 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:46:49 - Index IDX_ORDERS_ORDER_ID created
15:46:49 - Index IDX_TRADES_TRADE_ID created
15:46:49 - Index IDX_TRADES_ORDER_ID created
15:46:49 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 14ms
15:46:49 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:46:49 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:46:49 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:46:49 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:46:49 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:46:49 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:46:49 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:46:49 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:46:49 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:46:49 - Successfully released change log lock
15:46:49 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:46:49 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:46:49 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:46:49 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:46:50 - Calling Remote Init...
15:46:50 - ExchangeConfiguration - Dry mode is OFF
15:46:50 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:46:50 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:46:50 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:46:50 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:46:50 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:46:50 - Started PositionServiceTest in 0.625 seconds (JVM running for 20.701)
15:46:50 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:50 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059169Z[Etc/UTC], trades=[])

15:46:51 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:52 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059169Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:52 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:52.089595Z[Etc/UTC])

15:46:53 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.000001, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:53.091536Z[Etc/UTC])

15:46:57 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10 ETH, price=0.03 BTC, fee=null, userReference=null, timestamp=null)

15:46:57 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:58 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.18, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:46:58.129388Z[Etc/UTC])

15:46:58 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:46:59 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.18 BTC, highestGainPrice=0.18 BTC, latestGainPrice=0.18 BTC)

15:47:03 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.06, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:03.134738Z[Etc/UTC])

15:47:04 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.06 BTC)

15:47:08 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.09, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:08.141818Z[Etc/UTC])

15:47:09 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.06000000 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.09 BTC)

15:47:13 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.015, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:13.148068Z[Etc/UTC])

15:47:14 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.015 BTC, highestGainPrice=0.18000000 BTC, latestGainPrice=0.015 BTC)

15:47:18 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.21, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:18.154465Z[Etc/UTC])

15:47:19 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21 BTC, latestGainPrice=0.21 BTC)

15:47:23 - TestableStrategy-onTickerUpdate 008 : TickerDTO(currencyPair=ETH/BTC, open=null, last=100, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:23.161140Z[Etc/UTC])

15:47:24 - TestableStrategy-onPositionUpdate 009 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

15:47:25 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=null, lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100 BTC)

15:47:28 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168915Z[Etc/UTC], trades=[])

15:47:28 - TestableStrategy-onPositionUpdate 010 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168915Z[Etc/UTC], trades=[]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:47:29 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, order=Order(id=2, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10 ETH, price=20 BTC, fee=null, userReference=null, timestamp=null)

15:47:29 - TestableStrategy-onPositionUpdate 011 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, order=Order(id=2, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=20.00000000 BTC, fee=null, userReference=null, timestamp=null)]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:47:30 - TestableStrategy-onTickerUpdate 009 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.27, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:30.194948Z[Etc/UTC])

15:47:30 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, rules=Stop gain at 1,000 % / Stop loss at 100 %, status=CLOSED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000001, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:46:50.059Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=0.03000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=ORDER00011, closingOrder=OrderDTO(id=2, orderId=ORDER00011, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000002, type=ASK, orderId=ORDER00011, order=Order(id=2, orderId=ORDER00011, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=10.00000000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:24.168Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=10.00000000 ETH, price=20.00000000 BTC, fee=null, userReference=null, timestamp=null)]), lowestGainPrice=0.01500000 BTC, highestGainPrice=0.21000000 BTC, latestGainPrice=100.00000000 BTC)

15:47:35 - TestableStrategy-onTickerUpdate 010 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.003, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:47:35.200580Z[Etc/UTC])

15:47:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:40 - HikariPool-3 - Shutdown initiated...
15:47:40 - HikariPool-3 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:40 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:40 - The following profiles are active: schedule-disabled
15:47:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:40 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
15:47:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:40 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:47:40 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:40 - HikariPool-4 - Starting...
15:47:40 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:40 - HikariPool-4 - Start completed.
15:47:40 - Successfully acquired change log lock
15:47:40 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:40 - Reading from PUBLIC.DATABASECHANGELOG
15:47:40 - Successfully released change log lock
15:47:40 - Successfully acquired change log lock
Skipping auto-registration
15:47:40 - Skipping auto-registration
15:47:40 - Table EXCHANGE_ACCOUNTS created
15:47:40 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:40 - Table STRATEGIES created
15:47:40 - Auto-increment added to STRATEGIES.ID
15:47:40 - Table POSITIONS created
15:47:40 - Auto-increment added to POSITIONS.ID
15:47:40 - Table ORDERS created
15:47:40 - Auto-increment added to ORDERS.ID
15:47:40 - Table TRADES created
15:47:40 - Auto-increment added to TRADES.ID
15:47:40 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:40 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:40 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:40 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:40 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:40 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:40 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:40 - Index IDX_POSITIONS_POSITION_ID created
15:47:40 - Index IDX_POSITIONS_STATUS created
15:47:40 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:40 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:40 - Index IDX_ORDERS_ORDER_ID created
15:47:40 - Index IDX_TRADES_TRADE_ID created
15:47:40 - Index IDX_TRADES_ORDER_ID created
15:47:40 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 14ms
15:47:40 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:40 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:40 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:40 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:40 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:40 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:40 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:40 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:40 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:47:40 - Successfully released change log lock
15:47:40 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:40 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:40 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:40 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:40 - Calling Remote Init...
15:47:40 - ExchangeConfiguration - Dry mode is OFF
15:47:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:40 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:40 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:40 - Started PositionServiceTest in 0.567 seconds (JVM running for 71.435)
15:47:40 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:40 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791859Z[Etc/UTC], trades=[])

15:47:41 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:42 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791859Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:42 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827573Z[Etc/UTC], trades=[])

15:47:43 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:44 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:45 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827573Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:45 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=null, fee=null, userReference=null, timestamp=null)

15:47:46 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:46 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0002 ETH, price=null, fee=null, userReference=null, timestamp=null)

15:47:47 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:40.791Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:47 - HikariPool-4 - Shutdown initiated...
15:47:47 - HikariPool-4 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:47 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:47 - The following profiles are active: schedule-disabled
15:47:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:48 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
15:47:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:48 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:47:48 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:48 - HikariPool-5 - Starting...
15:47:48 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:48 - HikariPool-5 - Start completed.
15:47:48 - Successfully acquired change log lock
15:47:48 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:48 - Reading from PUBLIC.DATABASECHANGELOG
15:47:48 - Successfully released change log lock
15:47:48 - Successfully acquired change log lock
Skipping auto-registration
15:47:48 - Skipping auto-registration
15:47:48 - Table EXCHANGE_ACCOUNTS created
15:47:48 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:48 - Table STRATEGIES created
15:47:48 - Auto-increment added to STRATEGIES.ID
15:47:48 - Table POSITIONS created
15:47:48 - Auto-increment added to POSITIONS.ID
15:47:48 - Table ORDERS created
15:47:48 - Auto-increment added to ORDERS.ID
15:47:48 - Table TRADES created
15:47:48 - Auto-increment added to TRADES.ID
15:47:48 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:48 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:48 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:48 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:48 - Index IDX_POSITIONS_POSITION_ID created
15:47:48 - Index IDX_POSITIONS_STATUS created
15:47:48 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:48 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:48 - Index IDX_ORDERS_ORDER_ID created
15:47:48 - Index IDX_TRADES_TRADE_ID created
15:47:48 - Index IDX_TRADES_ORDER_ID created
15:47:48 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 13ms
15:47:48 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:48 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:48 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:48 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:48 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:48 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:47:48 - Successfully released change log lock
15:47:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:48 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:48 - Calling Remote Init...
15:47:48 - ExchangeConfiguration - Dry mode is OFF
15:47:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:48 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:48 - Started PositionServiceTest in 0.49 seconds (JVM running for 79.057)
15:47:48 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

java.lang.RuntimeException: Error exception
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createMarketOrder(TradeServiceXChangeImplementation.java:86)
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createBuyMarketOrder(TradeServiceXChangeImplementation.java:168)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createPosition(PositionServiceImplementation.java:113)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createLongPosition(PositionServiceImplementation.java:83)
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.createLongPosition(GenericCassandreStrategy.java:496)
	at tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest.checkCreatePosition(PositionServiceTest.java:116)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
15:47:48 - TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
15:47:48 - PositionService - Position creation failure : TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
15:47:48 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:48 - HikariPool-5 - Shutdown initiated...
15:47:48 - HikariPool-5 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:48 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:48 - The following profiles are active: schedule-disabled
15:47:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:48 - Finished Spring Data repository scanning in 13 ms. Found 5 JPA repository interfaces.
15:47:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:48 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:47:48 - HikariPool-6 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:48 - HikariPool-6 - Starting...
15:47:48 - HikariPool-6 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:48 - HikariPool-6 - Start completed.
15:47:48 - Successfully acquired change log lock
15:47:48 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:48 - Reading from PUBLIC.DATABASECHANGELOG
15:47:48 - Successfully released change log lock
15:47:48 - Successfully acquired change log lock
Skipping auto-registration
15:47:48 - Skipping auto-registration
15:47:48 - Table EXCHANGE_ACCOUNTS created
15:47:48 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:48 - Table STRATEGIES created
15:47:48 - Auto-increment added to STRATEGIES.ID
15:47:48 - Table POSITIONS created
15:47:48 - Auto-increment added to POSITIONS.ID
15:47:48 - Table ORDERS created
15:47:48 - Auto-increment added to ORDERS.ID
15:47:48 - Table TRADES created
15:47:48 - Auto-increment added to TRADES.ID
15:47:48 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:48 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:48 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:48 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:48 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:48 - Index IDX_POSITIONS_POSITION_ID created
15:47:48 - Index IDX_POSITIONS_STATUS created
15:47:48 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:48 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:48 - Index IDX_ORDERS_ORDER_ID created
15:47:48 - Index IDX_TRADES_TRADE_ID created
15:47:48 - Index IDX_TRADES_ORDER_ID created
15:47:48 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 13ms
15:47:48 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:48 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:48 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:48 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:48 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:48 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:48 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:47:48 - Successfully released change log lock
15:47:48 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:48 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:48 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:48 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:48 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00020000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:48 - Calling Remote Init...
15:47:48 - ExchangeConfiguration - Dry mode is OFF
15:47:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:48 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:48 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:48 - Started PositionServiceTest in 0.456 seconds (JVM running for 79.557)
15:47:48 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:48 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914488Z[Etc/UTC], trades=[])

15:47:49 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:49 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=000003, type=BID, orderId=ORDER00020, order=Order(id=2, orderId=ORDER00020, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/USDT, amount=0.00020000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:42.827Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00020000 ETH, price=null, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:49 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:50 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:50 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914488Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:50 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

15:47:51 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:51 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:52 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-13T15:47:51.987311Z[Etc/UTC], trades=[])

15:47:52 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:53 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:53 - HikariPool-6 - Shutdown initiated...
15:47:53 - HikariPool-6 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:53 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:53 - The following profiles are active: schedule-disabled
15:47:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:53 - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
15:47:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:53 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:47:53 - HikariPool-7 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:53 - HikariPool-7 - Starting...
15:47:53 - HikariPool-7 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:53 - HikariPool-7 - Start completed.
15:47:53 - Successfully acquired change log lock
15:47:53 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:53 - Reading from PUBLIC.DATABASECHANGELOG
15:47:53 - Successfully released change log lock
15:47:53 - Successfully acquired change log lock
Skipping auto-registration
15:47:53 - Skipping auto-registration
15:47:53 - Table EXCHANGE_ACCOUNTS created
15:47:53 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:53 - Table STRATEGIES created
15:47:53 - Auto-increment added to STRATEGIES.ID
15:47:53 - Table POSITIONS created
15:47:53 - Auto-increment added to POSITIONS.ID
15:47:53 - Table ORDERS created
15:47:53 - Auto-increment added to ORDERS.ID
15:47:53 - Table TRADES created
15:47:53 - Auto-increment added to TRADES.ID
15:47:53 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:53 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:53 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:53 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:53 - Index IDX_POSITIONS_POSITION_ID created
15:47:53 - Index IDX_POSITIONS_STATUS created
15:47:53 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:53 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:53 - Index IDX_ORDERS_ORDER_ID created
15:47:53 - Index IDX_TRADES_TRADE_ID created
15:47:53 - Index IDX_TRADES_ORDER_ID created
15:47:53 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 12ms
15:47:53 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:53 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:53 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:53 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:53 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:53 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:47:53 - Successfully released change log lock
15:47:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:53 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:53 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:53 - Calling Remote Init...
15:47:53 - ExchangeConfiguration - Dry mode is OFF
15:47:53 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:53 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:53 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:53 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:53 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:53 - Started PositionServiceTest in 0.459 seconds (JVM running for 84.121)
15:47:53 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

java.lang.RuntimeException: Error exception
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createMarketOrder(TradeServiceXChangeImplementation.java:86)
	at tech.cassandre.trading.bot.service.xchange.TradeServiceXChangeImplementation.createBuyMarketOrder(TradeServiceXChangeImplementation.java:168)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createPosition(PositionServiceImplementation.java:113)
	at tech.cassandre.trading.bot.service.intern.PositionServiceImplementation.createLongPosition(PositionServiceImplementation.java:83)
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.createLongPosition(GenericCassandreStrategy.java:496)
	at tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest.checkGetPosition(PositionServiceTest.java:474)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
15:47:53 - TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
15:47:53 - PositionService - Position creation failure : TradeService - Error calling createBuyMarketOrder for 0.0003 ETH/BTC : Error exception
15:47:53 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:53 - HikariPool-7 - Shutdown initiated...
15:47:53 - HikariPool-7 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:53 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:53 - The following profiles are active: schedule-disabled
15:47:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:53 - Finished Spring Data repository scanning in 12 ms. Found 5 JPA repository interfaces.
15:47:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:53 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:47:53 - HikariPool-8 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:53 - HikariPool-8 - Starting...
15:47:53 - HikariPool-8 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:53 - HikariPool-8 - Start completed.
15:47:53 - Successfully acquired change log lock
15:47:53 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:53 - Reading from PUBLIC.DATABASECHANGELOG
15:47:53 - Successfully released change log lock
15:47:53 - Successfully acquired change log lock
Skipping auto-registration
15:47:53 - Skipping auto-registration
15:47:53 - Table EXCHANGE_ACCOUNTS created
15:47:53 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:53 - Table STRATEGIES created
15:47:53 - Auto-increment added to STRATEGIES.ID
15:47:53 - Table POSITIONS created
15:47:53 - Auto-increment added to POSITIONS.ID
15:47:53 - Table ORDERS created
15:47:53 - Auto-increment added to ORDERS.ID
15:47:53 - Table TRADES created
15:47:53 - Auto-increment added to TRADES.ID
15:47:53 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:53 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:53 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:53 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:53 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:53 - Index IDX_POSITIONS_POSITION_ID created
15:47:53 - Index IDX_POSITIONS_STATUS created
15:47:53 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:53 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:53 - Index IDX_ORDERS_ORDER_ID created
15:47:53 - Index IDX_TRADES_TRADE_ID created
15:47:53 - Index IDX_TRADES_ORDER_ID created
15:47:53 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 12ms
15:47:53 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:53 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:53 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:53 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:53 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:53 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:53 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:47:53 - Successfully released change log lock
15:47:53 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:53 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:53 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:53 - Calling Remote Init...
15:47:53 - ExchangeConfiguration - Dry mode is OFF
15:47:53 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:53 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:53 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:53 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:53 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:53 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:53 - Started PositionServiceTest in 0.434 seconds (JVM running for 84.589)
15:47:53 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:53 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:53.945537Z[Etc/UTC], trades=[])

15:47:54 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:54 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:54 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:55 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:55 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-13T15:47:51.987311Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:55 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:53.945537Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:55 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:55.970508Z[Etc/UTC], trades=[])

15:47:56 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:56 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:48.914Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=2, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=CANCELED, cumulativeAmount=0.0002 ETH, userReference=null, timestamp=2023-01-13T15:47:51.987311Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:56 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:55.970508Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:47:56 - HikariPool-8 - Shutdown initiated...
15:47:56 - HikariPool-8 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:47:57 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:47:57 - The following profiles are active: schedule-disabled
15:47:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:57 - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
15:47:57 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:47:57 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:47:57 - HikariPool-9 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:47:57 - HikariPool-9 - Starting...
15:47:57 - HikariPool-9 - Driver does not support get/set network timeout for connections. (feature not supported)
15:47:57 - HikariPool-9 - Start completed.
15:47:57 - Successfully acquired change log lock
15:47:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:47:57 - Reading from PUBLIC.DATABASECHANGELOG
15:47:57 - Successfully released change log lock
15:47:57 - Successfully acquired change log lock
Skipping auto-registration
15:47:57 - Skipping auto-registration
15:47:57 - Table EXCHANGE_ACCOUNTS created
15:47:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:47:57 - Table STRATEGIES created
15:47:57 - Auto-increment added to STRATEGIES.ID
15:47:57 - Table POSITIONS created
15:47:57 - Auto-increment added to POSITIONS.ID
15:47:57 - Table ORDERS created
15:47:57 - Auto-increment added to ORDERS.ID
15:47:57 - Table TRADES created
15:47:57 - Auto-increment added to TRADES.ID
15:47:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:47:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:47:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:47:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:47:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:47:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:47:57 - Index IDX_STRATEGIES_STRATEGY_ID created
15:47:57 - Index IDX_POSITIONS_POSITION_ID created
15:47:57 - Index IDX_POSITIONS_STATUS created
15:47:57 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:47:57 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:47:57 - Index IDX_ORDERS_ORDER_ID created
15:47:57 - Index IDX_TRADES_TRADE_ID created
15:47:57 - Index IDX_TRADES_ORDER_ID created
15:47:57 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 11ms
15:47:57 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:47:57 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:47:57 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:47:57 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:47:57 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:47:57 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:47:57 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:47:57 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:47:57 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 0ms
15:47:57 - Successfully released change log lock
15:47:57 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:47:57 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:47:57 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:47:57 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:47:57 - Calling Remote Init...
15:47:57 - ExchangeConfiguration - Dry mode is OFF
15:47:57 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:47:57 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:47:57 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:47:57 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:47:57 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:47:57 - Started PositionServiceTest in 0.404 seconds (JVM running for 88.043)
15:47:57 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:57 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401306Z[Etc/UTC], trades=[])

15:47:57 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING_FAILURE, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00012 ETH, averagePrice=null, limitPrice=null, leverage=null, status=STOPPED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:55.970508Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:58 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:59 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401306Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:47:59 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:59.430674Z[Etc/UTC], trades=[])

15:48:00 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:01 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:02 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.0002 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:59.430674Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:02 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:02.459510Z[Etc/UTC], trades=[])

15:48:03 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=2, positionId=2, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.00020000 ETH, rules=Stop loss at 20 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00020, openingOrder=OrderDTO(id=2, orderId=ORDER00020, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:02.459510Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:03 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

15:48:03 - TestableStrategy-onOrderUpdate 004 : OrderDTO(id=3, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:03.546581Z[Etc/UTC], trades=[])

15:48:04 - TestableStrategy-onPositionUpdate 006 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:05 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:06 - TestableStrategy-onPositionUpdate 007 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:07 - TestableStrategy-onPositionStatusUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:08 - TestableStrategy-onPositionUpdate 008 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 10 %, status=CLOSING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:47:57.401Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=CLOSING_ORDER_01, closingOrder=OrderDTO(id=3, orderId=CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1.00001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:03.546581Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:08 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:48:08 - HikariPool-9 - Shutdown initiated...
15:48:08 - HikariPool-9 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:48:08 - Starting PositionServiceTest using Java 11.0.17 on repairnator with PID 318 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:48:08 - The following profiles are active: schedule-disabled
15:48:08 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:48:08 - Finished Spring Data repository scanning in 11 ms. Found 5 JPA repository interfaces.
15:48:08 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:48:08 - Finished Spring Data repository scanning in 2 ms. Found 5 JPA repository interfaces.
15:48:08 - HikariPool-10 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:48:08 - HikariPool-10 - Starting...
15:48:08 - HikariPool-10 - Driver does not support get/set network timeout for connections. (feature not supported)
15:48:08 - HikariPool-10 - Start completed.
15:48:08 - Successfully acquired change log lock
15:48:08 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:48:08 - Reading from PUBLIC.DATABASECHANGELOG
15:48:08 - Successfully released change log lock
15:48:08 - Successfully acquired change log lock
Skipping auto-registration
15:48:08 - Skipping auto-registration
15:48:08 - Table EXCHANGE_ACCOUNTS created
15:48:08 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:48:08 - Table STRATEGIES created
15:48:08 - Auto-increment added to STRATEGIES.ID
15:48:08 - Table POSITIONS created
15:48:08 - Auto-increment added to POSITIONS.ID
15:48:08 - Table ORDERS created
15:48:08 - Auto-increment added to ORDERS.ID
15:48:08 - Table TRADES created
15:48:08 - Auto-increment added to TRADES.ID
15:48:08 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:48:08 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:48:08 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:48:08 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:48:08 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:48:08 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:48:08 - Index IDX_STRATEGIES_STRATEGY_ID created
15:48:08 - Index IDX_POSITIONS_POSITION_ID created
15:48:08 - Index IDX_POSITIONS_STATUS created
15:48:08 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:48:08 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:48:08 - Index IDX_ORDERS_ORDER_ID created
15:48:08 - Index IDX_TRADES_TRADE_ID created
15:48:08 - Index IDX_TRADES_ORDER_ID created
15:48:08 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 10ms
15:48:08 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:48:08 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:48:08 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:48:08 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:48:08 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:48:08 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:48:08 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:48:08 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:48:08 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:48:08 - Successfully released change log lock
15:48:08 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:48:08 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:48:08 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:48:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:48:08 - Calling Remote Init...
15:48:08 - ExchangeConfiguration - Dry mode is OFF
15:48:08 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:48:08 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:48:08 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:48:08 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:48:08 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:48:08 - Started PositionServiceTest in 0.407 seconds (JVM running for 99.615)
15:48:08 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:09 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972061Z[Etc/UTC], trades=[])

15:48:09 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:10 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENING, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972061Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:11 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.0001 ETH, price=0.2 BTC, fee=null, userReference=null, timestamp=null)

15:48:11 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:12 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 100 % / Stop loss at 90 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:48:17 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, rules=Stop gain at 40 % / Stop loss at 20 %, status=OPENED, forceClosing=false, openingOrderId=ORDER00010, openingOrder=OrderDTO(id=1, orderId=ORDER00010, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=000002, type=BID, orderId=ORDER00010, order=Order(id=1, orderId=ORDER00010, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2023-01-13T15:48:08.972Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.00010000 ETH, price=0.20000000 BTC, fee=null, userReference=null, timestamp=null)]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 117.075 s - in tech.cassandre.trading.bot.test.service.xchange.PositionServiceTest
15:48:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:48:27 - HikariPool-10 - Shutdown initiated...
15:48:27 - HikariPool-10 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.service.xchange.RatesTest
15:48:27.963 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:48:27.970 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:48:28.013 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:48:28.024 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest], using SpringBootContextLoader
15:48:28.027 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/RatesTest-context.xml] does not exist
15:48:28.027 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: class path resource [tech/cassandre/trading/bot/test/service/xchange/RatesTestContext.groovy] does not exist
15:48:28.027 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:48:28.028 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: RatesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:48:28.110 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:48:28.111 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.service.xchange.RatesTest
15:48:28.185 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.service.xchange.RatesTest]: using defaults.
15:48:28.186 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:48:28.193 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:48:28.198 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1fc32e4f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@2f67b837, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1869fbd2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6af9fcb2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6cce16f4, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7efaad5a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@291a7e3c, org.springframework.test.context.event.EventPublishingTestExecutionListener@ca30bc1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@21337f7b]
15:48:28.200 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5f9be66c testClass = RatesTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3abada5a testClass = RatesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66c61024 key = [tech.cassandre.trading.bot.test.service.xchange.RatesTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@e15b7e8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2ed2d9cb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6404f418, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@d9345cd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:48:28.253 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5f9be66c testClass = RatesTest, testInstance = tech.cassandre.trading.bot.test.service.xchange.RatesTest@41709512, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3abada5a testClass = RatesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66c61024 key = [tech.cassandre.trading.bot.test.service.xchange.RatesTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@e15b7e8, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2ed2d9cb, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@6404f418, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@21282ed8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@d9345cd, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:48:28.265 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:48:28.268 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:48:28 - Starting RatesTest using Java 11.0.17 on repairnator with PID 5505 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:48:28 - The following profiles are active: schedule-disabled
15:48:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:48:29 - Finished Spring Data repository scanning in 115 ms. Found 5 JPA repository interfaces.
15:48:29 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:48:29 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:48:29 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:48:29 - HikariPool-1 - Starting...
15:48:29 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:48:29 - HikariPool-1 - Start completed.
15:48:29 - Successfully acquired change log lock
15:48:30 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:48:30 - Reading from PUBLIC.DATABASECHANGELOG
15:48:30 - Successfully released change log lock
15:48:30 - Successfully acquired change log lock
Skipping auto-registration
15:48:30 - Skipping auto-registration
15:48:30 - Table EXCHANGE_ACCOUNTS created
15:48:30 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:48:30 - Table STRATEGIES created
15:48:30 - Auto-increment added to STRATEGIES.ID
15:48:30 - Table POSITIONS created
15:48:30 - Auto-increment added to POSITIONS.ID
15:48:30 - Table ORDERS created
15:48:30 - Auto-increment added to ORDERS.ID
15:48:30 - Table TRADES created
15:48:30 - Auto-increment added to TRADES.ID
15:48:30 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:48:30 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:48:30 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:48:30 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:48:30 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:48:30 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:48:30 - Index IDX_STRATEGIES_STRATEGY_ID created
15:48:30 - Index IDX_POSITIONS_POSITION_ID created
15:48:30 - Index IDX_POSITIONS_STATUS created
15:48:30 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:48:30 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:48:30 - Index IDX_ORDERS_ORDER_ID created
15:48:30 - Index IDX_TRADES_TRADE_ID created
15:48:30 - Index IDX_TRADES_ORDER_ID created
15:48:30 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 38ms
15:48:30 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:48:30 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:48:30 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:48:30 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:48:30 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:48:30 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:48:30 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:48:30 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:48:30 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:48:30 - Successfully released change log lock
15:48:30 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:48:30 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:48:30 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:48:30 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:48:31 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:48:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:48:32 - Calling Remote Init...
15:48:32 - ExchangeConfiguration - Dry mode is OFF
15:48:32 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:48:32 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:48:32 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:48:32 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:48:32 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:48:32 - Started RatesTest in 4.337 seconds (JVM running for 5.153)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 184.731 s - in tech.cassandre.trading.bot.test.service.xchange.RatesTest
15:51:32 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:51:32 - HikariPool-1 - Shutdown initiated...
15:51:32 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
15:51:33.639 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:51:33.646 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:51:33.670 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:51:33.678 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest], using SpringBootContextLoader
15:51:33.680 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/StrategyRepositoryTest-context.xml] does not exist
15:51:33.681 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/StrategyRepositoryTestContext.groovy] does not exist
15:51:33.681 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:51:33.681 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: StrategyRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:51:33.748 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:51:33.748 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
15:51:33.815 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest]: using defaults.
15:51:33.816 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:51:33.824 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:51:33.830 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7e5c856f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@413f69cc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1f53a5dc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1b75c2e3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1984b1f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3bd323e9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@39ac0c0a, org.springframework.test.context.event.EventPublishingTestExecutionListener@c7ba306, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4ff8d125, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d167f58, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3403e2ac, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@65b104b9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c4980d3, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@327bcebd]
15:51:33.832 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@56673b2c testClass = StrategyRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2796aeae testClass = StrategyRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@662b4c69, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2a54a73f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@20ccf40b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6392827e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1b68b9a4], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:51:33.850 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@56673b2c testClass = StrategyRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest@5f9be66c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2796aeae testClass = StrategyRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@662b4c69, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2a54a73f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@20ccf40b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6392827e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1b68b9a4], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:51:33.873 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:51:33.879 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:51:34 - Starting StrategyRepositoryTest using Java 11.0.17 on repairnator with PID 12081 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:51:34 - The following profiles are active: schedule-disabled
15:51:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:34 - Finished Spring Data repository scanning in 118 ms. Found 5 JPA repository interfaces.
15:51:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:34 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:51:35 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:51:35 - HikariPool-1 - Starting...
15:51:35 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:51:35 - HikariPool-1 - Start completed.
15:51:35 - Successfully acquired change log lock
15:51:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:51:35 - Reading from PUBLIC.DATABASECHANGELOG
15:51:35 - Successfully released change log lock
15:51:35 - Successfully acquired change log lock
Skipping auto-registration
15:51:35 - Skipping auto-registration
15:51:35 - Table EXCHANGE_ACCOUNTS created
15:51:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:51:35 - Table STRATEGIES created
15:51:35 - Auto-increment added to STRATEGIES.ID
15:51:35 - Table POSITIONS created
15:51:35 - Auto-increment added to POSITIONS.ID
15:51:35 - Table ORDERS created
15:51:35 - Auto-increment added to ORDERS.ID
15:51:35 - Table TRADES created
15:51:35 - Auto-increment added to TRADES.ID
15:51:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:51:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:51:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:51:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:51:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:51:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:51:35 - Index IDX_STRATEGIES_STRATEGY_ID created
15:51:35 - Index IDX_POSITIONS_POSITION_ID created
15:51:35 - Index IDX_POSITIONS_STATUS created
15:51:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:51:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:51:35 - Index IDX_ORDERS_ORDER_ID created
15:51:35 - Index IDX_TRADES_TRADE_ID created
15:51:35 - Index IDX_TRADES_ORDER_ID created
15:51:36 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:51:36 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:51:36 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:51:36 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:51:36 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:51:36 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:51:36 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:51:36 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:51:36 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:51:36 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:51:36 - Successfully released change log lock
15:51:36 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:51:36 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:51:36 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:51:36 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:51:36 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:51:36 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:51:37 - Calling Remote Init...
15:51:37 - ExchangeConfiguration - Dry mode is OFF
15:51:37 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:51:37 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:51:37 - StrategyConfiguration - Accounts available : 'null/null'.
15:51:37 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:51:38 - Started StrategyRepositoryTest in 4.275 seconds (JVM running for 5.086)
15:51:38 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.619 s - in tech.cassandre.trading.bot.test.repository.StrategyRepositoryTest
15:51:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:51:38 - HikariPool-1 - Shutdown initiated...
15:51:38 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
15:51:39.198 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:51:39.205 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:51:39.237 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:51:39.245 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest], using SpringBootContextLoader
15:51:39.248 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/PositionRepositoryTest-context.xml] does not exist
15:51:39.248 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/PositionRepositoryTestContext.groovy] does not exist
15:51:39.248 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:51:39.249 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: PositionRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:51:39.324 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:51:39.324 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
15:51:39.379 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.PositionRepositoryTest]: using defaults.
15:51:39.379 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:51:39.385 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:51:39.390 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@65b104b9, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@6c4980d3, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@327bcebd, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@19c65cdc, org.springframework.test.context.support.DirtiesContextTestExecutionListener@74bf1791, org.springframework.test.context.transaction.TransactionalTestExecutionListener@54504ecd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@38b27cdc, org.springframework.test.context.event.EventPublishingTestExecutionListener@1339e7aa, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1fb669c3, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@49c66ade, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6239aba6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3e6104fc, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@12359a82, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@68df9280]
15:51:39.392 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@67d18ed7 testClass = PositionRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2c78d320 testClass = PositionRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@156b88f5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@71def8f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e04fa0a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5a56cdac, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@51b7e5df], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:51:39.401 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@67d18ed7 testClass = PositionRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.PositionRepositoryTest@a3d9978, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2c78d320 testClass = PositionRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@156b88f5, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@71def8f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1e04fa0a, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@5a56cdac, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@51b7e5df], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:51:39.414 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:51:39.417 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:51:39 - Starting PositionRepositoryTest using Java 11.0.17 on repairnator with PID 12374 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:51:39 - The following profiles are active: schedule-disabled
15:51:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:40 - Finished Spring Data repository scanning in 138 ms. Found 5 JPA repository interfaces.
15:51:40 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:40 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:51:40 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:51:40 - HikariPool-1 - Starting...
15:51:40 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:51:40 - HikariPool-1 - Start completed.
15:51:41 - Successfully acquired change log lock
15:51:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:51:41 - Reading from PUBLIC.DATABASECHANGELOG
15:51:41 - Successfully released change log lock
15:51:41 - Successfully acquired change log lock
Skipping auto-registration
15:51:41 - Skipping auto-registration
15:51:41 - Table EXCHANGE_ACCOUNTS created
15:51:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:51:41 - Table STRATEGIES created
15:51:41 - Auto-increment added to STRATEGIES.ID
15:51:41 - Table POSITIONS created
15:51:41 - Auto-increment added to POSITIONS.ID
15:51:41 - Table ORDERS created
15:51:41 - Auto-increment added to ORDERS.ID
15:51:41 - Table TRADES created
15:51:41 - Auto-increment added to TRADES.ID
15:51:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:51:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:51:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:51:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:51:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:51:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:51:41 - Index IDX_STRATEGIES_STRATEGY_ID created
15:51:41 - Index IDX_POSITIONS_POSITION_ID created
15:51:41 - Index IDX_POSITIONS_STATUS created
15:51:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:51:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:51:41 - Index IDX_ORDERS_ORDER_ID created
15:51:41 - Index IDX_TRADES_TRADE_ID created
15:51:41 - Index IDX_TRADES_ORDER_ID created
15:51:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:51:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:51:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:51:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:51:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:51:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:51:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:51:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:51:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:51:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:51:41 - Successfully released change log lock
15:51:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:51:41 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:51:41 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:51:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:51:42 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:51:42 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:51:43 - Calling Remote Init...
15:51:43 - ExchangeConfiguration - Dry mode is OFF
15:51:43 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:51:43 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:51:43 - StrategyConfiguration - Accounts available : 'null/null'.
15:51:43 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:51:43 - Started PositionRepositoryTest in 4.094 seconds (JVM running for 4.847)
15:51:43 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.518 s - in tech.cassandre.trading.bot.test.repository.PositionRepositoryTest
15:51:43 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:51:43 - HikariPool-1 - Shutdown initiated...
15:51:43 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
15:51:44.657 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:51:44.663 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:51:44.687 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:51:44.695 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest], using SpringBootContextLoader
15:51:44.697 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/OrderRepositoryTest-context.xml] does not exist
15:51:44.697 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/OrderRepositoryTestContext.groovy] does not exist
15:51:44.698 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:51:44.698 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: OrderRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:51:44.765 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:51:44.765 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
15:51:44.818 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.OrderRepositoryTest]: using defaults.
15:51:44.818 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:51:44.824 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:51:44.829 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6239aba6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3e6104fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12359a82, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@68df9280, org.springframework.test.context.support.DirtiesContextTestExecutionListener@479460a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7164ca4c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4f3bbf68, org.springframework.test.context.event.EventPublishingTestExecutionListener@5be46f9d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@59a008ba]
15:51:44.831 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@600b90df testClass = OrderRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7c8c9a05 testClass = OrderRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7133da86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47faa49c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7c24b813, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3a44431a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@c8e4bb0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:51:44.872 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@600b90df testClass = OrderRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.OrderRepositoryTest@55493582, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7c8c9a05 testClass = OrderRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7133da86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47faa49c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7c24b813, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3a44431a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@c8e4bb0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:51:44.885 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:51:44.888 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:51:45 - Starting OrderRepositoryTest using Java 11.0.17 on repairnator with PID 12628 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:51:45 - The following profiles are active: schedule-disabled
15:51:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:45 - Finished Spring Data repository scanning in 127 ms. Found 5 JPA repository interfaces.
15:51:45 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:45 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:51:46 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:51:46 - HikariPool-1 - Starting...
15:51:46 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:51:46 - HikariPool-1 - Start completed.
15:51:46 - Successfully acquired change log lock
15:51:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:51:46 - Reading from PUBLIC.DATABASECHANGELOG
15:51:47 - Successfully released change log lock
15:51:47 - Successfully acquired change log lock
Skipping auto-registration
15:51:47 - Skipping auto-registration
15:51:47 - Table EXCHANGE_ACCOUNTS created
15:51:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:51:47 - Table STRATEGIES created
15:51:47 - Auto-increment added to STRATEGIES.ID
15:51:47 - Table POSITIONS created
15:51:47 - Auto-increment added to POSITIONS.ID
15:51:47 - Table ORDERS created
15:51:47 - Auto-increment added to ORDERS.ID
15:51:47 - Table TRADES created
15:51:47 - Auto-increment added to TRADES.ID
15:51:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:51:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:51:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:51:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:51:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:51:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:51:47 - Index IDX_STRATEGIES_STRATEGY_ID created
15:51:47 - Index IDX_POSITIONS_POSITION_ID created
15:51:47 - Index IDX_POSITIONS_STATUS created
15:51:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:51:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:51:47 - Index IDX_ORDERS_ORDER_ID created
15:51:47 - Index IDX_TRADES_TRADE_ID created
15:51:47 - Index IDX_TRADES_ORDER_ID created
15:51:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:51:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:51:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:51:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:51:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:51:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:51:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:51:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:51:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:51:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:51:47 - Successfully released change log lock
15:51:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:51:47 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:51:47 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:51:47 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:51:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:51:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:51:48 - Calling Remote Init...
15:51:48 - ExchangeConfiguration - Dry mode is OFF
15:51:48 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:51:48 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:51:48 - StrategyConfiguration - Accounts available : 'null/null'.
15:51:48 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:51:49 - Started OrderRepositoryTest in 4.17 seconds (JVM running for 4.954)
15:51:49 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.514 s - in tech.cassandre.trading.bot.test.repository.OrderRepositoryTest
15:51:49 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:51:49 - HikariPool-1 - Shutdown initiated...
15:51:49 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
15:51:50.109 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:51:50.125 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:51:50.157 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:51:50.165 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest], using SpringBootContextLoader
15:51:50.167 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/ExchangeAccountRepositoryTest-context.xml] does not exist
15:51:50.167 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/ExchangeAccountRepositoryTestContext.groovy] does not exist
15:51:50.168 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:51:50.168 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: ExchangeAccountRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:51:50.236 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:51:50.236 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
15:51:50.291 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest]: using defaults.
15:51:50.291 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:51:50.297 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:51:50.302 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7e5c856f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@413f69cc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1f53a5dc, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1b75c2e3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1984b1f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3bd323e9, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@39ac0c0a, org.springframework.test.context.event.EventPublishingTestExecutionListener@c7ba306, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4ff8d125, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6d167f58, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3403e2ac, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@65b104b9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6c4980d3, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@327bcebd]
15:51:50.305 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@56673b2c testClass = ExchangeAccountRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2796aeae testClass = ExchangeAccountRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@662b4c69, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2a54a73f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@20ccf40b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6392827e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1b68b9a4], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:51:50.314 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@56673b2c testClass = ExchangeAccountRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest@5f9be66c, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@2796aeae testClass = ExchangeAccountRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@662b4c69, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2a54a73f, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@20ccf40b, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1da2cb77, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6392827e, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@1b68b9a4], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:51:50.327 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:51:50.330 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:51:50 - Starting ExchangeAccountRepositoryTest using Java 11.0.17 on repairnator with PID 12902 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:51:50 - The following profiles are active: schedule-disabled
15:51:50 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:51 - Finished Spring Data repository scanning in 147 ms. Found 5 JPA repository interfaces.
15:51:51 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:51 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
15:51:51 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:51:51 - HikariPool-1 - Starting...
15:51:51 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:51:51 - HikariPool-1 - Start completed.
15:51:51 - Successfully acquired change log lock
15:51:52 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:51:52 - Reading from PUBLIC.DATABASECHANGELOG
15:51:52 - Successfully released change log lock
15:51:52 - Successfully acquired change log lock
Skipping auto-registration
15:51:52 - Skipping auto-registration
15:51:52 - Table EXCHANGE_ACCOUNTS created
15:51:52 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:51:52 - Table STRATEGIES created
15:51:52 - Auto-increment added to STRATEGIES.ID
15:51:52 - Table POSITIONS created
15:51:52 - Auto-increment added to POSITIONS.ID
15:51:52 - Table ORDERS created
15:51:52 - Auto-increment added to ORDERS.ID
15:51:52 - Table TRADES created
15:51:52 - Auto-increment added to TRADES.ID
15:51:52 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:51:52 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:51:52 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:51:52 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:51:52 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:51:52 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:51:52 - Index IDX_STRATEGIES_STRATEGY_ID created
15:51:52 - Index IDX_POSITIONS_POSITION_ID created
15:51:52 - Index IDX_POSITIONS_STATUS created
15:51:52 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:51:52 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:51:52 - Index IDX_ORDERS_ORDER_ID created
15:51:52 - Index IDX_TRADES_TRADE_ID created
15:51:52 - Index IDX_TRADES_ORDER_ID created
15:51:52 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:51:52 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:51:52 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:51:52 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:51:52 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:51:52 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:51:52 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:51:52 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:51:52 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:51:52 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:51:52 - Successfully released change log lock
15:51:52 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:51:52 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:51:52 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:51:52 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:51:53 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:51:53 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:51:54 - Calling Remote Init...
15:51:54 - ExchangeConfiguration - Dry mode is OFF
15:51:54 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:51:54 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:51:54 - StrategyConfiguration - Accounts available : 'null/null'.
15:51:54 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:51:54 - Started ExchangeAccountRepositoryTest in 4.174 seconds (JVM running for 4.955)
15:51:54 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.484 s - in tech.cassandre.trading.bot.test.repository.ExchangeAccountRepositoryTest
15:51:54 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:51:54 - HikariPool-1 - Shutdown initiated...
15:51:54 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
15:51:55.515 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:51:55.522 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:51:55.546 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:51:55.554 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest], using SpringBootContextLoader
15:51:55.556 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/TradeRepositoryTest-context.xml] does not exist
15:51:55.556 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: class path resource [tech/cassandre/trading/bot/test/repository/TradeRepositoryTestContext.groovy] does not exist
15:51:55.557 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:51:55.557 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: TradeRepositoryTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:51:55.625 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:51:55.626 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
15:51:55.680 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.repository.TradeRepositoryTest]: using defaults.
15:51:55.680 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:51:55.686 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:51:55.691 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6239aba6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3e6104fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12359a82, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@68df9280, org.springframework.test.context.support.DirtiesContextTestExecutionListener@479460a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7164ca4c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4f3bbf68, org.springframework.test.context.event.EventPublishingTestExecutionListener@5be46f9d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@59a008ba]
15:51:55.693 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@600b90df testClass = TradeRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7c8c9a05 testClass = TradeRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7133da86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47faa49c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7c24b813, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3a44431a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@c8e4bb0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:51:55.733 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@600b90df testClass = TradeRepositoryTest, testInstance = tech.cassandre.trading.bot.test.repository.TradeRepositoryTest@55493582, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7c8c9a05 testClass = TradeRepositoryTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7133da86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@47faa49c, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@66d3eec0, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@7c24b813, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3a44431a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@c8e4bb0], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:51:55.746 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:51:55.749 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:51:56 - Starting TradeRepositoryTest using Java 11.0.17 on repairnator with PID 13190 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:51:56 - The following profiles are active: schedule-disabled
15:51:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:56 - Finished Spring Data repository scanning in 148 ms. Found 5 JPA repository interfaces.
15:51:56 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:51:56 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:51:57 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:51:57 - HikariPool-1 - Starting...
15:51:57 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:51:57 - HikariPool-1 - Start completed.
15:51:57 - Successfully acquired change log lock
15:51:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:51:57 - Reading from PUBLIC.DATABASECHANGELOG
15:51:57 - Successfully released change log lock
15:51:57 - Successfully acquired change log lock
Skipping auto-registration
15:51:57 - Skipping auto-registration
15:51:57 - Table EXCHANGE_ACCOUNTS created
15:51:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:51:57 - Table STRATEGIES created
15:51:57 - Auto-increment added to STRATEGIES.ID
15:51:57 - Table POSITIONS created
15:51:57 - Auto-increment added to POSITIONS.ID
15:51:57 - Table ORDERS created
15:51:57 - Auto-increment added to ORDERS.ID
15:51:57 - Table TRADES created
15:51:57 - Auto-increment added to TRADES.ID
15:51:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:51:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:51:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:51:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:51:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:51:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:51:57 - Index IDX_STRATEGIES_STRATEGY_ID created
15:51:57 - Index IDX_POSITIONS_POSITION_ID created
15:51:58 - Index IDX_POSITIONS_STATUS created
15:51:58 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:51:58 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:51:58 - Index IDX_ORDERS_ORDER_ID created
15:51:58 - Index IDX_TRADES_TRADE_ID created
15:51:58 - Index IDX_TRADES_ORDER_ID created
15:51:58 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:51:58 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:51:58 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:51:58 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:51:58 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:51:58 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:51:58 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:51:58 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:51:58 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:51:58 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:51:58 - Successfully released change log lock
15:51:58 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:51:58 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:51:58 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:51:58 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:51:58 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:51:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:51:59 - Calling Remote Init...
15:51:59 - ExchangeConfiguration - Dry mode is OFF
15:51:59 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:51:59 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:51:59 - StrategyConfiguration - Accounts available : 'null/null'.
15:51:59 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:51:59 - Started TradeRepositoryTest in 4.22 seconds (JVM running for 4.987)
15:52:00 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=3, positionId=3, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, rules=Stop loss at 20 %, status=CLOSING, forceClosing=false, openingOrderId=BACKUP_OPENING_ORDER_03, openingOrder=OrderDTO(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=BACKUP_TRADE_02, type=BID, orderId=BACKUP_OPENING_ORDER_03, order=Order(id=5, orderId=BACKUP_OPENING_ORDER_03, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=, status=FILLED, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=20.00000000 USDT, fee=2.00000000 USDT, userReference=Trade 02, timestamp=2020-08-02T00:00Z[Etc/UTC])]), closingOrderId=BACKUP_CLOSING_ORDER_01, closingOrder=OrderDTO(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=BACKUP_TRADE_04, type=ASK, orderId=BACKUP_CLOSING_ORDER_01, order=Order(id=6, orderId=BACKUP_CLOSING_ORDER_01, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=30.00000000 BTC, averagePrice=1.00000000 USDT, limitPrice=1.00000000 USDT, leverage=1, status=NEW, cumulativeAmount=30.00000000 BTC, userReference=, timestamp=2020-11-20T00:00Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=20.00000000 BTC, price=40.00000000 USDT, fee=4.00000000 USDT, userReference=Trade 04, timestamp=2020-08-04T00:00Z[Etc/UTC])]), lowestGainPrice=17.00000000 USDT, highestGainPrice=68.00000000 USDT, latestGainPrice=92.00000000 USDT)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.599 s - in tech.cassandre.trading.bot.test.repository.TradeRepositoryTest
15:52:00 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:52:00 - HikariPool-1 - Shutdown initiated...
15:52:00 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
15:52:01.119 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:52:01.126 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:52:01.150 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:52:01.158 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest], using SpringBootContextLoader
15:52:01.160 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/ta4j/BasicTa4jCassandreStrategyTest-context.xml] does not exist
15:52:01.161 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/ta4j/BasicTa4jCassandreStrategyTestContext.groovy] does not exist
15:52:01.161 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:52:01.161 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: BasicTa4jCassandreStrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:52:01.194 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]
15:52:01.238 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:52:01.238 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
15:52:01.311 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest]: using defaults.
15:52:01.312 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:52:01.318 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:52:01.324 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ca30bc1, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1046d517, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@416c58f5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5505ae1a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@73cd37c0, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21337f7b, org.springframework.test.context.event.EventPublishingTestExecutionListener@2bb3058, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@60df60da, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5a2d131d, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@14fc1f0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@4ae9cfc1, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@512baff6]
15:52:01.326 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@35432107 testClass = BasicTa4jCassandreStrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b420819 testClass = BasicTa4jCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@7a1a14a4 key = [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_CLASS].
15:52:01.368 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@35432107 testClass = BasicTa4jCassandreStrategyTest, testInstance = tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest@7d1cfb8b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7b420819 testClass = BasicTa4jCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@7a1a14a4 key = [tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2ed2d9cb, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@342c38f8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@437da279, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@59505b48, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@4d826d77], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:52:01.382 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:52:01 - Starting BasicTa4jCassandreStrategyTest using Java 11.0.17 on repairnator with PID 13372 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:52:01 - No active profile set, falling back to default profiles: default
15:52:01 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:02 - Finished Spring Data repository scanning in 124 ms. Found 5 JPA repository interfaces.
15:52:02 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:02 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:52:02 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:52:02 - HikariPool-1 - Starting...
15:52:02 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:52:02 - HikariPool-1 - Start completed.
15:52:02 - Successfully acquired change log lock
15:52:03 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:52:03 - Reading from PUBLIC.DATABASECHANGELOG
15:52:03 - Successfully released change log lock
15:52:03 - Successfully acquired change log lock
Skipping auto-registration
15:52:03 - Skipping auto-registration
15:52:03 - Table EXCHANGE_ACCOUNTS created
15:52:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:52:03 - Table STRATEGIES created
15:52:03 - Auto-increment added to STRATEGIES.ID
15:52:03 - Table POSITIONS created
15:52:03 - Auto-increment added to POSITIONS.ID
15:52:03 - Table ORDERS created
15:52:03 - Auto-increment added to ORDERS.ID
15:52:03 - Table TRADES created
15:52:03 - Auto-increment added to TRADES.ID
15:52:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:52:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:52:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:52:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:52:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:52:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:52:03 - Index IDX_STRATEGIES_STRATEGY_ID created
15:52:03 - Index IDX_POSITIONS_POSITION_ID created
15:52:03 - Index IDX_POSITIONS_STATUS created
15:52:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:52:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:52:03 - Index IDX_ORDERS_ORDER_ID created
15:52:03 - Index IDX_TRADES_TRADE_ID created
15:52:03 - Index IDX_TRADES_ORDER_ID created
15:52:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:52:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:52:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:52:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:52:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:52:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:52:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:52:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:52:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:52:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:52:03 - Successfully released change log lock
15:52:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:52:03 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:52:03 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:52:03 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:52:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:52:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:52:05 - Calling Remote Init...
15:52:05 - ExchangeConfiguration - Dry mode is OFF
15:52:05 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:52:05 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:52:05 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:52:05 - Initializing ExecutorService 'taskScheduler'
15:52:05 - StrategyConfiguration - Accounts available : '01/trade'.
15:52:05 - StrategyConfiguration - Running strategy '01/Testable ta4j strategy' (requires BTC/USDT).
15:52:05 - Started BasicTa4jCassandreStrategyTest in 4.466 seconds (JVM running for 5.294)
15:52:07 - Shutting down ExecutorService 'taskScheduler'
15:52:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:52:07 - HikariPool-1 - Shutdown initiated...
15:52:07 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.888 s - in tech.cassandre.trading.bot.test.strategy.ta4j.BasicTa4jCassandreStrategyTest
[INFO] Running tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
15:52:08.964 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:52:08.970 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:52:08.995 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:52:09.002 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest], using SpringBootContextLoader
15:52:09.005 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/basic/BasicCassandreStrategyTest-context.xml] does not exist
15:52:09.005 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: class path resource [tech/cassandre/trading/bot/test/strategy/basic/BasicCassandreStrategyTestContext.groovy] does not exist
15:52:09.005 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:52:09.006 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: BasicCassandreStrategyTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:52:09.038 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]
15:52:09.089 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:52:09.090 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
15:52:09.162 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest]: using defaults.
15:52:09.163 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:52:09.168 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:52:09.174 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@73cd37c0, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@21337f7b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@7a362b6b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@60df60da, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5a2d131d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@14fc1f0, org.springframework.test.context.event.EventPublishingTestExecutionListener@4ae9cfc1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@512baff6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@632ceb35, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1c93f6e1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1800a575, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1458ed9c, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@10a9d961]
15:52:09.175 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@61544ae6 testClass = BasicCassandreStrategyTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4b41dd5c testClass = BasicCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3b96c42e key = [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5d0a1059, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@54bff557, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@290222c1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@b9b00e0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_CLASS].
15:52:09.216 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@61544ae6 testClass = BasicCassandreStrategyTest, testInstance = tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest@39655d3e, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4b41dd5c testClass = BasicCassandreStrategyTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3b96c42e key = [tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5d0a1059, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@54bff557, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@290222c1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@b9b00e0, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:52:09.230 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:52:09 - Starting BasicCassandreStrategyTest using Java 11.0.17 on repairnator with PID 13725 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:52:09 - No active profile set, falling back to default profiles: default
15:52:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:10 - Finished Spring Data repository scanning in 128 ms. Found 5 JPA repository interfaces.
15:52:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:10 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:52:10 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:52:10 - HikariPool-1 - Starting...
15:52:10 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:52:10 - HikariPool-1 - Start completed.
15:52:11 - Successfully acquired change log lock
15:52:11 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:52:11 - Reading from PUBLIC.DATABASECHANGELOG
15:52:11 - Successfully released change log lock
15:52:11 - Successfully acquired change log lock
Skipping auto-registration
15:52:11 - Skipping auto-registration
15:52:11 - Table EXCHANGE_ACCOUNTS created
15:52:11 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:52:11 - Table STRATEGIES created
15:52:11 - Auto-increment added to STRATEGIES.ID
15:52:11 - Table POSITIONS created
15:52:11 - Auto-increment added to POSITIONS.ID
15:52:11 - Table ORDERS created
15:52:11 - Auto-increment added to ORDERS.ID
15:52:11 - Table TRADES created
15:52:11 - Auto-increment added to TRADES.ID
15:52:11 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:52:11 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:52:11 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:52:11 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:52:11 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:52:11 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:52:11 - Index IDX_STRATEGIES_STRATEGY_ID created
15:52:11 - Index IDX_POSITIONS_POSITION_ID created
15:52:11 - Index IDX_POSITIONS_STATUS created
15:52:11 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:52:11 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:52:11 - Index IDX_ORDERS_ORDER_ID created
15:52:11 - Index IDX_TRADES_TRADE_ID created
15:52:11 - Index IDX_TRADES_ORDER_ID created
15:52:11 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:52:11 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:52:11 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:52:11 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:52:11 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:52:11 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:52:11 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:52:11 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:52:11 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:52:11 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:52:11 - Successfully released change log lock
15:52:11 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:52:11 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:52:11 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:52:11 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:52:12 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:52:12 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:52:13 - Calling Remote Init...
15:52:13 - ExchangeConfiguration - Dry mode is OFF
15:52:13 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:52:13 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:52:13 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:52:13 - Initializing ExecutorService 'taskScheduler'
15:52:13 - StrategyConfiguration - Accounts available : '03/trade'.
15:52:13 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:52:13 - Started BasicCassandreStrategyTest in 4.337 seconds (JVM running for 5.179)
15:52:14 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=01, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:14 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=1, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-22298-01-01T18:12:28Z[Etc/UTC])

15:52:14 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[])

15:52:14 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=0000001, type=BID, orderId=000001, order=Order(id=1, orderId=000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:52:15 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:15 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-3779-02-28T21:03:44Z[Etc/UTC])

15:52:15 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=2, orderId=000002, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-02-01T00:00Z[Etc/UTC], trades=[])

15:52:15 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=0000002, type=BID, orderId=000001, order=Order(id=1, orderId=000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-02-01T00:00Z[Etc/UTC])

15:52:16 - TestableStrategy-onAccountUpdate 003 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=null, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=2000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:16 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=null, last=2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=7385-03-21T19:07:01Z[Etc/UTC])

15:52:16 - TestableStrategy-onOrderUpdate 003 : OrderDTO(id=3, orderId=000003, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-03-01T00:00Z[Etc/UTC], trades=[])

15:52:16 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=3, tradeId=0000003, type=BID, orderId=000001, order=Order(id=1, orderId=000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=2020-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=null, price=null, fee=null, userReference=null, timestamp=2020-03-01T00:00Z[Etc/UTC])

15:52:17 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=null, last=3, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-35853-02-25T17:59:55Z[Etc/UTC])

15:52:18 - TestableStrategy-onTickerUpdate 005 : TickerDTO(currencyPair=ETH/BTC, open=null, last=4, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=+13164-10-11T09:43:15Z[Etc/UTC])

15:52:19 - TestableStrategy-onTickerUpdate 006 : TickerDTO(currencyPair=ETH/BTC, open=null, last=5, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=-40158-03-14T02:25:47Z[Etc/UTC])

15:52:20 - TestableStrategy-onTickerUpdate 007 : TickerDTO(currencyPair=ETH/BTC, open=null, last=6, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=+51989-12-09T18:40:24Z[Etc/UTC])

15:52:25 - Shutting down ExecutorService 'taskScheduler'
15:52:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:52:25 - HikariPool-1 - Shutdown initiated...
15:52:25 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.693 s - in tech.cassandre.trading.bot.test.strategy.basic.BasicCassandreStrategyTest
[INFO] Running tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
15:52:26.605 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:52:26.612 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:52:26.636 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:52:26.643 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest], using SpringBootContextLoader
15:52:26.646 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: class path resource [tech/cassandre/trading/bot/test/strategy/multiple/MultipleStrategiesTest-context.xml] does not exist
15:52:26.646 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: class path resource [tech/cassandre/trading/bot/test/strategy/multiple/MultipleStrategiesTestContext.groovy] does not exist
15:52:26.646 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:52:26.647 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: MultipleStrategiesTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:52:26.718 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:52:26.719 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
15:52:26.774 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest]: using defaults.
15:52:26.775 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:52:26.781 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:52:26.786 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@5b6ec132, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@5c44c582, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@67d18ed7, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2c78d320, org.springframework.test.context.support.DirtiesContextTestExecutionListener@132e0cc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7b205dbd, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@106cc338, org.springframework.test.context.event.EventPublishingTestExecutionListener@7a67e3c6, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6cc558c6, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@15713d56, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@63f259c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@26ceffa8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@600b90df, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7c8c9a05]
15:52:26.788 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@2f67b837 testClass = MultipleStrategiesTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1869fbd2 testClass = MultipleStrategiesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35aea049, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@22ef9844, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@e15b7e8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@957e06, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [AFTER_CLASS].
15:52:26.830 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@2f67b837 testClass = MultipleStrategiesTest, testInstance = tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest@1c481ff2, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1869fbd2 testClass = MultipleStrategiesTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@35aea049, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@22ef9844, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@21e360a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@e15b7e8, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@957e06, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:52:26.843 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:52:26.846 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:52:27 - Starting MultipleStrategiesTest using Java 11.0.17 on repairnator with PID 14383 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:52:27 - The following profiles are active: schedule-disabled
15:52:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:27 - Finished Spring Data repository scanning in 127 ms. Found 5 JPA repository interfaces.
15:52:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:52:27 - Finished Spring Data repository scanning in 9 ms. Found 5 JPA repository interfaces.
15:52:28 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:52:28 - HikariPool-1 - Starting...
15:52:28 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:52:28 - HikariPool-1 - Start completed.
15:52:28 - Successfully acquired change log lock
15:52:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:52:28 - Reading from PUBLIC.DATABASECHANGELOG
15:52:28 - Successfully released change log lock
15:52:28 - Successfully acquired change log lock
Skipping auto-registration
15:52:28 - Skipping auto-registration
15:52:28 - Table EXCHANGE_ACCOUNTS created
15:52:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:52:28 - Table STRATEGIES created
15:52:28 - Auto-increment added to STRATEGIES.ID
15:52:28 - Table POSITIONS created
15:52:28 - Auto-increment added to POSITIONS.ID
15:52:28 - Table ORDERS created
15:52:29 - Auto-increment added to ORDERS.ID
15:52:29 - Table TRADES created
15:52:29 - Auto-increment added to TRADES.ID
15:52:29 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:52:29 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:52:29 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:52:29 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:52:29 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:52:29 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:52:29 - Index IDX_STRATEGIES_STRATEGY_ID created
15:52:29 - Index IDX_POSITIONS_POSITION_ID created
15:52:29 - Index IDX_POSITIONS_STATUS created
15:52:29 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:52:29 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:52:29 - Index IDX_ORDERS_ORDER_ID created
15:52:29 - Index IDX_TRADES_TRADE_ID created
15:52:29 - Index IDX_TRADES_ORDER_ID created
15:52:29 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:52:29 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:52:29 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:52:29 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:52:29 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:52:29 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:52:29 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:52:29 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:52:29 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:52:29 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:52:29 - Successfully released change log lock
15:52:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:52:29 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:52:29 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:52:29 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:52:29 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:52:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:52:30 - Calling Remote Init...
15:52:30 - ExchangeConfiguration - Dry mode is ON
15:52:30 - Adding account 'main'
15:52:30 - - Adding balance 99.0001 BTC
15:52:30 - Adding account 'savings'
15:52:30 - - Adding balance 1.1 BTC
15:52:30 - - Adding balance 2.2 USDT
15:52:30 - - Adding balance 3.3 ETH
15:52:30 - Adding account 'trade'
15:52:30 - - Adding balance 0.99962937 BTC
15:52:30 - - Adding balance 1000 USDT
15:52:30 - - Adding balance 10 ETH
15:52:30 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:52:30 - ExchangeConfiguration - Supported currency pairs : BTC/USDT, BTC/ETH, ETH/USDT 
15:52:30 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:52:30 - StrategyConfiguration - Accounts available : 'main/main'.
15:52:30 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:52:30 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:52:30 - StrategyConfiguration - Running strategy '01/Strategy 1' (requires BTC/USDT).
15:52:31 - StrategyConfiguration - Running strategy '02/Strategy 2' (requires BTC/ETH).
15:52:31 - StrategyConfiguration - Running strategy '03/Strategy 3' (requires BTC/USDT, ETH/USDT).
15:52:31 - Started MultipleStrategiesTest in 4.217 seconds (JVM running for 4.999)
15:52:31 - Strategy1-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy2-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy3-onAccountUpdate 001 : AccountDTO(accountId=main, name=main, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=99.0001, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy1-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy2-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy3-onAccountUpdate 002 : AccountDTO(accountId=savings, name=savings, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=2.2, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=3.3, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy1-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy2-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:31 - Strategy3-onAccountUpdate 003 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=0.99962937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=1000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=10, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:52:32 - Strategy1-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:32.157730Z[Etc/UTC])

15:52:32 - Strategy3-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=null, last=50000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:32.184194Z[Etc/UTC])

15:52:32 - Strategy2-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/ETH, open=null, last=25, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:32.202424Z[Etc/UTC])

15:52:32 - Strategy3-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/USDT, open=null, last=2000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:32.215111Z[Etc/UTC])

15:52:33 - Strategy1-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:33 - Strategy1-onPositionStatusUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:33 - Strategy1-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, averagePrice=50000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162791Z[Etc/UTC], trades=[])

15:52:33 - Strategy1-onPositionUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.001 BTC, averagePrice=50000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.001 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162791Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:34 - Strategy1-onTradeUpdate 001 : TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.001 BTC, price=50000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:52:33.163631Z[Etc/UTC])

15:52:34 - Strategy1-onPositionUpdate 003 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:33.163Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:34 - Strategy1-onPositionStatusUpdate 002 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:33.163Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:40 - Strategy2-onPositionUpdate 001 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:40 - Strategy2-onPositionStatusUpdate 001 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:40 - Strategy2-onOrderUpdate 001 : OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, averagePrice=25 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284956Z[Etc/UTC], trades=[])

15:52:40 - Strategy2-onPositionUpdate 002 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02 BTC, averagePrice=25 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284956Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:41 - Strategy2-onTradeUpdate 001 : TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 2), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC], trades=[]), currencyPair=BTC/ETH, amount=0.02 BTC, price=25 ETH, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284984Z[Etc/UTC])

15:52:41 - Strategy2-onPositionUpdate 003 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 2), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC], trades=[]), currencyPair=BTC/ETH, amount=0.02000000 BTC, price=25.00000000 ETH, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:41 - Strategy2-onPositionStatusUpdate 002 : PositionDTO(id=2, positionId=1, type=LONG, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000002, openingOrder=OrderDTO(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=StrategyDTO(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, name=Strategy 2, lastPositionIdUsed=0), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC], trades=[TradeDTO(id=2, tradeId=DRY_TRADE_000000002, type=BID, orderId=DRY_ORDER_000000002, order=Order(id=2, orderId=DRY_ORDER_000000002, type=BID, strategy=Strategy(id=2, strategyId=02, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 2), currencyPair=BTC/ETH, amount=0.02000000 BTC, averagePrice=25.00000000 ETH, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.02000000 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC], trades=[]), currencyPair=BTC/ETH, amount=0.02000000 BTC, price=25.00000000 ETH, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:40.284Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:46 - Strategy1-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:46.385563Z[Etc/UTC])

15:52:46 - Strategy3-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=10000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:52:46.395981Z[Etc/UTC])

15:52:46 - Strategy1-onPositionUpdate 004 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:33.163Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10000 USDT, highestGainPrice=10000 USDT, latestGainPrice=10000 USDT)

15:52:47 - Strategy3-onPositionUpdate 001 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:47 - Strategy3-onPositionStatusUpdate 001 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:47 - Strategy3-onOrderUpdate 001 : OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, averagePrice=10000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387262Z[Etc/UTC], trades=[])

15:52:47 - Strategy3-onPositionUpdate 002 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01 BTC, averagePrice=10000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387262Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:48 - Strategy3-onTradeUpdate 001 : TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01 BTC, price=10000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387317Z[Etc/UTC])

15:52:48 - Strategy3-onPositionUpdate 003 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:48 - Strategy3-onPositionStatusUpdate 002 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:49 - Strategy3-onPositionUpdate 004 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:49 - Strategy3-onPositionStatusUpdate 003 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=null, closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:49 - Strategy3-onOrderUpdate 002 : OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, averagePrice=2000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.1 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419251Z[Etc/UTC], trades=[])

15:52:49 - Strategy3-onPositionUpdate 005 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.1 ETH, averagePrice=2000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.1 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419251Z[Etc/UTC], trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:50 - Strategy3-onTradeUpdate 002 : TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.1 ETH, price=2000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:52:49.419315Z[Etc/UTC])

15:52:50 - Strategy3-onPositionUpdate 006 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.10000000 ETH, price=2000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:52:50 - Strategy3-onPositionStatusUpdate 004 : PositionDTO(id=4, positionId=2, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000004, openingOrder=OrderDTO(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC], trades=[TradeDTO(id=4, tradeId=DRY_TRADE_000000004, type=BID, orderId=DRY_ORDER_000000004, order=Order(id=4, orderId=DRY_ORDER_000000004, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=ETH/USDT, amount=0.10000000 ETH, averagePrice=2000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.10000000 ETH, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC], trades=[]), currencyPair=ETH/USDT, amount=0.10000000 ETH, price=2000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:49.419Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:53:01 - Strategy1-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:01 - Strategy2-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:01 - Strategy3-onAccountUpdate 004 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.03062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=650.000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:02 - Strategy1-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=null, last=20000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:53:02.511198Z[Etc/UTC])

15:53:02 - Strategy3-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=null, last=20000, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2023-01-13T15:53:02.521722Z[Etc/UTC])

15:53:02 - Strategy1-onPositionUpdate 005 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 100 %, status=OPENED, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Strategy 1, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[TradeDTO(id=1, tradeId=DRY_TRADE_000000001, type=BID, orderId=DRY_ORDER_000000001, order=Order(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=50000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.00100000 BTC, userReference=null, timestamp=2023-01-13T15:52:33.162Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:33.163Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=10000.00000000 USDT, highestGainPrice=20000 USDT, latestGainPrice=20000 USDT)

15:53:02 - Strategy3-onPositionUpdate 007 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000 USDT)

15:53:02 - Strategy3-onPositionStatusUpdate 005 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000 USDT)

15:53:03 - Strategy3-onOrderUpdate 003 : OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548123Z[Etc/UTC], trades=[])

15:53:03 - Strategy3-onPositionUpdate 008 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSING, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548123Z[Etc/UTC], trades=[]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

15:53:03 - Strategy3-onTradeUpdate 003 : TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000 USDT, fee=0 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548166Z[Etc/UTC])

15:53:03 - Strategy3-onPositionUpdate 009 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

15:53:03 - Strategy3-onPositionStatusUpdate 006 : PositionDTO(id=3, positionId=1, type=LONG, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, rules=Stop gain at 100 %, status=CLOSED, forceClosing=false, openingOrderId=DRY_ORDER_000000003, openingOrder=OrderDTO(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[TradeDTO(id=3, tradeId=DRY_TRADE_000000003, type=BID, orderId=DRY_ORDER_000000003, order=Order(id=3, orderId=DRY_ORDER_000000003, type=BID, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=10000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=10000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:52:47.387Z[Etc/UTC])]), closingOrderId=DRY_ORDER_000000005, closingOrder=OrderDTO(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=StrategyDTO(id=3, strategyId=03, type=BASIC_STRATEGY, name=Strategy 3, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC], trades=[TradeDTO(id=5, tradeId=DRY_TRADE_000000005, type=ASK, orderId=DRY_ORDER_000000005, order=Order(id=5, orderId=DRY_ORDER_000000005, type=ASK, strategy=Strategy(id=3, strategyId=03, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 3), currencyPair=BTC/USDT, amount=0.01000000 BTC, averagePrice=20000.00000000 USDT, limitPrice=null, leverage=null, status=FILLED, cumulativeAmount=0.01000000 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.01000000 BTC, price=20000.00000000 USDT, fee=0E-8 BTC, userReference=null, timestamp=2023-01-13T15:53:02.548Z[Etc/UTC])]), lowestGainPrice=null, highestGainPrice=null, latestGainPrice=20000.00000000 USDT)

15:53:12 - Strategy1-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:12 - Strategy2-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:12 - Strategy3-onAccountUpdate 005 : AccountDTO(accountId=trade, name=trade, features=[], balances={BTC=BalanceDTO(currency=BTC, total=null, available=1.02062937, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=USDT, total=null, available=850.00000000, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), ETH=BalanceDTO(currency=ETH, total=null, available=9.60, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:13 - HikariPool-1 - Shutdown initiated...
15:53:13 - HikariPool-1 - Shutdown completed.
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 47.014 s - in tech.cassandre.trading.bot.test.strategy.multiple.MultipleStrategiesTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.strategy.CassandreStrategiesAutoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:14 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:14 - No active profile set, falling back to default profiles: default
15:53:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:15 - Finished Spring Data repository scanning in 136 ms. Found 5 JPA repository interfaces.
15:53:15 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:15 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:16 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:16 - HikariPool-1 - Starting...
15:53:16 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:16 - HikariPool-1 - Start completed.
15:53:16 - Successfully acquired change log lock
15:53:16 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:16 - Reading from PUBLIC.DATABASECHANGELOG
15:53:16 - Successfully released change log lock
15:53:16 - Successfully acquired change log lock
Skipping auto-registration
15:53:16 - Skipping auto-registration
15:53:16 - Table EXCHANGE_ACCOUNTS created
15:53:16 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:16 - Table STRATEGIES created
15:53:16 - Auto-increment added to STRATEGIES.ID
15:53:16 - Table POSITIONS created
15:53:16 - Auto-increment added to POSITIONS.ID
15:53:16 - Table ORDERS created
15:53:16 - Auto-increment added to ORDERS.ID
15:53:16 - Table TRADES created
15:53:16 - Auto-increment added to TRADES.ID
15:53:16 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:16 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:16 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:16 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:16 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:16 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:16 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:16 - Index IDX_POSITIONS_POSITION_ID created
15:53:16 - Index IDX_POSITIONS_STATUS created
15:53:16 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:16 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:16 - Index IDX_ORDERS_ORDER_ID created
15:53:16 - Index IDX_TRADES_TRADE_ID created
15:53:16 - Index IDX_TRADES_ORDER_ID created
15:53:16 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:53:16 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:16 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:16 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:16 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:16 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:16 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:16 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:53:16 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:16 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:53:16 - Successfully released change log lock
15:53:17 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:17 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:17 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:17 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:17 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:17 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:18 - Calling Remote Init...
15:53:18 - ExchangeConfiguration - Dry mode is OFF
15:53:18 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:18 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:18 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:53:18 - Initializing ExecutorService 'taskScheduler'
15:53:18 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:18 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:53:18 - StrategyConfiguration - Running strategy '01/Strategy 1' (requires BTC/USDT).
15:53:18 - StrategyConfiguration - Running strategy '02/Strategy 2' (requires BTC/ETH).
15:53:18 - StrategyConfiguration - Running strategy '03/Strategy 3' (requires BTC/USDT, ETH/USDT).
15:53:18 - Started ForkedBooter in 4.364 seconds (JVM running for 4.943)
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:18 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:18 - No active profile set, falling back to default profiles: default
15:53:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:19 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:53:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:19 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:53:19 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:19 - HikariPool-2 - Starting...
15:53:19 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:19 - HikariPool-2 - Start completed.
15:53:19 - Successfully acquired change log lock
15:53:19 - Reading from PUBLIC.DATABASECHANGELOG
15:53:19 - Successfully released change log lock
15:53:19 - Successfully acquired change log lock
Skipping auto-registration
15:53:19 - Skipping auto-registration
15:53:19 - Successfully released change log lock
15:53:19 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:19 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:19 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:19 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:19 - Calling Remote Init...
15:53:19 - ExchangeConfiguration - Dry mode is OFF
15:53:19 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:19 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:19 - Initializing ExecutorService 'taskScheduler'
15:53:19 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:19 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: InvalidStrategy doesn't extend BasicCassandreStrategy or BasicTa4jCassandreStrategy.
15:53:19 - Shutting down ExecutorService 'taskScheduler'
15:53:19 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:19 - HikariPool-2 - Shutdown initiated...
15:53:19 - HikariPool-2 - Shutdown completed.
15:53:19 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:19 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

InvalidStrategy doesn't extend BasicCassandreStrategy or BasicTa4jCassandreStrategy.

Action:

InvalidStrategy must extend BasicCassandreStrategy or BasicTa4jCassandreStrategy

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:19 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:19 - No active profile set, falling back to default profiles: default
15:53:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:19 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:53:19 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:19 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:53:19 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:19 - HikariPool-3 - Starting...
15:53:19 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:19 - HikariPool-3 - Start completed.
15:53:19 - Successfully acquired change log lock
15:53:19 - Reading from PUBLIC.DATABASECHANGELOG
15:53:19 - Successfully released change log lock
15:53:19 - Successfully acquired change log lock
Skipping auto-registration
15:53:19 - Skipping auto-registration
15:53:19 - Successfully released change log lock
15:53:19 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:19 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:19 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:19 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:19 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:20 - Strategy1-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 001 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:53:20 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

15:53:20 - Strategy3-onTickerUpdate 002 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-02T00:00Z[Etc/UTC])

15:53:20 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=0000001, type=BID, orderId=000001, order=Order(id=1, orderId=000001, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Strategy 1), currencyPair=BTC/USDT, amount=null, averagePrice=null, limitPrice=null, leverage=null, status=null, cumulativeAmount=null, userReference=null, timestamp=null, trades=[]), currencyPair=BTC/USDT, amount=null, price=null, fee=null, userReference=null, timestamp=null)

15:53:20 - Strategy1-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1070, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 003 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1070, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-03T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 004 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-04T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/USDT, open=140, last=140, bid=null, ask=null, high=140, low=140, vwap=null, volume=1080, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:53:20 - Calling Remote Init...
15:53:20 - ExchangeConfiguration - Dry mode is OFF
15:53:20 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:20 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:20 - Initializing ExecutorService 'taskScheduler'
15:53:20 - Strategy3-onTickerUpdate 005 : TickerDTO(currencyPair=BTC/USDT, open=140, last=140, bid=null, ask=null, high=140, low=140, vwap=null, volume=1080, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-05T00:00Z[Etc/UTC])

15:53:20 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:20 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Your strategies specifies a trading account that doesn't exist.
15:53:20 - Shutting down ExecutorService 'taskScheduler'
15:53:20 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:20 - HikariPool-3 - Shutdown initiated...
15:53:20 - HikariPool-3 - Shutdown completed.
15:53:20 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:20 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Your strategies specifies a trading account that doesn't exist.

Action:

Check your getTradeAccount(Set<AccountDTO> accounts) method as it returns an empty result - Strategies in error : class tech.cassandre.trading.bot.test.util.strategies.NoTradingAccountStrategy

15:53:20 - Strategy1-onTickerUpdate 006 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-06T00:00Z[Etc/UTC])

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:20 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:20 - No active profile set, falling back to default profiles: default
15:53:20 - Strategy1-onTickerUpdate 007 : TickerDTO(currencyPair=BTC/USDT, open=119, last=119, bid=null, ask=null, high=119, low=119, vwap=null, volume=1090, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 007 : TickerDTO(currencyPair=BTC/USDT, open=119, last=119, bid=null, ask=null, high=119, low=119, vwap=null, volume=1090, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-07T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 008 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 008 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-08T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 009 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 009 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-09T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 010 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-10T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 010 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-10T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 011 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-11T00:00Z[Etc/UTC])

15:53:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:20 - Strategy3-onTickerUpdate 011 : TickerDTO(currencyPair=BTC/USDT, open=110, last=110, bid=null, ask=null, high=110, low=110, vwap=null, volume=1100, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-11T00:00Z[Etc/UTC])

15:53:20 - Finished Spring Data repository scanning in 15 ms. Found 5 JPA repository interfaces.
15:53:20 - Strategy1-onTickerUpdate 012 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-12T00:00Z[Etc/UTC])

15:53:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:20 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:53:20 - Strategy3-onTickerUpdate 012 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-12T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 013 : TickerDTO(currencyPair=BTC/USDT, open=120, last=120, bid=null, ask=null, high=120, low=120, vwap=null, volume=1120, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-13T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 013 : TickerDTO(currencyPair=BTC/USDT, open=120, last=120, bid=null, ask=null, high=120, low=120, vwap=null, volume=1120, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-13T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 014 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-14T00:00Z[Etc/UTC])

15:53:20 - HikariPool-4 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:20 - HikariPool-4 - Starting...
15:53:20 - HikariPool-4 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:20 - HikariPool-4 - Start completed.
15:53:20 - Successfully acquired change log lock
15:53:20 - Strategy3-onTickerUpdate 014 : TickerDTO(currencyPair=BTC/USDT, open=100, last=100, bid=null, ask=null, high=100, low=100, vwap=null, volume=1060, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-14T00:00Z[Etc/UTC])

15:53:20 - Strategy1-onTickerUpdate 015 : TickerDTO(currencyPair=BTC/USDT, open=130, last=130, bid=null, ask=null, high=130, low=130, vwap=null, volume=1130, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-15T00:00Z[Etc/UTC])

15:53:20 - Strategy3-onTickerUpdate 015 : TickerDTO(currencyPair=BTC/USDT, open=130, last=130, bid=null, ask=null, high=130, low=130, vwap=null, volume=1130, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-15T00:00Z[Etc/UTC])

15:53:20 - Reading from PUBLIC.DATABASECHANGELOG
15:53:20 - Successfully released change log lock
15:53:20 - Successfully acquired change log lock
Skipping auto-registration
15:53:20 - Skipping auto-registration
15:53:20 - Successfully released change log lock
15:53:20 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:20 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:20 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:20 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:20 - Calling Remote Init...
15:53:20 - ExchangeConfiguration - Dry mode is OFF
15:53:20 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:20 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:20 - Initializing ExecutorService 'taskScheduler'
15:53:20 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:20 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Your strategies specifies a trading account that doesn't exist.
15:53:20 - Shutting down ExecutorService 'taskScheduler'
15:53:20 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:20 - HikariPool-4 - Shutdown initiated...
15:53:20 - HikariPool-4 - Shutdown completed.
15:53:20 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:20 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Your strategies specifies a trading account that doesn't exist.

Action:

Check your getTradeAccount(Set<AccountDTO> accounts) method as it returns an empty result - Strategies in error : class tech.cassandre.trading.bot.test.util.strategies.NoTradingAccountStrategy

 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:20 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16350 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:20 - No active profile set, falling back to default profiles: default
15:53:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:20 - Finished Spring Data repository scanning in 14 ms. Found 5 JPA repository interfaces.
15:53:20 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:20 - Finished Spring Data repository scanning in 3 ms. Found 5 JPA repository interfaces.
15:53:20 - HikariPool-5 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:20 - HikariPool-5 - Starting...
15:53:20 - HikariPool-5 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:20 - HikariPool-5 - Start completed.
15:53:20 - Successfully acquired change log lock
15:53:20 - Reading from PUBLIC.DATABASECHANGELOG
15:53:20 - Successfully released change log lock
15:53:20 - Successfully acquired change log lock
Skipping auto-registration
15:53:20 - Skipping auto-registration
15:53:20 - Successfully released change log lock
15:53:20 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:20 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:20 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:20 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:20 - Strategy1-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:21 - Calling Remote Init...
15:53:21 - ExchangeConfiguration - Dry mode is OFF
15:53:21 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:21 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:21 - Initializing ExecutorService 'taskScheduler'
15:53:21 - Strategy2-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:21 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:21 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.StrategiesAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: No strategy found
15:53:21 - Shutting down ExecutorService 'taskScheduler'
15:53:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:21 - HikariPool-5 - Shutdown initiated...
15:53:21 - HikariPool-5 - Shutdown completed.
15:53:21 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:21 - Strategy3-onAccountUpdate 001 : AccountDTO(accountId=02, name=null, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:21 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

No strategy found

Action:

You must have one class with @CassandreStrategy.

[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.513 s - in tech.cassandre.trading.bot.test.configuration.strategy.CassandreStrategiesAutoConfigurationTest
15:53:21 - TestableStrategy-onAccountUpdate 002 : AccountDTO(accountId=03, name=trade, features=[], balances={BTC=BalanceDTO(currency=null, total=null, available=1, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null), USDT=BalanceDTO(currency=null, total=null, available=150, frozen=null, loaned=null, borrowed=null, withdrawing=null, depositing=null)})

15:53:21 - Shutting down ExecutorService 'taskScheduler'
15:53:21 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:21 - HikariPool-1 - Shutdown initiated...
15:53:21 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseProTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:22 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16661 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:22 - No active profile set, falling back to default profiles: default
15:53:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:22 - Finished Spring Data repository scanning in 133 ms. Found 5 JPA repository interfaces.
15:53:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:22 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:23 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:23 - HikariPool-1 - Starting...
15:53:23 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:23 - HikariPool-1 - Start completed.
15:53:23 - Successfully acquired change log lock
15:53:24 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:24 - Reading from PUBLIC.DATABASECHANGELOG
15:53:24 - Successfully released change log lock
15:53:24 - Successfully acquired change log lock
Skipping auto-registration
15:53:24 - Skipping auto-registration
15:53:24 - Table EXCHANGE_ACCOUNTS created
15:53:24 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:24 - Table STRATEGIES created
15:53:24 - Auto-increment added to STRATEGIES.ID
15:53:24 - Table POSITIONS created
15:53:24 - Auto-increment added to POSITIONS.ID
15:53:24 - Table ORDERS created
15:53:24 - Auto-increment added to ORDERS.ID
15:53:24 - Table TRADES created
15:53:24 - Auto-increment added to TRADES.ID
15:53:24 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:24 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:24 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:24 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:24 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:24 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:24 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:24 - Index IDX_POSITIONS_POSITION_ID created
15:53:24 - Index IDX_POSITIONS_STATUS created
15:53:24 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:24 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:24 - Index IDX_ORDERS_ORDER_ID created
15:53:24 - Index IDX_TRADES_TRADE_ID created
15:53:24 - Index IDX_TRADES_ORDER_ID created
15:53:24 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:53:24 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:24 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:24 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:24 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:24 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:24 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:24 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:24 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:24 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:53:24 - Successfully released change log lock
15:53:24 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:24 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:24 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:24 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:25 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:25 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:26 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Unknown configuration error : Illegal base64 character 2d
15:53:26 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:26 - HikariPool-1 - Shutdown initiated...
15:53:26 - HikariPool-1 - Shutdown completed.
15:53:26 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:26 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Unknown configuration error : Illegal base64 character 2d

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.287 s - in tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseProTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTickerTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:27 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 16919 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:27 - No active profile set, falling back to default profiles: default
15:53:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:28 - Finished Spring Data repository scanning in 121 ms. Found 5 JPA repository interfaces.
15:53:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:28 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:28 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:28 - HikariPool-1 - Starting...
15:53:28 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:28 - HikariPool-1 - Start completed.
15:53:28 - Successfully acquired change log lock
15:53:29 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:29 - Reading from PUBLIC.DATABASECHANGELOG
15:53:29 - Successfully released change log lock
15:53:29 - Successfully acquired change log lock
Skipping auto-registration
15:53:29 - Skipping auto-registration
15:53:29 - Table EXCHANGE_ACCOUNTS created
15:53:29 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:29 - Table STRATEGIES created
15:53:29 - Auto-increment added to STRATEGIES.ID
15:53:29 - Table POSITIONS created
15:53:29 - Auto-increment added to POSITIONS.ID
15:53:29 - Table ORDERS created
15:53:29 - Auto-increment added to ORDERS.ID
15:53:29 - Table TRADES created
15:53:29 - Auto-increment added to TRADES.ID
15:53:29 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:29 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:29 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:29 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:29 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:29 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:29 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:29 - Index IDX_POSITIONS_POSITION_ID created
15:53:29 - Index IDX_POSITIONS_STATUS created
15:53:29 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:29 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:29 - Index IDX_ORDERS_ORDER_ID created
15:53:29 - Index IDX_TRADES_TRADE_ID created
15:53:29 - Index IDX_TRADES_ORDER_ID created
15:53:29 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
15:53:29 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:29 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:29 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:29 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:29 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:29 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:29 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:29 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:29 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:29 - Successfully released change log lock
15:53:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:29 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:29 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:29 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:30 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:30 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:30 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
15:53:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:30 - HikariPool-1 - Shutdown initiated...
15:53:30 - HikariPool-1 - Shutdown completed.
15:53:30 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:30 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: AT20S
    Origin: "cassandre.trading.bot.exchange.rates.ticker" from property source "systemProperties"
    Reason: Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.805 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTickerTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.UnknownExchangeTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:32 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 17231 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:32 - No active profile set, falling back to default profiles: default
15:53:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:32 - Finished Spring Data repository scanning in 120 ms. Found 5 JPA repository interfaces.
15:53:32 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:32 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:33 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:33 - HikariPool-1 - Starting...
15:53:33 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:33 - HikariPool-1 - Start completed.
15:53:33 - Successfully acquired change log lock
15:53:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:34 - Reading from PUBLIC.DATABASECHANGELOG
15:53:34 - Successfully released change log lock
15:53:34 - Successfully acquired change log lock
Skipping auto-registration
15:53:34 - Skipping auto-registration
15:53:34 - Table EXCHANGE_ACCOUNTS created
15:53:34 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:34 - Table STRATEGIES created
15:53:34 - Auto-increment added to STRATEGIES.ID
15:53:34 - Table POSITIONS created
15:53:34 - Auto-increment added to POSITIONS.ID
15:53:34 - Table ORDERS created
15:53:34 - Auto-increment added to ORDERS.ID
15:53:34 - Table TRADES created
15:53:34 - Auto-increment added to TRADES.ID
15:53:34 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:34 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:34 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:34 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:34 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:34 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:34 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:34 - Index IDX_POSITIONS_POSITION_ID created
15:53:34 - Index IDX_POSITIONS_STATUS created
15:53:34 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:34 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:34 - Index IDX_ORDERS_ORDER_ID created
15:53:34 - Index IDX_TRADES_TRADE_ID created
15:53:34 - Index IDX_TRADES_ORDER_ID created
15:53:34 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:53:34 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:34 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:34 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:34 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:34 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:34 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:34 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:34 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:34 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:34 - Successfully released change log lock
15:53:34 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:34 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:34 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:34 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:35 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:35 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Impossible to find the exchange you requested : foo
15:53:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:35 - HikariPool-1 - Shutdown initiated...
15:53:35 - HikariPool-1 - Shutdown completed.
15:53:35 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:35 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Impossible to find the exchange you requested : foo

Action:

Choose a valid exchange (https://github.com/knowm/XChange) and add the dependency to Cassandre

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.967 s - in tech.cassandre.trading.bot.test.configuration.exchange.UnknownExchangeTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForAccountTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:37 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 17782 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:37 - No active profile set, falling back to default profiles: default
15:53:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:37 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
15:53:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:37 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:38 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:38 - HikariPool-1 - Starting...
15:53:38 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:38 - HikariPool-1 - Start completed.
15:53:38 - Successfully acquired change log lock
15:53:39 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:39 - Reading from PUBLIC.DATABASECHANGELOG
15:53:39 - Successfully released change log lock
15:53:39 - Successfully acquired change log lock
Skipping auto-registration
15:53:39 - Skipping auto-registration
15:53:39 - Table EXCHANGE_ACCOUNTS created
15:53:39 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:39 - Table STRATEGIES created
15:53:39 - Auto-increment added to STRATEGIES.ID
15:53:39 - Table POSITIONS created
15:53:39 - Auto-increment added to POSITIONS.ID
15:53:39 - Table ORDERS created
15:53:39 - Auto-increment added to ORDERS.ID
15:53:39 - Table TRADES created
15:53:39 - Auto-increment added to TRADES.ID
15:53:39 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:39 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:39 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:39 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:39 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:39 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:39 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:39 - Index IDX_POSITIONS_POSITION_ID created
15:53:39 - Index IDX_POSITIONS_STATUS created
15:53:39 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:39 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:39 - Index IDX_ORDERS_ORDER_ID created
15:53:39 - Index IDX_TRADES_TRADE_ID created
15:53:39 - Index IDX_TRADES_ORDER_ID created
15:53:39 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:53:39 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:39 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:39 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:39 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:39 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:39 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:39 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:39 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:39 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:39 - Successfully released change log lock
15:53:39 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:39 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:39 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:39 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:40 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:40 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:40 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
15:53:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:40 - HikariPool-1 - Shutdown initiated...
15:53:40 - HikariPool-1 - Shutdown completed.
15:53:40 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:40 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.account
    Value: A
    Origin: "cassandre.trading.bot.exchange.rates.account" from property source "systemProperties"
    Reason: Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.098 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForAccountTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.ValidConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:42 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18392 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:42 - No active profile set, falling back to default profiles: default
15:53:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:42 - Finished Spring Data repository scanning in 134 ms. Found 5 JPA repository interfaces.
15:53:42 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:42 - Finished Spring Data repository scanning in 9 ms. Found 5 JPA repository interfaces.
15:53:43 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:43 - HikariPool-1 - Starting...
15:53:43 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:43 - HikariPool-1 - Start completed.
15:53:43 - Successfully acquired change log lock
15:53:44 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:44 - Reading from PUBLIC.DATABASECHANGELOG
15:53:44 - Successfully released change log lock
15:53:44 - Successfully acquired change log lock
Skipping auto-registration
15:53:44 - Skipping auto-registration
15:53:44 - Table EXCHANGE_ACCOUNTS created
15:53:44 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:44 - Table STRATEGIES created
15:53:44 - Auto-increment added to STRATEGIES.ID
15:53:44 - Table POSITIONS created
15:53:44 - Auto-increment added to POSITIONS.ID
15:53:44 - Table ORDERS created
15:53:44 - Auto-increment added to ORDERS.ID
15:53:44 - Table TRADES created
15:53:44 - Auto-increment added to TRADES.ID
15:53:44 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:44 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:44 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:44 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:44 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:44 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:44 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:44 - Index IDX_POSITIONS_POSITION_ID created
15:53:44 - Index IDX_POSITIONS_STATUS created
15:53:44 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:44 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:44 - Index IDX_ORDERS_ORDER_ID created
15:53:44 - Index IDX_TRADES_TRADE_ID created
15:53:44 - Index IDX_TRADES_ORDER_ID created
15:53:44 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:53:44 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:44 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:44 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:44 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:44 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:44 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:44 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:44 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:44 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:44 - Successfully released change log lock
15:53:44 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:44 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:44 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:44 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:45 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:45 - Calling Remote Init...
15:53:45 - ExchangeConfiguration - Dry mode is OFF
15:53:45 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:53:45 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:53:46 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:53:46 - Initializing ExecutorService 'taskScheduler'
15:53:46 - StrategyConfiguration - Accounts available : '01/trade'.
15:53:46 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:53:46 - Started ForkedBooter in 4.278 seconds (JVM running for 4.923)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.396 s - in tech.cassandre.trading.bot.test.configuration.exchange.ValidConfigurationTest
15:53:46 - Shutting down ExecutorService 'taskScheduler'
15:53:46 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:46 - HikariPool-1 - Shutdown initiated...
15:53:46 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:47 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 18636 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:47 - No active profile set, falling back to default profiles: default
15:53:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:48 - Finished Spring Data repository scanning in 144 ms. Found 5 JPA repository interfaces.
15:53:48 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:48 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:48 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:48 - HikariPool-1 - Starting...
15:53:48 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:48 - HikariPool-1 - Start completed.
15:53:49 - Successfully acquired change log lock
15:53:49 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:49 - Reading from PUBLIC.DATABASECHANGELOG
15:53:49 - Successfully released change log lock
15:53:49 - Successfully acquired change log lock
Skipping auto-registration
15:53:49 - Skipping auto-registration
15:53:49 - Table EXCHANGE_ACCOUNTS created
15:53:49 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:49 - Table STRATEGIES created
15:53:49 - Auto-increment added to STRATEGIES.ID
15:53:49 - Table POSITIONS created
15:53:49 - Auto-increment added to POSITIONS.ID
15:53:49 - Table ORDERS created
15:53:49 - Auto-increment added to ORDERS.ID
15:53:49 - Table TRADES created
15:53:49 - Auto-increment added to TRADES.ID
15:53:49 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:49 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:49 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:49 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:49 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:49 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:49 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:49 - Index IDX_POSITIONS_POSITION_ID created
15:53:49 - Index IDX_POSITIONS_STATUS created
15:53:49 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:49 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:49 - Index IDX_ORDERS_ORDER_ID created
15:53:49 - Index IDX_TRADES_TRADE_ID created
15:53:49 - Index IDX_TRADES_ORDER_ID created
15:53:49 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 33ms
15:53:49 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:49 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:49 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:49 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:49 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:49 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:49 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:49 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:49 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 3ms
15:53:49 - Successfully released change log lock
15:53:49 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:49 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:49 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:49 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:50 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:50 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:51 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
15:53:51 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:51 - HikariPool-1 - Shutdown initiated...
15:53:51 - HikariPool-1 - Shutdown completed.
15:53:51 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:51 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.modes.dry
    Value: null
    Reason: Dry parameter required, set it to true to use the dry mode

    Property: cassandre.trading.bot.exchange.modes.sandbox
    Value: null
    Reason: Sandbox parameter required, set it to true to use the sandbox

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: null
    Reason: Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)

    Property: cassandre.trading.bot.exchange.secret
    Value: null
    Reason: API secret required

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: null
    Reason: Delay between calls to trade API is mandatory

    Property: cassandre.trading.bot.exchange.name
    Value: null
    Reason: Exchange name required, for example : coinbase, kraken, kucoin...

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: null
    Reason: Delay between calls to ticker API is mandatory

    Property: cassandre.trading.bot.exchange.rates.ticker
    Value: null
    Reason: Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)

    Property: cassandre.trading.bot.exchange.rates.account
    Value: null
    Reason: Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)

    Property: cassandre.trading.bot.exchange.username
    Value: null
    Reason: API username required

    Property: cassandre.trading.bot.exchange.passphrase
    Value: null
    Reason: API passphrase required

    Property: cassandre.trading.bot.exchange.key
    Value: null
    Reason: API key required

    Property: cassandre.trading.bot.exchange.rates.account
    Value: null
    Reason: Delay between calls to account API is mandatory


Action:

Update your application's configuration

org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:800)
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:229)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1354)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:564)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:944)
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:782)
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:774)
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:439)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:339)
	at tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest.checkErrorMessages(NoConfigurationTest.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:688)
	at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131)
	at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:149)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:140)
	at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:84)
	at org.junit.jupiter.engine.execution.ExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(ExecutableInvoker.java:115)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.lambda$invoke$0(ExecutableInvoker.java:105)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45)
	at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:104)
	at org.junit.jupiter.engine.execution.ExecutableInvoker.invoke(ExecutableInvoker.java:98)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$6(TestMethodTestDescriptor.java:210)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:206)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:131)
	at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:65)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:143)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:129)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:127)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:126)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:84)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:108)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)
	at org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:96)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:75)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
Caused by: org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:92)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.postProcessBeforeInitialization(ConfigurationPropertiesBindingPostProcessor.java:78)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.applyBeanPostProcessorsBeforeInitialization(AbstractAutowireCapableBeanFactory.java:422)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1778)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:602)
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:524)
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335)
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333)
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208)
	at org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:276)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1380)
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1300)
	at org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:887)
	at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:791)
	... 84 more
Caused by: org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
	at org.springframework.boot.context.properties.bind.Binder.handleBindError(Binder.java:363)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:323)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:308)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:238)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:225)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBinder.bind(ConfigurationPropertiesBinder.java:91)
	at org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor.bind(ConfigurationPropertiesBindingPostProcessor.java:89)
	... 98 more
Caused by: org.springframework.boot.context.properties.bind.validation.BindValidationException: Binding validation errors on cassandre.trading.bot.exchange
   - Field error in object 'cassandre.trading.bot.exchange' on field 'modes.dry': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.modes.dry,NotNull.modes.dry,NotNull.dry,NotNull.java.lang.Boolean,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.modes.dry,modes.dry]; arguments []; default message [modes.dry]]; default message [Dry parameter required, set it to true to use the dry mode]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'modes.sandbox': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.modes.sandbox,NotNull.modes.sandbox,NotNull.sandbox,NotNull.java.lang.Boolean,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.modes.sandbox,modes.sandbox]; arguments []; default message [modes.sandbox]]; default message [Sandbox parameter required, set it to true to use the sandbox]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.trade': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.trade,Rate.rates.trade,Rate.trade,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.trade,rates.trade]; arguments []; default message [rates.trade]]; default message [Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'secret': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.secret,NotEmpty.secret,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.secret,secret]; arguments []; default message [secret]]; default message [API secret required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.trade': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.trade,NotNull.rates.trade,NotNull.trade,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.trade,rates.trade]; arguments []; default message [rates.trade]]; default message [Delay between calls to trade API is mandatory]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'name': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.name,NotEmpty.name,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.name,name]; arguments []; default message [name]]; default message [Exchange name required, for example : coinbase, kraken, kucoin...]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.ticker': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.ticker,NotNull.rates.ticker,NotNull.ticker,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.ticker,rates.ticker]; arguments []; default message [rates.ticker]]; default message [Delay between calls to ticker API is mandatory]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.ticker': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.ticker,Rate.rates.ticker,Rate.ticker,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.ticker,rates.ticker]; arguments []; default message [rates.ticker]]; default message [Invalid ticker rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.account': rejected value [null]; codes [Rate.cassandre.trading.bot.exchange.rates.account,Rate.rates.account,Rate.account,Rate.java.lang.String,Rate]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.account,rates.account]; arguments []; default message [rates.account]]; default message [Invalid account rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'username': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.username,NotEmpty.username,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.username,username]; arguments []; default message [username]]; default message [API username required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'passphrase': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.passphrase,NotEmpty.passphrase,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.passphrase,passphrase]; arguments []; default message [passphrase]]; default message [API passphrase required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'key': rejected value [null]; codes [NotEmpty.cassandre.trading.bot.exchange.key,NotEmpty.key,NotEmpty.java.lang.String,NotEmpty]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.key,key]; arguments []; default message [key]]; default message [API key required]
   - Field error in object 'cassandre.trading.bot.exchange' on field 'rates.account': rejected value [null]; codes [NotNull.cassandre.trading.bot.exchange.rates.account,NotNull.rates.account,NotNull.account,NotNull.java.lang.String,NotNull]; arguments [org.springframework.context.support.DefaultMessageSourceResolvable: codes [cassandre.trading.bot.exchange.rates.account,rates.account]; arguments []; default message [rates.account]]; default message [Delay between calls to account API is mandatory]
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.validateAndPush(ValidationBindHandler.java:141)
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.validate(ValidationBindHandler.java:114)
	at org.springframework.boot.context.properties.bind.validation.ValidationBindHandler.onFinish(ValidationBindHandler.java:105)
	at org.springframework.boot.context.properties.bind.Binder.handleBindResult(Binder.java:339)
	at org.springframework.boot.context.properties.bind.Binder.bind(Binder.java:320)
	... 103 more
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.081 s - in tech.cassandre.trading.bot.test.configuration.exchange.NoConfigurationTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.ExchangeNameMissingTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:52 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 19081 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:52 - No active profile set, falling back to default profiles: default
15:53:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:53 - Finished Spring Data repository scanning in 131 ms. Found 5 JPA repository interfaces.
15:53:53 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:53 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:53 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:53 - HikariPool-1 - Starting...
15:53:53 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:53 - HikariPool-1 - Start completed.
15:53:54 - Successfully acquired change log lock
15:53:54 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:54 - Reading from PUBLIC.DATABASECHANGELOG
15:53:54 - Successfully released change log lock
15:53:54 - Successfully acquired change log lock
Skipping auto-registration
15:53:54 - Skipping auto-registration
15:53:54 - Table EXCHANGE_ACCOUNTS created
15:53:54 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:54 - Table STRATEGIES created
15:53:54 - Auto-increment added to STRATEGIES.ID
15:53:54 - Table POSITIONS created
15:53:54 - Auto-increment added to POSITIONS.ID
15:53:54 - Table ORDERS created
15:53:54 - Auto-increment added to ORDERS.ID
15:53:54 - Table TRADES created
15:53:54 - Auto-increment added to TRADES.ID
15:53:54 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:54 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:54 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:54 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:54 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:54 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:54 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:54 - Index IDX_POSITIONS_POSITION_ID created
15:53:54 - Index IDX_POSITIONS_STATUS created
15:53:54 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:54 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:54 - Index IDX_ORDERS_ORDER_ID created
15:53:54 - Index IDX_TRADES_TRADE_ID created
15:53:54 - Index IDX_TRADES_ORDER_ID created
15:53:54 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 43ms
15:53:54 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:54 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:54 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:54 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:54 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:54 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:54 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:54 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:54 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:54 - Successfully released change log lock
15:53:54 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:54 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:54 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:53:55 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:53:55 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:53:55 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:53:56 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
15:53:56 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:53:56 - HikariPool-1 - Shutdown initiated...
15:53:56 - HikariPool-1 - Shutdown completed.
15:53:56 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:53:56 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.name
    Value: null
    Reason: Exchange name required, for example : coinbase, kraken, kucoin...


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.024 s - in tech.cassandre.trading.bot.test.configuration.exchange.ExchangeNameMissingTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:53:57 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 19302 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:53:57 - No active profile set, falling back to default profiles: default
15:53:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:58 - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
15:53:58 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:53:58 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:53:58 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:53:58 - HikariPool-1 - Starting...
15:53:58 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:53:58 - HikariPool-1 - Start completed.
15:53:59 - Successfully acquired change log lock
15:53:59 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:53:59 - Reading from PUBLIC.DATABASECHANGELOG
15:53:59 - Successfully released change log lock
15:53:59 - Successfully acquired change log lock
Skipping auto-registration
15:53:59 - Skipping auto-registration
15:53:59 - Table EXCHANGE_ACCOUNTS created
15:53:59 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:53:59 - Table STRATEGIES created
15:53:59 - Auto-increment added to STRATEGIES.ID
15:53:59 - Table POSITIONS created
15:53:59 - Auto-increment added to POSITIONS.ID
15:53:59 - Table ORDERS created
15:53:59 - Auto-increment added to ORDERS.ID
15:53:59 - Table TRADES created
15:53:59 - Auto-increment added to TRADES.ID
15:53:59 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:53:59 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:53:59 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:53:59 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:53:59 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:53:59 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:53:59 - Index IDX_STRATEGIES_STRATEGY_ID created
15:53:59 - Index IDX_POSITIONS_POSITION_ID created
15:53:59 - Index IDX_POSITIONS_STATUS created
15:53:59 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:53:59 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:53:59 - Index IDX_ORDERS_ORDER_ID created
15:53:59 - Index IDX_TRADES_TRADE_ID created
15:53:59 - Index IDX_TRADES_ORDER_ID created
15:53:59 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
15:53:59 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:53:59 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:53:59 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:53:59 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:53:59 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:53:59 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:53:59 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:53:59 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:53:59 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:53:59 - Successfully released change log lock
15:53:59 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:53:59 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:53:59 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:00 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:00 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:00 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:01 - Calling Remote Init...
15:54:01 - No remote initialization implemented for Coinbase. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
15:54:01 - ExchangeConfiguration - Dry mode is OFF
15:54:02 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Invocation of init method failed; nested exception is tech.cassandre.trading.bot.util.exception.ConfigurationException: Unknown configuration error : null (HTTP status code: 404)
15:54:02 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:02 - HikariPool-1 - Shutdown initiated...
15:54:02 - HikariPool-1 - Shutdown completed.
15:54:02 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:54:02 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Unknown configuration error : null (HTTP status code: 404)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.87 s - in tech.cassandre.trading.bot.test.configuration.exchange.CoinbaseTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTradeTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:03 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 19571 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:03 - No active profile set, falling back to default profiles: default
15:54:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:04 - Finished Spring Data repository scanning in 120 ms. Found 5 JPA repository interfaces.
15:54:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:04 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:54:04 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:04 - HikariPool-1 - Starting...
15:54:04 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:04 - HikariPool-1 - Start completed.
15:54:04 - Successfully acquired change log lock
15:54:05 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:05 - Reading from PUBLIC.DATABASECHANGELOG
15:54:05 - Successfully released change log lock
15:54:05 - Successfully acquired change log lock
Skipping auto-registration
15:54:05 - Skipping auto-registration
15:54:05 - Table EXCHANGE_ACCOUNTS created
15:54:05 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:05 - Table STRATEGIES created
15:54:05 - Auto-increment added to STRATEGIES.ID
15:54:05 - Table POSITIONS created
15:54:05 - Auto-increment added to POSITIONS.ID
15:54:05 - Table ORDERS created
15:54:05 - Auto-increment added to ORDERS.ID
15:54:05 - Table TRADES created
15:54:05 - Auto-increment added to TRADES.ID
15:54:05 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:05 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:05 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:05 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:05 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:05 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:05 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:05 - Index IDX_POSITIONS_POSITION_ID created
15:54:05 - Index IDX_POSITIONS_STATUS created
15:54:05 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:05 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:05 - Index IDX_ORDERS_ORDER_ID created
15:54:05 - Index IDX_TRADES_TRADE_ID created
15:54:05 - Index IDX_TRADES_ORDER_ID created
15:54:05 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:54:05 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:05 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:05 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:05 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:05 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:05 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:05 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:05 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:05 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:54:05 - Successfully released change log lock
15:54:05 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:05 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:05 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:05 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:06 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:06 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:07 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.ExchangeAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.exchange-tech.cassandre.trading.bot.util.parameters.ExchangeParameters': Could not bind properties to 'ExchangeParameters' : prefix=cassandre.trading.bot.exchange, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters
15:54:07 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:07 - HikariPool-1 - Shutdown initiated...
15:54:07 - HikariPool-1 - Shutdown completed.
15:54:07 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:54:07 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.exchange' to tech.cassandre.trading.bot.util.parameters.ExchangeParameters failed:

    Property: cassandre.trading.bot.exchange.rates.trade
    Value: AT20S
    Origin: "cassandre.trading.bot.exchange.rates.trade" from property source "systemProperties"
    Reason: Invalid trade rate - Enter a long value (ex: 123) or a standard ISO 8601 duration (ex: PT10H)


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.045 s - in tech.cassandre.trading.bot.test.configuration.exchange.InvalidRateForTradeTest
[INFO] Running tech.cassandre.trading.bot.test.configuration.database.ValidConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:08 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 19918 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:08 - No active profile set, falling back to default profiles: default
15:54:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:09 - Finished Spring Data repository scanning in 122 ms. Found 5 JPA repository interfaces.
15:54:09 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:09 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:54:09 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:09 - HikariPool-1 - Starting...
15:54:09 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:09 - HikariPool-1 - Start completed.
15:54:10 - Successfully acquired change log lock
15:54:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:10 - Reading from PUBLIC.DATABASECHANGELOG
15:54:10 - Successfully released change log lock
15:54:10 - Successfully acquired change log lock
Skipping auto-registration
15:54:10 - Skipping auto-registration
15:54:10 - Table EXCHANGE_ACCOUNTS created
15:54:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:10 - Table STRATEGIES created
15:54:10 - Auto-increment added to STRATEGIES.ID
15:54:10 - Table POSITIONS created
15:54:10 - Auto-increment added to POSITIONS.ID
15:54:10 - Table ORDERS created
15:54:10 - Auto-increment added to ORDERS.ID
15:54:10 - Table TRADES created
15:54:10 - Auto-increment added to TRADES.ID
15:54:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:10 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:10 - Index IDX_POSITIONS_POSITION_ID created
15:54:10 - Index IDX_POSITIONS_STATUS created
15:54:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:10 - Index IDX_ORDERS_ORDER_ID created
15:54:10 - Index IDX_TRADES_TRADE_ID created
15:54:10 - Index IDX_TRADES_ORDER_ID created
15:54:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:54:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:54:10 - Successfully released change log lock
15:54:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:10 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:10 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:11 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:11 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:12 - Calling Remote Init...
15:54:12 - ExchangeConfiguration - Dry mode is OFF
15:54:12 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:12 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:12 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:12 - Initializing ExecutorService 'taskScheduler'
15:54:12 - StrategyConfiguration - Accounts available : '01/trade'.
15:54:12 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:12 - Started ForkedBooter in 4.339 seconds (JVM running for 5.037)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.455 s - in tech.cassandre.trading.bot.test.configuration.database.ValidConfigurationTest
15:54:12 - Shutting down ExecutorService 'taskScheduler'
15:54:12 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:12 - HikariPool-1 - Shutdown initiated...
15:54:12 - HikariPool-1 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.test.configuration.database.NoConfigurationTest
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:13 - Starting ForkedBooter v2.22.2 using Java 11.0.17 on repairnator with PID 20213 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:13 - No active profile set, falling back to default profiles: default
15:54:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:14 - Finished Spring Data repository scanning in 138 ms. Found 5 JPA repository interfaces.
15:54:14 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:14 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:54:14 - Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'liquibase' defined in class path resource [org/springframework/boot/autoconfigure/liquibase/LiquibaseAutoConfiguration$LiquibaseConfiguration.class]: Unsatisfied dependency expressed through method 'liquibase' parameter 0; nested exception is org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'tech.cassandre.trading.bot.configuration.DatabaseAutoConfiguration': Unsatisfied dependency expressed through constructor parameter 0; nested exception is org.springframework.boot.context.properties.ConfigurationPropertiesBindException: Error creating bean with name 'cassandre.trading.bot.database-tech.cassandre.trading.bot.util.parameters.DatabaseParameters': Could not bind properties to 'DatabaseParameters' : prefix=cassandre.trading.bot.database, ignoreInvalidFields=false, ignoreUnknownFields=true; nested exception is org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.database' to tech.cassandre.trading.bot.util.parameters.DatabaseParameters
15:54:14 - 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
15:54:14 - 

***************************
APPLICATION FAILED TO START
***************************

Description:

Binding to target org.springframework.boot.context.properties.bind.BindException: Failed to bind properties under 'cassandre.trading.bot.database' to tech.cassandre.trading.bot.util.parameters.DatabaseParameters failed:

    Property: cassandre.trading.bot.database.datasource.username
    Value: null
    Reason: Database username must be set

    Property: cassandre.trading.bot.database.datasource.driverClassName
    Value: null
    Reason: Database driver class name must be set

    Property: cassandre.trading.bot.database.datasource.url
    Value: null
    Reason: Database url must be set


Action:

Update your application's configuration

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.325 s - in tech.cassandre.trading.bot.test.configuration.database.NoConfigurationTest
[INFO] Running tech.cassandre.trading.bot.test.dto.TradeDTOTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.047 s - in tech.cassandre.trading.bot.test.dto.TradeDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.EqualsBuilderTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 s - in tech.cassandre.trading.bot.test.dto.EqualsBuilderTest
[INFO] Running tech.cassandre.trading.bot.test.dto.OrderDTOTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s - in tech.cassandre.trading.bot.test.dto.OrderDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.PositionRulesDTOTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 s - in tech.cassandre.trading.bot.test.dto.PositionRulesDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.PositionCreationResultDTOTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in tech.cassandre.trading.bot.test.dto.PositionCreationResultDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.AccountDTOTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 s - in tech.cassandre.trading.bot.test.dto.AccountDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.GainDTOTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.062 s - in tech.cassandre.trading.bot.test.dto.GainDTOTest
[INFO] Running tech.cassandre.trading.bot.test.dto.TickerDTOTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.064 s - in tech.cassandre.trading.bot.test.dto.TickerDTOTest
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test
15:54:23.313 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:54:23.328 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:54:23.359 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:54:23.366 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test], using SpringBootContextLoader
15:54:23.369 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_2/Issue576Test-context.xml] does not exist
15:54:23.369 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_2/Issue576TestContext.groovy] does not exist
15:54:23.369 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:54:23.370 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test]: Issue576Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:54:23.449 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:54:23.450 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test
15:54:23.506 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test]: using defaults.
15:54:23.506 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:54:23.511 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:54:23.517 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4716be8b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fc32e4f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1869fbd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6af9fcb2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cce16f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7efaad5a, org.springframework.test.context.event.EventPublishingTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@73cd37c0]
15:54:23.519 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@141e5bef testClass = Issue576Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue576Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_2_2.Issue576TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@17497425, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@ffaa6af, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1b11171f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1ed6388a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15bb6bea], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:54:23.760 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@141e5bef testClass = Issue576Test, testInstance = tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test@3c8bdd5b, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue576Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.issues.v4_2_2.Issue576TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@17497425, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@ffaa6af, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@659499f1, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@1b11171f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1ed6388a, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@15bb6bea], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false, 'org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener.mocks' -> org.mockito.internal.configuration.InjectingAnnotationEngine$$Lambda$417/0x000000084019dc40@29d2d081]]].
15:54:23.774 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:54:23.777 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:24 - Starting Issue576Test using Java 11.0.17 on repairnator with PID 20981 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:24 - The following profiles are active: schedule-disabled
15:54:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:24 - Finished Spring Data repository scanning in 156 ms. Found 5 JPA repository interfaces.
15:54:24 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:24 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:54:25 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:25 - HikariPool-1 - Starting...
15:54:25 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:25 - HikariPool-1 - Start completed.
15:54:25 - Successfully acquired change log lock
15:54:25 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:25 - Reading from PUBLIC.DATABASECHANGELOG
15:54:25 - Successfully released change log lock
15:54:25 - Successfully acquired change log lock
Skipping auto-registration
15:54:25 - Skipping auto-registration
15:54:25 - Table EXCHANGE_ACCOUNTS created
15:54:25 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:25 - Table STRATEGIES created
15:54:25 - Auto-increment added to STRATEGIES.ID
15:54:25 - Table POSITIONS created
15:54:25 - Auto-increment added to POSITIONS.ID
15:54:25 - Table ORDERS created
15:54:25 - Auto-increment added to ORDERS.ID
15:54:26 - Table TRADES created
15:54:26 - Auto-increment added to TRADES.ID
15:54:26 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:26 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:26 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:26 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:26 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:26 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:26 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:26 - Index IDX_POSITIONS_POSITION_ID created
15:54:26 - Index IDX_POSITIONS_STATUS created
15:54:26 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:26 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:26 - Index IDX_ORDERS_ORDER_ID created
15:54:26 - Index IDX_TRADES_TRADE_ID created
15:54:26 - Index IDX_TRADES_ORDER_ID created
15:54:26 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 75ms
15:54:26 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:26 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:26 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:26 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:26 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:26 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:26 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 5ms
15:54:26 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:26 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 3ms
15:54:26 - Successfully released change log lock
15:54:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:26 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:26 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:27 - Calling Remote Init...
15:54:27 - ExchangeConfiguration - Dry mode is OFF
15:54:27 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:27 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:27 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:27 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:27 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:27 - Started Issue576Test in 4.176 seconds (JVM running for 5.215)
15:54:27 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:27 - HikariPool-1 - Shutdown initiated...
15:54:27 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:28 - Starting Issue576Test using Java 11.0.17 on repairnator with PID 20981 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:28 - The following profiles are active: schedule-disabled
15:54:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:28 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:54:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:28 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:54:28 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:28 - HikariPool-2 - Starting...
15:54:28 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:28 - HikariPool-2 - Start completed.
15:54:28 - Successfully acquired change log lock
15:54:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:28 - Reading from PUBLIC.DATABASECHANGELOG
15:54:28 - Successfully released change log lock
15:54:28 - Successfully acquired change log lock
Skipping auto-registration
15:54:28 - Skipping auto-registration
15:54:28 - Table EXCHANGE_ACCOUNTS created
15:54:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:28 - Table STRATEGIES created
15:54:28 - Auto-increment added to STRATEGIES.ID
15:54:28 - Table POSITIONS created
15:54:28 - Auto-increment added to POSITIONS.ID
15:54:28 - Table ORDERS created
15:54:28 - Auto-increment added to ORDERS.ID
15:54:28 - Table TRADES created
15:54:28 - Auto-increment added to TRADES.ID
15:54:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:28 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:28 - Index IDX_POSITIONS_POSITION_ID created
15:54:28 - Index IDX_POSITIONS_STATUS created
15:54:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:28 - Index IDX_ORDERS_ORDER_ID created
15:54:28 - Index IDX_TRADES_TRADE_ID created
15:54:28 - Index IDX_TRADES_ORDER_ID created
15:54:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 35ms
15:54:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:28 - Successfully released change log lock
15:54:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:28 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:28 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:28 - Calling Remote Init...
15:54:28 - ExchangeConfiguration - Dry mode is OFF
15:54:28 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:28 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:28 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:28 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:28 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:28 - Started Issue576Test in 0.73 seconds (JVM running for 5.965)
15:54:28 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:28 - HikariPool-2 - Shutdown initiated...
15:54:28 - HikariPool-2 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:28 - Starting Issue576Test using Java 11.0.17 on repairnator with PID 20981 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:28 - The following profiles are active: schedule-disabled
15:54:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:28 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
15:54:28 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:28 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:54:28 - HikariPool-3 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:28 - HikariPool-3 - Starting...
15:54:28 - HikariPool-3 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:28 - HikariPool-3 - Start completed.
15:54:28 - Successfully acquired change log lock
15:54:29 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:29 - Reading from PUBLIC.DATABASECHANGELOG
15:54:29 - Successfully released change log lock
15:54:29 - Successfully acquired change log lock
Skipping auto-registration
15:54:29 - Skipping auto-registration
15:54:29 - Table EXCHANGE_ACCOUNTS created
15:54:29 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:29 - Table STRATEGIES created
15:54:29 - Auto-increment added to STRATEGIES.ID
15:54:29 - Table POSITIONS created
15:54:29 - Auto-increment added to POSITIONS.ID
15:54:29 - Table ORDERS created
15:54:29 - Auto-increment added to ORDERS.ID
15:54:29 - Table TRADES created
15:54:29 - Auto-increment added to TRADES.ID
15:54:29 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:29 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:29 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:29 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:29 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:29 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:29 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:29 - Index IDX_POSITIONS_POSITION_ID created
15:54:29 - Index IDX_POSITIONS_STATUS created
15:54:29 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:29 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:29 - Index IDX_ORDERS_ORDER_ID created
15:54:29 - Index IDX_TRADES_TRADE_ID created
15:54:29 - Index IDX_TRADES_ORDER_ID created
15:54:29 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 15ms
15:54:29 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:29 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:29 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:29 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:29 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:29 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:29 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:54:29 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:29 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:29 - Successfully released change log lock
15:54:29 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:29 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:29 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:29 - Calling Remote Init...
15:54:29 - ExchangeConfiguration - Dry mode is OFF
15:54:29 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:29 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:29 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:29 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:29 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:29 - Started Issue576Test in 0.601 seconds (JVM running for 6.62)
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.065 s - in tech.cassandre.trading.bot.issues.v4_2_2.Issue576Test
15:54:29 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:29 - HikariPool-3 - Shutdown initiated...
15:54:29 - HikariPool-3 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test
15:54:30.321 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:54:30.328 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:54:30.359 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:54:30.370 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test], using SpringBootContextLoader
15:54:30.373 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue528Test-context.xml] does not exist
15:54:30.373 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue528TestContext.groovy] does not exist
15:54:30.373 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:54:30.374 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test]: Issue528Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:54:30.448 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:54:30.448 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test
15:54:30.503 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test]: using defaults.
15:54:30.504 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:54:30.509 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:54:30.514 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6239aba6, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3e6104fc, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@12359a82, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@68df9280, org.springframework.test.context.support.DirtiesContextTestExecutionListener@479460a6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@7164ca4c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@4f3bbf68, org.springframework.test.context.event.EventPublishingTestExecutionListener@5be46f9d, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3f91b517, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@68702e03, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a220c9a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@30c93896, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@59a008ba]
15:54:30.516 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7a67e3c6 testClass = Issue528Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cc558c6 testClass = Issue528Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@16610890, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d465b11, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2f217633, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@57cf54e1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:54:30.525 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7a67e3c6 testClass = Issue528Test, testInstance = tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test@1e461e41, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6cc558c6 testClass = Issue528Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@16610890, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@4d465b11, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2f217633, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@18d87d80, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@57cf54e1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:54:30.538 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:54:30.541 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:30 - Starting Issue528Test using Java 11.0.17 on repairnator with PID 21395 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:30 - The following profiles are active: schedule-disabled
15:54:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:31 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
15:54:31 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:31 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:54:31 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:31 - HikariPool-1 - Starting...
15:54:31 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:31 - HikariPool-1 - Start completed.
15:54:32 - Successfully acquired change log lock
15:54:32 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:32 - Reading from PUBLIC.DATABASECHANGELOG
15:54:32 - Successfully released change log lock
15:54:32 - Successfully acquired change log lock
Skipping auto-registration
15:54:32 - Skipping auto-registration
15:54:32 - Table EXCHANGE_ACCOUNTS created
15:54:32 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:32 - Table STRATEGIES created
15:54:32 - Auto-increment added to STRATEGIES.ID
15:54:32 - Table POSITIONS created
15:54:32 - Auto-increment added to POSITIONS.ID
15:54:32 - Table ORDERS created
15:54:32 - Auto-increment added to ORDERS.ID
15:54:32 - Table TRADES created
15:54:32 - Auto-increment added to TRADES.ID
15:54:32 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:32 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:32 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:32 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:32 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:32 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:32 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:32 - Index IDX_POSITIONS_POSITION_ID created
15:54:32 - Index IDX_POSITIONS_STATUS created
15:54:32 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:32 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:32 - Index IDX_ORDERS_ORDER_ID created
15:54:32 - Index IDX_TRADES_TRADE_ID created
15:54:32 - Index IDX_TRADES_ORDER_ID created
15:54:32 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:54:32 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:32 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:32 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:32 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:32 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:32 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:32 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:32 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:32 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:54:32 - Successfully released change log lock
15:54:32 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:32 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:32 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:33 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:33 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:33 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:34 - Calling Remote Init...
15:54:34 - ExchangeConfiguration - Dry mode is ON
15:54:34 - Adding account 'main'
15:54:34 - - Adding balance 99.0001 BTC
15:54:34 - Adding account 'savings'
15:54:34 - - Adding balance 1.1 BTC
15:54:34 - - Adding balance 2.2 USDT
15:54:34 - - Adding balance 3.3 ETH
15:54:34 - Adding account 'trade'
15:54:34 - - Adding balance 0.99962937 BTC
15:54:34 - - Adding balance 1000 USDT
15:54:34 - - Adding balance 10 ETH
15:54:34 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:34 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:54:34 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:34 - StrategyConfiguration - Accounts available : 'main/main'.
15:54:34 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:54:34 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:34 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:34 - Started Issue528Test in 4.153 seconds (JVM running for 4.922)
15:54:34 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:34 - HikariPool-1 - Shutdown initiated...
15:54:34 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:34 - Starting Issue528Test using Java 11.0.17 on repairnator with PID 21395 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:34 - The following profiles are active: schedule-disabled
15:54:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:34 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:54:34 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:34 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:54:34 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:34 - HikariPool-2 - Starting...
15:54:34 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:34 - HikariPool-2 - Start completed.
15:54:34 - Successfully acquired change log lock
15:54:35 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:35 - Reading from PUBLIC.DATABASECHANGELOG
15:54:35 - Successfully released change log lock
15:54:35 - Successfully acquired change log lock
Skipping auto-registration
15:54:35 - Skipping auto-registration
15:54:35 - Table EXCHANGE_ACCOUNTS created
15:54:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:35 - Table STRATEGIES created
15:54:35 - Auto-increment added to STRATEGIES.ID
15:54:35 - Table POSITIONS created
15:54:35 - Auto-increment added to POSITIONS.ID
15:54:35 - Table ORDERS created
15:54:35 - Auto-increment added to ORDERS.ID
15:54:35 - Table TRADES created
15:54:35 - Auto-increment added to TRADES.ID
15:54:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:35 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:35 - Index IDX_POSITIONS_POSITION_ID created
15:54:35 - Index IDX_POSITIONS_STATUS created
15:54:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:35 - Index IDX_ORDERS_ORDER_ID created
15:54:35 - Index IDX_TRADES_TRADE_ID created
15:54:35 - Index IDX_TRADES_ORDER_ID created
15:54:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
15:54:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:54:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:35 - Successfully released change log lock
15:54:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:35 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:35 - Calling Remote Init...
15:54:35 - ExchangeConfiguration - Dry mode is ON
15:54:35 - Adding account 'main'
15:54:35 - - Adding balance 99.0001 BTC
15:54:35 - Adding account 'savings'
15:54:35 - - Adding balance 1.1 BTC
15:54:35 - - Adding balance 2.2 USDT
15:54:35 - - Adding balance 3.3 ETH
15:54:35 - Adding account 'trade'
15:54:35 - - Adding balance 0.99962937 BTC
15:54:35 - - Adding balance 1000 USDT
15:54:35 - - Adding balance 10 ETH
15:54:35 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:35 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:54:35 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:35 - StrategyConfiguration - Accounts available : 'main/main'.
15:54:35 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:54:35 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:35 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:35 - Started Issue528Test in 0.692 seconds (JVM running for 5.648)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.177 s - in tech.cassandre.trading.bot.issues.v4_2_0.Issue528Test
15:54:35 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:35 - HikariPool-2 - Shutdown initiated...
15:54:35 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test
15:54:36.481 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:54:36.488 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:54:36.512 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:54:36.520 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test], using SpringBootContextLoader
15:54:36.523 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue543Test-context.xml] does not exist
15:54:36.523 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue543TestContext.groovy] does not exist
15:54:36.523 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:54:36.524 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]: Issue543Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:54:36.553 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]
15:54:36.594 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:54:36.594 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test
15:54:36.649 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test]: using defaults.
15:54:36.650 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:54:36.655 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:54:36.661 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@6d167f58, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@3403e2ac, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@65b104b9, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6c4980d3, org.springframework.test.context.support.DirtiesContextTestExecutionListener@327bcebd, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19c65cdc, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@74bf1791, org.springframework.test.context.event.EventPublishingTestExecutionListener@54504ecd, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@38b27cdc, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1339e7aa, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fb669c3, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@49c66ade, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@6239aba6, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@3e6104fc]
15:54:36.662 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@70f02c32 testClass = Issue543Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@62010f5c testClass = Issue543Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6d4e5011, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@78123e82, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f736069, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@47987356, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6fd83fc1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@58134517], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:54:36.675 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@70f02c32 testClass = Issue543Test, testInstance = tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test@66c61024, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@62010f5c testClass = Issue543Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@6d4e5011, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@78123e82, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@f736069, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@47987356, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6fd83fc1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@58134517], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:54:36.700 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:36 - Starting Issue543Test using Java 11.0.17 on repairnator with PID 21675 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:36 - No active profile set, falling back to default profiles: default
15:54:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:37 - Finished Spring Data repository scanning in 132 ms. Found 5 JPA repository interfaces.
15:54:37 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:37 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:54:37 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:37 - HikariPool-1 - Starting...
15:54:38 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:38 - HikariPool-1 - Start completed.
15:54:38 - Successfully acquired change log lock
15:54:38 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:38 - Reading from PUBLIC.DATABASECHANGELOG
15:54:38 - Successfully released change log lock
15:54:38 - Successfully acquired change log lock
Skipping auto-registration
15:54:38 - Skipping auto-registration
15:54:38 - Table EXCHANGE_ACCOUNTS created
15:54:38 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:38 - Table STRATEGIES created
15:54:38 - Auto-increment added to STRATEGIES.ID
15:54:38 - Table POSITIONS created
15:54:38 - Auto-increment added to POSITIONS.ID
15:54:38 - Table ORDERS created
15:54:38 - Auto-increment added to ORDERS.ID
15:54:38 - Table TRADES created
15:54:38 - Auto-increment added to TRADES.ID
15:54:38 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:38 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:38 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:38 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:38 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:38 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:38 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:38 - Index IDX_POSITIONS_POSITION_ID created
15:54:38 - Index IDX_POSITIONS_STATUS created
15:54:38 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:38 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:38 - Index IDX_ORDERS_ORDER_ID created
15:54:38 - Index IDX_TRADES_TRADE_ID created
15:54:38 - Index IDX_TRADES_ORDER_ID created
15:54:38 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:54:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:54:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:54:38 - Successfully released change log lock
15:54:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:38 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:39 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:39 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:39 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:39 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:40 - Calling Remote Init...
15:54:40 - ExchangeConfiguration - Dry mode is OFF
15:54:40 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:40 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:40 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:40 - Initializing ExecutorService 'taskScheduler'
15:54:40 - StrategyConfiguration - Accounts available : 'null/null'.
15:54:40 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:40 - Started Issue543Test in 4.209 seconds (JVM running for 5.022)
15:54:40 - Shutting down ExecutorService 'taskScheduler'
15:54:40 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:40 - HikariPool-1 - Shutdown initiated...
15:54:40 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:40 - Starting Issue543Test using Java 11.0.17 on repairnator with PID 21675 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:40 - No active profile set, falling back to default profiles: default
15:54:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:41 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
15:54:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:41 - Finished Spring Data repository scanning in 4 ms. Found 5 JPA repository interfaces.
15:54:41 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:41 - HikariPool-2 - Starting...
15:54:41 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:41 - HikariPool-2 - Start completed.
15:54:41 - Successfully acquired change log lock
15:54:41 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:41 - Reading from PUBLIC.DATABASECHANGELOG
15:54:41 - Successfully released change log lock
15:54:41 - Successfully acquired change log lock
Skipping auto-registration
15:54:41 - Skipping auto-registration
15:54:41 - Table EXCHANGE_ACCOUNTS created
15:54:41 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:41 - Table STRATEGIES created
15:54:41 - Auto-increment added to STRATEGIES.ID
15:54:41 - Table POSITIONS created
15:54:41 - Auto-increment added to POSITIONS.ID
15:54:41 - Table ORDERS created
15:54:41 - Auto-increment added to ORDERS.ID
15:54:41 - Table TRADES created
15:54:41 - Auto-increment added to TRADES.ID
15:54:41 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:41 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:41 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:41 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:41 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:41 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:41 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:41 - Index IDX_POSITIONS_POSITION_ID created
15:54:41 - Index IDX_POSITIONS_STATUS created
15:54:41 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:41 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:41 - Index IDX_ORDERS_ORDER_ID created
15:54:41 - Index IDX_TRADES_TRADE_ID created
15:54:41 - Index IDX_TRADES_ORDER_ID created
15:54:41 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
15:54:41 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:41 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:41 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:41 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:41 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:41 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:41 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:41 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:41 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:41 - Successfully released change log lock
15:54:41 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:41 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:41 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:41 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:41 - Calling Remote Init...
15:54:41 - ExchangeConfiguration - Dry mode is OFF
15:54:41 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:41 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:41 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:41 - Initializing ExecutorService 'taskScheduler'
15:54:41 - StrategyConfiguration - Accounts available : 'null/null'.
15:54:41 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:41 - Started Issue543Test in 0.705 seconds (JVM running for 5.748)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.235 s - in tech.cassandre.trading.bot.issues.v4_2_0.Issue543Test
15:54:41 - Shutting down ExecutorService 'taskScheduler'
15:54:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:41 - HikariPool-2 - Shutdown initiated...
15:54:41 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test
15:54:42.596 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:54:42.603 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:54:42.627 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:54:42.635 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test], using SpringBootContextLoader
15:54:42.637 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue539Test-context.xml] does not exist
15:54:42.638 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_0/Issue539TestContext.groovy] does not exist
15:54:42.638 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:54:42.638 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]: Issue539Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:54:42.670 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]
15:54:42.708 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:54:42.709 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test
15:54:42.763 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test]: using defaults.
15:54:42.763 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:54:42.769 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:54:42.774 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@51fadaff, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@401f7633, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@31ff43be, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5b6ec132, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5c44c582, org.springframework.test.context.transaction.TransactionalTestExecutionListener@67d18ed7, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@2c78d320, org.springframework.test.context.event.EventPublishingTestExecutionListener@132e0cc, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7b205dbd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@106cc338, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@6cc558c6, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@15713d56, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@63f259c3]
15:54:42.776 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@146dfe6 testClass = Issue539Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4716be8b testClass = Issue539Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1fc32e4f key = [tech.cassandre.trading.bot.issues.v4_2_0.Issue539TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@543588e6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d7148e2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5a56cdac, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@659499f1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:54:42.786 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@146dfe6 testClass = Issue539Test, testInstance = tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test@77128536, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@4716be8b testClass = Issue539Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1fc32e4f key = [tech.cassandre.trading.bot.issues.v4_2_0.Issue539TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@543588e6, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5d7148e2, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5a56cdac, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@659499f1, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@29ba4338], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:54:42.799 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:42 - Starting Issue539Test using Java 11.0.17 on repairnator with PID 21952 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:42 - No active profile set, falling back to default profiles: default
15:54:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:43 - Finished Spring Data repository scanning in 141 ms. Found 5 JPA repository interfaces.
15:54:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:43 - Finished Spring Data repository scanning in 9 ms. Found 5 JPA repository interfaces.
15:54:44 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:44 - HikariPool-1 - Starting...
15:54:44 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:44 - HikariPool-1 - Start completed.
15:54:44 - Successfully acquired change log lock
15:54:44 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:44 - Reading from PUBLIC.DATABASECHANGELOG
15:54:45 - Successfully released change log lock
15:54:45 - Successfully acquired change log lock
Skipping auto-registration
15:54:45 - Skipping auto-registration
15:54:45 - Table EXCHANGE_ACCOUNTS created
15:54:45 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:45 - Table STRATEGIES created
15:54:45 - Auto-increment added to STRATEGIES.ID
15:54:45 - Table POSITIONS created
15:54:45 - Auto-increment added to POSITIONS.ID
15:54:45 - Table ORDERS created
15:54:45 - Auto-increment added to ORDERS.ID
15:54:45 - Table TRADES created
15:54:45 - Auto-increment added to TRADES.ID
15:54:45 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:45 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:45 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:45 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:45 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:45 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:45 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:45 - Index IDX_POSITIONS_POSITION_ID created
15:54:45 - Index IDX_POSITIONS_STATUS created
15:54:45 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:45 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:45 - Index IDX_ORDERS_ORDER_ID created
15:54:45 - Index IDX_TRADES_TRADE_ID created
15:54:45 - Index IDX_TRADES_ORDER_ID created
15:54:45 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:54:45 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:45 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:45 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:45 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:45 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:45 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:45 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:54:45 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:45 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:45 - Successfully released change log lock
15:54:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:45 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:54:45 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:54:45 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:45 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:46 - Calling Remote Init...
15:54:46 - ExchangeConfiguration - Dry mode is OFF
15:54:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:46 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:47 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:47 - Initializing ExecutorService 'taskScheduler'
15:54:47 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:47 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:47 - Started Issue539Test in 4.417 seconds (JVM running for 5.101)
15:54:47 - Shutting down ExecutorService 'taskScheduler'
15:54:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:47 - HikariPool-1 - Shutdown initiated...
15:54:47 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:54:47 - Starting Issue539Test using Java 11.0.17 on repairnator with PID 21952 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:54:47 - No active profile set, falling back to default profiles: default
15:54:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:47 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:54:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:54:47 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:54:47 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:54:47 - HikariPool-2 - Starting...
15:54:47 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:54:47 - HikariPool-2 - Start completed.
15:54:47 - Successfully acquired change log lock
15:54:47 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:54:47 - Reading from PUBLIC.DATABASECHANGELOG
15:54:47 - Successfully released change log lock
15:54:47 - Successfully acquired change log lock
Skipping auto-registration
15:54:47 - Skipping auto-registration
15:54:47 - Table EXCHANGE_ACCOUNTS created
15:54:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:54:47 - Table STRATEGIES created
15:54:47 - Auto-increment added to STRATEGIES.ID
15:54:47 - Table POSITIONS created
15:54:47 - Auto-increment added to POSITIONS.ID
15:54:47 - Table ORDERS created
15:54:47 - Auto-increment added to ORDERS.ID
15:54:47 - Table TRADES created
15:54:47 - Auto-increment added to TRADES.ID
15:54:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:54:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:54:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:54:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:54:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:54:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:54:47 - Index IDX_STRATEGIES_STRATEGY_ID created
15:54:47 - Index IDX_POSITIONS_POSITION_ID created
15:54:47 - Index IDX_POSITIONS_STATUS created
15:54:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:54:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:54:47 - Index IDX_ORDERS_ORDER_ID created
15:54:47 - Index IDX_TRADES_TRADE_ID created
15:54:47 - Index IDX_TRADES_ORDER_ID created
15:54:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 22ms
15:54:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:54:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:54:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:54:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:54:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:54:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:54:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:54:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:54:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:54:47 - Successfully released change log lock
15:54:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:54:47 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:54:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:54:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:54:47 - Calling Remote Init...
15:54:47 - ExchangeConfiguration - Dry mode is OFF
15:54:47 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:54:47 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:54:47 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:54:47 - Initializing ExecutorService 'taskScheduler'
15:54:47 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:54:47 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:54:47 - Started Issue539Test in 0.743 seconds (JVM running for 5.866)
15:54:48 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:54:47.805Z[Etc/UTC])

15:54:48 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:54:52 - BaseExternalFlux - Error getting new values : Raised issue539TestMock exception
15:54:56 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=2, last=2, bid=2, ask=2, high=2, low=2, vwap=2, volume=2, quoteVolume=2, bidSize=2, askSize=2, timestamp=2023-01-13T15:54:47.806Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.055 s - in tech.cassandre.trading.bot.issues.v4_2_0.Issue539Test
15:54:58 - MarketService - InterruptedException : null
15:54:58 - Shutting down ExecutorService 'taskScheduler'
15:54:58 - TradeService - InterruptedException : null
15:54:58 - UserService - InterruptedException : null
15:54:58 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:54:58 - HikariPool-2 - Shutdown initiated...
15:54:58 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test
15:54:59.596 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:54:59.603 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:54:59.628 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:54:59.635 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test], using SpringBootContextLoader
15:54:59.638 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_1/Issue558Test-context.xml] does not exist
15:54:59.638 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]: class path resource [tech/cassandre/trading/bot/issues/v4_2_1/Issue558TestContext.groovy] does not exist
15:54:59.638 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:54:59.639 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]: Issue558Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:54:59.671 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]
15:54:59.710 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:54:59.710 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test
15:54:59.765 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test]: using defaults.
15:54:59.765 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:54:59.770 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:54:59.776 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@58ce9668, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@172b013, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@56673b2c, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2796aeae, org.springframework.test.context.support.DirtiesContextTestExecutionListener@b4711e2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@1fa1cab1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@70f02c32, org.springframework.test.context.event.EventPublishingTestExecutionListener@62010f5c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@51fadaff, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@401f7633, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@31ff43be, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5b6ec132, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5c44c582, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@67d18ed7]
15:54:59.777 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@8576fa0 testClass = Issue558Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7582ff54 testClass = Issue558Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@67545b57 key = [tech.cassandre.trading.bot.issues.v4_2_1.Issue558TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1e04fa0a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@618425b5, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5d0a1059, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6e0f5f7f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6253c26, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:54:59.787 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@8576fa0 testClass = Issue558Test, testInstance = tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test@5bf0fe62, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7582ff54 testClass = Issue558Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@67545b57 key = [tech.cassandre.trading.bot.issues.v4_2_1.Issue558TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1e04fa0a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@618425b5, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@5d0a1059, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6e0f5f7f, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@6253c26, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@18a70f16], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:54:59.800 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:00 - Starting Issue558Test using Java 11.0.17 on repairnator with PID 22723 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:00 - No active profile set, falling back to default profiles: default
15:55:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:00 - Finished Spring Data repository scanning in 161 ms. Found 5 JPA repository interfaces.
15:55:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:00 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:55:01 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:01 - HikariPool-1 - Starting...
15:55:01 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:01 - HikariPool-1 - Start completed.
15:55:01 - Successfully acquired change log lock
15:55:02 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:02 - Reading from PUBLIC.DATABASECHANGELOG
15:55:02 - Successfully released change log lock
15:55:02 - Successfully acquired change log lock
Skipping auto-registration
15:55:02 - Skipping auto-registration
15:55:02 - Table EXCHANGE_ACCOUNTS created
15:55:02 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:02 - Table STRATEGIES created
15:55:02 - Auto-increment added to STRATEGIES.ID
15:55:02 - Table POSITIONS created
15:55:02 - Auto-increment added to POSITIONS.ID
15:55:02 - Table ORDERS created
15:55:02 - Auto-increment added to ORDERS.ID
15:55:02 - Table TRADES created
15:55:02 - Auto-increment added to TRADES.ID
15:55:02 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:02 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:02 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:02 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:02 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:02 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:02 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:02 - Index IDX_POSITIONS_POSITION_ID created
15:55:02 - Index IDX_POSITIONS_STATUS created
15:55:02 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:02 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:02 - Index IDX_ORDERS_ORDER_ID created
15:55:02 - Index IDX_TRADES_TRADE_ID created
15:55:02 - Index IDX_TRADES_ORDER_ID created
15:55:02 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
15:55:02 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:02 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:02 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:02 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:02 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:02 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:02 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:55:02 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:02 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:55:02 - Successfully released change log lock
15:55:02 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:02 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:55:02 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:55:02 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:04 - Calling Remote Init...
15:55:04 - ExchangeConfiguration - Dry mode is OFF
15:55:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:04 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:55:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:04 - Initializing ExecutorService 'taskScheduler'
15:55:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:04 - Started Issue558Test in 4.463 seconds (JVM running for 5.224)
15:55:04 - Shutting down ExecutorService 'taskScheduler'
15:55:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:04 - HikariPool-1 - Shutdown initiated...
15:55:04 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:04 - Starting Issue558Test using Java 11.0.17 on repairnator with PID 22723 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:04 - No active profile set, falling back to default profiles: default
15:55:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:04 - Finished Spring Data repository scanning in 21 ms. Found 5 JPA repository interfaces.
15:55:04 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:04 - Finished Spring Data repository scanning in 7 ms. Found 5 JPA repository interfaces.
15:55:04 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:04 - HikariPool-2 - Starting...
15:55:04 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:04 - HikariPool-2 - Start completed.
15:55:04 - Successfully acquired change log lock
15:55:04 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:04 - Reading from PUBLIC.DATABASECHANGELOG
15:55:04 - Successfully released change log lock
15:55:04 - Successfully acquired change log lock
Skipping auto-registration
15:55:04 - Skipping auto-registration
15:55:04 - Table EXCHANGE_ACCOUNTS created
15:55:04 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:04 - Table STRATEGIES created
15:55:04 - Auto-increment added to STRATEGIES.ID
15:55:04 - Table POSITIONS created
15:55:04 - Auto-increment added to POSITIONS.ID
15:55:04 - Table ORDERS created
15:55:04 - Auto-increment added to ORDERS.ID
15:55:04 - Table TRADES created
15:55:04 - Auto-increment added to TRADES.ID
15:55:04 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:04 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:04 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:04 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:04 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:04 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:04 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:04 - Index IDX_POSITIONS_POSITION_ID created
15:55:04 - Index IDX_POSITIONS_STATUS created
15:55:04 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:04 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:04 - Index IDX_ORDERS_ORDER_ID created
15:55:04 - Index IDX_TRADES_TRADE_ID created
15:55:04 - Index IDX_TRADES_ORDER_ID created
15:55:04 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 19ms
15:55:04 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:04 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:04 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:04 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:04 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:04 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:04 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:55:04 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:04 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:55:04 - Successfully released change log lock
15:55:04 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:04 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:04 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:04 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:05 - Calling Remote Init...
15:55:05 - ExchangeConfiguration - Dry mode is OFF
15:55:05 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:05 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:55:05 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:05 - Initializing ExecutorService 'taskScheduler'
15:55:05 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:05 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:05 - Started Issue558Test in 0.856 seconds (JVM running for 6.103)
15:55:05 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:55:04.960Z[Etc/UTC])

15:55:06 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:55:06 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=2, last=2, bid=2, ask=2, high=2, low=2, vwap=2, volume=2, quoteVolume=2, bidSize=2, askSize=2, timestamp=2023-01-13T15:55:04.962Z[Etc/UTC])

15:55:07 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=3, last=3, bid=3, ask=3, high=3, low=3, vwap=3, volume=3, quoteVolume=3, bidSize=3, askSize=3, timestamp=2023-01-13T15:55:04.963Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.606 s - in tech.cassandre.trading.bot.issues.v4_2_1.Issue558Test
15:55:09 - TradeService - InterruptedException : null
15:55:09 - Shutting down ExecutorService 'taskScheduler'
15:55:09 - UserService - InterruptedException : null
15:55:09 - MarketService - InterruptedException : null
15:55:09 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:09 - HikariPool-2 - Shutdown initiated...
15:55:09 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_2_1.Issue544Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.113 s - in tech.cassandre.trading.bot.issues.v4_2_1.Issue544Test
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
15:55:21.161 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:55:21.168 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:55:21.192 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:55:21.199 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test], using SpringBootContextLoader
15:55:21.202 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue427Test-context.xml] does not exist
15:55:21.202 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue427TestContext.groovy] does not exist
15:55:21.202 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:55:21.203 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: Issue427Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:55:21.301 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:55:21.302 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
15:55:21.355 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test]: using defaults.
15:55:21.356 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:55:21.361 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:55:21.372 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@291a7e3c, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@ca30bc1, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@3b7d3a38, org.springframework.test.context.support.DirtiesContextTestExecutionListener@416c58f5, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5505ae1a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@73cd37c0, org.springframework.test.context.event.EventPublishingTestExecutionListener@21337f7b, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2bb3058, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7a362b6b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@60df60da, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5a2d131d, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@14fc1f0, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@4ae9cfc1]
15:55:21.376 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3adcc812 testClass = Issue427Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35432107 testClass = Issue427Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@7b420819 key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue427TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@434a63ab, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3ee37e5a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12aba8be, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@201a4587, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@272113c4, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@145eaa29], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:55:21.422 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3adcc812 testClass = Issue427Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test@63787180, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@35432107 testClass = Issue427Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@7b420819 key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue427TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@434a63ab, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@3ee37e5a, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@12aba8be, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@201a4587, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@272113c4, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@145eaa29], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:55:21.435 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:55:21.438 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:21 - Starting Issue427Test using Java 11.0.17 on repairnator with PID 23465 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:21 - The following profiles are active: schedule-disabled
15:55:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:22 - Finished Spring Data repository scanning in 149 ms. Found 5 JPA repository interfaces.
15:55:22 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:22 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:55:22 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:22 - HikariPool-1 - Starting...
15:55:22 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:22 - HikariPool-1 - Start completed.
15:55:23 - Successfully acquired change log lock
15:55:23 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:23 - Reading from PUBLIC.DATABASECHANGELOG
15:55:23 - Successfully released change log lock
15:55:23 - Successfully acquired change log lock
Skipping auto-registration
15:55:23 - Skipping auto-registration
15:55:23 - Table EXCHANGE_ACCOUNTS created
15:55:23 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:23 - Table STRATEGIES created
15:55:23 - Auto-increment added to STRATEGIES.ID
15:55:23 - Table POSITIONS created
15:55:23 - Auto-increment added to POSITIONS.ID
15:55:23 - Table ORDERS created
15:55:23 - Auto-increment added to ORDERS.ID
15:55:23 - Table TRADES created
15:55:23 - Auto-increment added to TRADES.ID
15:55:23 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:23 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:23 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:23 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:23 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:23 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:23 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:23 - Index IDX_POSITIONS_POSITION_ID created
15:55:23 - Index IDX_POSITIONS_STATUS created
15:55:23 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:23 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:23 - Index IDX_ORDERS_ORDER_ID created
15:55:23 - Index IDX_TRADES_TRADE_ID created
15:55:23 - Index IDX_TRADES_ORDER_ID created
15:55:23 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 25ms
15:55:23 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:23 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:23 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:23 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:23 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:23 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:23 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:55:23 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:23 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:55:23 - Successfully released change log lock
15:55:23 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:23 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:55:23 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:55:23 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:24 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:24 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:25 - Calling Remote Init...
15:55:25 - ExchangeConfiguration - Dry mode is ON
15:55:25 - Adding account 'main'
15:55:25 - - Adding balance 99.0001 BTC
15:55:25 - Adding account 'savings'
15:55:25 - - Adding balance 1.1 BTC
15:55:25 - - Adding balance 2.2 USDT
15:55:25 - - Adding balance 3.3 ETH
15:55:25 - Adding account 'trade'
15:55:25 - - Adding balance 0.99962937 BTC
15:55:25 - - Adding balance 1000 USDT
15:55:25 - - Adding balance 10 ETH
15:55:25 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:25 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:55:25 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:25 - StrategyConfiguration - Accounts available : 'main/main'.
15:55:25 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:55:25 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:25 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:25 - Started Issue427Test in 4.321 seconds (JVM running for 5.168)
15:55:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:25 - HikariPool-1 - Shutdown initiated...
15:55:25 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:25 - Starting Issue427Test using Java 11.0.17 on repairnator with PID 23465 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:25 - The following profiles are active: schedule-disabled
15:55:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:25 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:55:25 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:25 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:55:26 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:26 - HikariPool-2 - Starting...
15:55:26 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:26 - HikariPool-2 - Start completed.
15:55:26 - Successfully acquired change log lock
15:55:26 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:26 - Reading from PUBLIC.DATABASECHANGELOG
15:55:26 - Successfully released change log lock
15:55:26 - Successfully acquired change log lock
Skipping auto-registration
15:55:26 - Skipping auto-registration
15:55:26 - Table EXCHANGE_ACCOUNTS created
15:55:26 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:26 - Table STRATEGIES created
15:55:26 - Auto-increment added to STRATEGIES.ID
15:55:26 - Table POSITIONS created
15:55:26 - Auto-increment added to POSITIONS.ID
15:55:26 - Table ORDERS created
15:55:26 - Auto-increment added to ORDERS.ID
15:55:26 - Table TRADES created
15:55:26 - Auto-increment added to TRADES.ID
15:55:26 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:26 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:26 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:26 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:26 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:26 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:26 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:26 - Index IDX_POSITIONS_POSITION_ID created
15:55:26 - Index IDX_POSITIONS_STATUS created
15:55:26 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:26 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:26 - Index IDX_ORDERS_ORDER_ID created
15:55:26 - Index IDX_TRADES_TRADE_ID created
15:55:26 - Index IDX_TRADES_ORDER_ID created
15:55:26 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:55:26 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:26 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:26 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:26 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:26 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:26 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:26 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:55:26 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:26 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:55:26 - Successfully released change log lock
15:55:26 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:26 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:26 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:26 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:26 - Calling Remote Init...
15:55:26 - ExchangeConfiguration - Dry mode is ON
15:55:26 - Adding account 'main'
15:55:26 - - Adding balance 99.0001 BTC
15:55:26 - Adding account 'savings'
15:55:26 - - Adding balance 1.1 BTC
15:55:26 - - Adding balance 2.2 USDT
15:55:26 - - Adding balance 3.3 ETH
15:55:26 - Adding account 'trade'
15:55:26 - - Adding balance 0.99962937 BTC
15:55:26 - - Adding balance 1000 USDT
15:55:26 - - Adding balance 10 ETH
15:55:26 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:26 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:55:26 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:26 - StrategyConfiguration - Accounts available : 'main/main'.
15:55:26 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:55:26 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:26 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:26 - Started Issue427Test in 0.723 seconds (JVM running for 5.911)
15:55:31 - Scheduler worker in group main failed with an uncaught exception
reactor.core.Exceptions$ErrorCallbackNotImplemented: java.lang.NullPointerException
Caused by: java.lang.NullPointerException: null
	at tech.cassandre.trading.bot.strategy.GenericCassandreStrategy.orderUpdate(GenericCassandreStrategy.java:185) ~[classes/:na]
	at reactor.core.publisher.LambdaSubscriber.onNext(LambdaSubscriber.java:160) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:476) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.publisher.FluxPublish$PublishSubscriber.onNext(FluxPublish.java:254) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.runBackfused(FluxPublishOn.java:483) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.publisher.FluxPublishOn$PublishOnSubscriber.run(FluxPublishOn.java:520) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:84) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at reactor.core.scheduler.WorkerTask.call(WorkerTask.java:37) ~[reactor-core-3.3.16.RELEASE.jar:3.3.16.RELEASE]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[na:na]
	at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128) ~[na:na]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628) ~[na:na]
	at java.base/java.lang.Thread.run(Thread.java:829) ~[na:na]
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 20.477 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue427Test
15:55:41 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:41 - HikariPool-2 - Shutdown initiated...
15:55:41 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
15:55:42.647 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:55:42.658 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:55:42.684 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:55:42.691 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test], using SpringBootContextLoader
15:55:42.693 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue426Test-context.xml] does not exist
15:55:42.694 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue426TestContext.groovy] does not exist
15:55:42.694 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:55:42.694 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: Issue426Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:55:42.778 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:55:42.779 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
15:55:42.841 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test]: using defaults.
15:55:42.841 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:55:42.846 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:55:42.851 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2f67b837, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1869fbd2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@6af9fcb2, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cce16f4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@7efaad5a, org.springframework.test.context.transaction.TransactionalTestExecutionListener@291a7e3c, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@ca30bc1, org.springframework.test.context.event.EventPublishingTestExecutionListener@1046d517, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@73cd37c0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@21337f7b, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@2bb3058]
15:55:42.853 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@3abada5a testClass = Issue426Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = Issue426Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue426TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:55:42.893 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@3abada5a testClass = Issue426Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test@42039326, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@66c61024 testClass = Issue426Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@61fe30 key = [tech.cassandre.trading.bot.issues.v4_0_0.Issue426TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@5a56cdac, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@5b03b9fe, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@7bab3f1a, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@27462a88, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@53aac487, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7f77e91b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:55:42.906 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:55:42.909 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:43 - Starting Issue426Test using Java 11.0.17 on repairnator with PID 24255 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:43 - The following profiles are active: schedule-disabled
15:55:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:43 - Finished Spring Data repository scanning in 131 ms. Found 5 JPA repository interfaces.
15:55:43 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:43 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:55:44 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:44 - HikariPool-1 - Starting...
15:55:44 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:44 - HikariPool-1 - Start completed.
15:55:44 - Successfully acquired change log lock
15:55:44 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:44 - Reading from PUBLIC.DATABASECHANGELOG
15:55:45 - Successfully released change log lock
15:55:45 - Successfully acquired change log lock
Skipping auto-registration
15:55:45 - Skipping auto-registration
15:55:45 - Table EXCHANGE_ACCOUNTS created
15:55:45 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:45 - Table STRATEGIES created
15:55:45 - Auto-increment added to STRATEGIES.ID
15:55:45 - Table POSITIONS created
15:55:45 - Auto-increment added to POSITIONS.ID
15:55:45 - Table ORDERS created
15:55:45 - Auto-increment added to ORDERS.ID
15:55:45 - Table TRADES created
15:55:45 - Auto-increment added to TRADES.ID
15:55:45 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:45 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:45 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:45 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:45 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:45 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:45 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:45 - Index IDX_POSITIONS_POSITION_ID created
15:55:45 - Index IDX_POSITIONS_STATUS created
15:55:45 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:45 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:45 - Index IDX_ORDERS_ORDER_ID created
15:55:45 - Index IDX_TRADES_TRADE_ID created
15:55:45 - Index IDX_TRADES_ORDER_ID created
15:55:45 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:55:45 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:45 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:45 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:45 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:45 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:45 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:45 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:55:45 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:45 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:55:45 - Successfully released change log lock
15:55:45 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:45 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:55:45 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:55:45 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:45 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:45 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:46 - Calling Remote Init...
15:55:46 - ExchangeConfiguration - Dry mode is ON
15:55:46 - Adding account 'main'
15:55:46 - - Adding balance 99.0001 BTC
15:55:46 - Adding account 'savings'
15:55:46 - - Adding balance 1.1 BTC
15:55:46 - - Adding balance 2.2 USDT
15:55:46 - - Adding balance 3.3 ETH
15:55:46 - Adding account 'trade'
15:55:46 - - Adding balance 0.99962937 BTC
15:55:46 - - Adding balance 1000 USDT
15:55:46 - - Adding balance 10 ETH
15:55:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:46 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:55:46 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:46 - StrategyConfiguration - Accounts available : 'main/main'.
15:55:46 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:55:46 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:46 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:47 - Started Issue426Test in 4.141 seconds (JVM running for 5.026)
15:55:47 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:47 - HikariPool-1 - Shutdown initiated...
15:55:47 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:47 - Starting Issue426Test using Java 11.0.17 on repairnator with PID 24255 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:47 - The following profiles are active: schedule-disabled
15:55:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:47 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:55:47 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:47 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:55:47 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:55:47 - HikariPool-2 - Starting...
15:55:47 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:55:47 - HikariPool-2 - Start completed.
15:55:47 - Successfully acquired change log lock
15:55:47 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:55:47 - Reading from PUBLIC.DATABASECHANGELOG
15:55:47 - Successfully released change log lock
15:55:47 - Successfully acquired change log lock
Skipping auto-registration
15:55:47 - Skipping auto-registration
15:55:47 - Table EXCHANGE_ACCOUNTS created
15:55:47 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:55:47 - Table STRATEGIES created
15:55:47 - Auto-increment added to STRATEGIES.ID
15:55:47 - Table POSITIONS created
15:55:47 - Auto-increment added to POSITIONS.ID
15:55:47 - Table ORDERS created
15:55:47 - Auto-increment added to ORDERS.ID
15:55:47 - Table TRADES created
15:55:47 - Auto-increment added to TRADES.ID
15:55:47 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:55:47 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:55:47 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:55:47 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:55:47 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:55:47 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:55:47 - Index IDX_STRATEGIES_STRATEGY_ID created
15:55:47 - Index IDX_POSITIONS_POSITION_ID created
15:55:47 - Index IDX_POSITIONS_STATUS created
15:55:47 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:55:47 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:55:47 - Index IDX_ORDERS_ORDER_ID created
15:55:47 - Index IDX_TRADES_TRADE_ID created
15:55:47 - Index IDX_TRADES_ORDER_ID created
15:55:47 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 16ms
15:55:47 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:55:47 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:55:47 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:55:47 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:55:47 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:55:47 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:55:47 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:55:47 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:55:47 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:55:47 - Successfully released change log lock
15:55:47 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:55:47 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:55:47 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:55:47 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:55:47 - Calling Remote Init...
15:55:47 - ExchangeConfiguration - Dry mode is ON
15:55:47 - Adding account 'main'
15:55:47 - - Adding balance 99.0001 BTC
15:55:47 - Adding account 'savings'
15:55:47 - - Adding balance 1.1 BTC
15:55:47 - - Adding balance 2.2 USDT
15:55:47 - - Adding balance 3.3 ETH
15:55:47 - Adding account 'trade'
15:55:47 - - Adding balance 0.99962937 BTC
15:55:47 - - Adding balance 1000 USDT
15:55:47 - - Adding balance 10 ETH
15:55:47 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:55:47 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:55:47 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:55:47 - StrategyConfiguration - Accounts available : 'main/main'.
15:55:47 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:55:47 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:55:47 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:55:47 - Started Issue426Test in 0.713 seconds (JVM running for 5.762)
15:55:52 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=null, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=3 BTC, limitPrice=5 BTC, leverage=leverage1, status=NEW, cumulativeAmount=2 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[UTC], trades=[])

15:55:52 - TestableStrategy-onTradeUpdate 001 : TradeDTO(id=1, tradeId=TRADE_000001, type=ASK, orderId=ORDER_000001, order=Order(id=1, orderId=ORDER_000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=3.00000000 BTC, limitPrice=5.00000000 BTC, leverage=leverage1, status=FILLED, cumulativeAmount=2.00000000 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=null)

15:55:53 - TestableStrategy-onOrderUpdate 002 : OrderDTO(id=1, orderId=ORDER_000001, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=1 ETH, averagePrice=3 BTC, limitPrice=5 BTC, leverage=leverage1, status=FILLED, cumulativeAmount=2 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[UTC], trades=[])

15:55:53 - TestableStrategy-onTradeUpdate 002 : TradeDTO(id=2, tradeId=TRADE_000002, type=ASK, orderId=ORDER_000001, order=Order(id=1, orderId=ORDER_000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=3.00000000 BTC, limitPrice=5.00000000 BTC, leverage=leverage1, status=FILLED, cumulativeAmount=2.00000000 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.5 ETH, price=2 BTC, fee=null, userReference=null, timestamp=null)

15:55:54 - TestableStrategy-onTradeUpdate 003 : TradeDTO(id=1, tradeId=TRADE_000001, type=ASK, orderId=ORDER_000001, order=Order(id=1, orderId=ORDER_000001, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=ETH/BTC, amount=1.00000000 ETH, averagePrice=3.00000000 BTC, limitPrice=5.00000000 BTC, leverage=leverage1, status=FILLED, cumulativeAmount=2.00000000 ETH, userReference=MY_REF_1, timestamp=2018-01-01T00:00Z[Etc/UTC], trades=[]), currencyPair=ETH/BTC, amount=0.5 ETH, price=1 BTC, fee=null, userReference=null, timestamp=null)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 15.354 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue426Test
15:55:57 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:55:57 - HikariPool-2 - Shutdown initiated...
15:55:58 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
15:55:58.907 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:55:58.914 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:55:58.938 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:55:58.945 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test], using SpringBootContextLoader
15:55:58.947 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue421Test-context.xml] does not exist
15:55:58.948 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: class path resource [tech/cassandre/trading/bot/issues/v4_0_0/Issue421TestContext.groovy] does not exist
15:55:58.948 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:55:58.948 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: Issue421Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:55:58.979 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]
15:55:59.020 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:55:59.021 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
15:55:59.076 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test]: using defaults.
15:55:59.076 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:55:59.082 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:55:59.088 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@4716be8b, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@1fc32e4f, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1869fbd2, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6af9fcb2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6cce16f4, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7efaad5a, org.springframework.test.context.event.EventPublishingTestExecutionListener@291a7e3c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ca30bc1, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@1046d517, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3b7d3a38, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@416c58f5, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5505ae1a, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@73cd37c0]
15:55:59.090 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@141e5bef testClass = Issue421Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue421Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@d5b810e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@c88a337, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31fa1761, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4efac082, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:55:59.130 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@141e5bef testClass = Issue421Test, testInstance = tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test@bcef303, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@5f9be66c testClass = Issue421Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@3abada5a key = [tech.cassandre.trading.bot.test.service.dry.PositionServiceDryModeTestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@d5b810e, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@c88a337, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@31fa1761, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@23c30a20, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4efac082, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@61009542], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:55:59.143 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:55:59 - Starting Issue421Test using Java 11.0.17 on repairnator with PID 24911 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:55:59 - No active profile set, falling back to default profiles: default
15:55:59 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:55:59 - Finished Spring Data repository scanning in 117 ms. Found 5 JPA repository interfaces.
15:56:00 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:00 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:00 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:00 - HikariPool-1 - Starting...
15:56:00 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:00 - HikariPool-1 - Start completed.
15:56:00 - Successfully acquired change log lock
15:56:01 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:01 - Reading from PUBLIC.DATABASECHANGELOG
15:56:01 - Successfully released change log lock
15:56:01 - Successfully acquired change log lock
Skipping auto-registration
15:56:01 - Skipping auto-registration
15:56:01 - Table EXCHANGE_ACCOUNTS created
15:56:01 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:01 - Table STRATEGIES created
15:56:01 - Auto-increment added to STRATEGIES.ID
15:56:01 - Table POSITIONS created
15:56:01 - Auto-increment added to POSITIONS.ID
15:56:01 - Table ORDERS created
15:56:01 - Auto-increment added to ORDERS.ID
15:56:01 - Table TRADES created
15:56:01 - Auto-increment added to TRADES.ID
15:56:01 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:01 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:01 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:01 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:01 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:01 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:01 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:01 - Index IDX_POSITIONS_POSITION_ID created
15:56:01 - Index IDX_POSITIONS_STATUS created
15:56:01 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:01 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:01 - Index IDX_ORDERS_ORDER_ID created
15:56:01 - Index IDX_TRADES_TRADE_ID created
15:56:01 - Index IDX_TRADES_ORDER_ID created
15:56:01 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 29ms
15:56:01 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:01 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:01 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:01 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:01 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:01 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:01 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:01 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:01 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:01 - Successfully released change log lock
15:56:01 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:01 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:01 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:01 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:02 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:02 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:03 - Calling Remote Init...
15:56:03 - ExchangeConfiguration - Dry mode is ON
15:56:03 - Adding account 'main'
15:56:03 - - Adding balance 99.0001 BTC
15:56:03 - Adding account 'savings'
15:56:03 - - Adding balance 1.1 BTC
15:56:03 - - Adding balance 2.2 USDT
15:56:03 - - Adding balance 3.3 ETH
15:56:03 - Adding account 'trade'
15:56:03 - - Adding balance 0.99962937 BTC
15:56:03 - - Adding balance 1000 USDT
15:56:03 - - Adding balance 10 ETH
15:56:03 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:03 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:56:03 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:03 - Initializing ExecutorService 'taskScheduler'
15:56:03 - StrategyConfiguration - Accounts available : 'main/main'.
15:56:03 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:56:03 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:03 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:03 - Started Issue421Test in 4.257 seconds (JVM running for 5.015)
15:56:03 - Shutting down ExecutorService 'taskScheduler'
15:56:03 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:03 - HikariPool-1 - Shutdown initiated...
15:56:03 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:03 - Starting Issue421Test using Java 11.0.17 on repairnator with PID 24911 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:03 - No active profile set, falling back to default profiles: default
15:56:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:03 - Finished Spring Data repository scanning in 20 ms. Found 5 JPA repository interfaces.
15:56:03 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:03 - Finished Spring Data repository scanning in 9 ms. Found 5 JPA repository interfaces.
15:56:03 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:03 - HikariPool-2 - Starting...
15:56:03 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:03 - HikariPool-2 - Start completed.
15:56:03 - Successfully acquired change log lock
15:56:03 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:03 - Reading from PUBLIC.DATABASECHANGELOG
15:56:03 - Successfully released change log lock
15:56:03 - Successfully acquired change log lock
Skipping auto-registration
15:56:03 - Skipping auto-registration
15:56:03 - Table EXCHANGE_ACCOUNTS created
15:56:03 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:03 - Table STRATEGIES created
15:56:03 - Auto-increment added to STRATEGIES.ID
15:56:03 - Table POSITIONS created
15:56:03 - Auto-increment added to POSITIONS.ID
15:56:03 - Table ORDERS created
15:56:03 - Auto-increment added to ORDERS.ID
15:56:03 - Table TRADES created
15:56:03 - Auto-increment added to TRADES.ID
15:56:03 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:03 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:03 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:03 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:03 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:03 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:03 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:03 - Index IDX_POSITIONS_POSITION_ID created
15:56:03 - Index IDX_POSITIONS_STATUS created
15:56:03 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:03 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:03 - Index IDX_ORDERS_ORDER_ID created
15:56:03 - Index IDX_TRADES_TRADE_ID created
15:56:03 - Index IDX_TRADES_ORDER_ID created
15:56:03 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 21ms
15:56:03 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:03 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:03 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:03 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:03 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:03 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:03 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:56:03 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:03 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:56:03 - Successfully released change log lock
15:56:03 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:03 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:03 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:03 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:04 - Calling Remote Init...
15:56:04 - ExchangeConfiguration - Dry mode is ON
15:56:04 - Adding account 'main'
15:56:04 - - Adding balance 99.0001 BTC
15:56:04 - Adding account 'savings'
15:56:04 - - Adding balance 1.1 BTC
15:56:04 - - Adding balance 2.2 USDT
15:56:04 - - Adding balance 3.3 ETH
15:56:04 - Adding account 'trade'
15:56:04 - - Adding balance 0.99962937 BTC
15:56:04 - - Adding balance 1000 USDT
15:56:04 - - Adding balance 10 ETH
15:56:04 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:04 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:56:04 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:04 - Initializing ExecutorService 'taskScheduler'
15:56:04 - StrategyConfiguration - Accounts available : 'main/main'.
15:56:04 - StrategyConfiguration - Accounts available : 'savings/savings'.
15:56:04 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:04 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:04 - Started Issue421Test in 0.846 seconds (JVM running for 5.885)
15:56:04 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=null, last=0.2, bid=null, ask=null, high=null, low=null, vwap=null, volume=null, quoteVolume=null, bidSize=null, askSize=null, timestamp=2020-01-01T00:00Z[Etc/UTC])

15:56:04 - TestableStrategy-onOrderUpdate 001 : OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, averagePrice=null, limitPrice=null, leverage=null, status=NEW, cumulativeAmount=null, userReference=null, timestamp=null, trades=[])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.497 s - in tech.cassandre.trading.bot.issues.v4_0_0.Issue421Test
15:56:04 - Shutting down ExecutorService 'taskScheduler'
15:56:04 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=1, positionId=1, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.0001 ETH, rules=Stop gain at 100 %, status=OPENING, forceClosing=false, openingOrderId=DRY_ORDER_000000001, openingOrder=OrderDTO(id=1, orderId=DRY_ORDER_000000001, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=ETH/BTC, amount=0.00010000 ETH, averagePrice=null, limitPrice=null, leverage=null, status=NEW, cumulativeAmount=null, userReference=null, timestamp=null, trades=[]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:04 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:04 - HikariPool-2 - Shutdown initiated...
15:56:04 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
15:56:05.346 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:56:05.354 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:56:05.378 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:56:05.385 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test], using SpringBootContextLoader
15:56:05.388 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue482Test-context.xml] does not exist
15:56:05.388 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue482TestContext.groovy] does not exist
15:56:05.388 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:56:05.389 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: Issue482Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:56:05.422 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]
15:56:05.459 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:56:05.460 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
15:56:05.514 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test]: using defaults.
15:56:05.514 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:56:05.520 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:56:05.526 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b205dbd, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@106cc338, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cc558c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15713d56, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63f259c3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26ceffa8, org.springframework.test.context.event.EventPublishingTestExecutionListener@600b90df, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60129b9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78d6692f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a55af6b]
15:56:05.527 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@291a7e3c testClass = Issue482Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = Issue482Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1046d517 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue482TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@74751b3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52af26ee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1b11171f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:56:05.567 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@291a7e3c testClass = Issue482Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test@5a1de7fb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = Issue482Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1046d517 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue482TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@74751b3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52af26ee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1b11171f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:56:05.581 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:05 - Starting Issue482Test using Java 11.0.17 on repairnator with PID 25346 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:05 - No active profile set, falling back to default profiles: default
15:56:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:06 - Finished Spring Data repository scanning in 119 ms. Found 5 JPA repository interfaces.
15:56:06 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:06 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:06 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:06 - HikariPool-1 - Starting...
15:56:06 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:06 - HikariPool-1 - Start completed.
15:56:07 - Successfully acquired change log lock
15:56:07 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:07 - Reading from PUBLIC.DATABASECHANGELOG
15:56:07 - Successfully released change log lock
15:56:07 - Successfully acquired change log lock
Skipping auto-registration
15:56:07 - Skipping auto-registration
15:56:07 - Table EXCHANGE_ACCOUNTS created
15:56:07 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:07 - Table STRATEGIES created
15:56:07 - Auto-increment added to STRATEGIES.ID
15:56:07 - Table POSITIONS created
15:56:07 - Auto-increment added to POSITIONS.ID
15:56:07 - Table ORDERS created
15:56:07 - Auto-increment added to ORDERS.ID
15:56:07 - Table TRADES created
15:56:07 - Auto-increment added to TRADES.ID
15:56:07 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:07 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:07 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:07 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:07 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:07 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:07 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:07 - Index IDX_POSITIONS_POSITION_ID created
15:56:07 - Index IDX_POSITIONS_STATUS created
15:56:07 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:07 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:07 - Index IDX_ORDERS_ORDER_ID created
15:56:07 - Index IDX_TRADES_TRADE_ID created
15:56:07 - Index IDX_TRADES_ORDER_ID created
15:56:07 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 26ms
15:56:07 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:07 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:07 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:07 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:07 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:07 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:07 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:56:07 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:07 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:07 - Successfully released change log lock
15:56:07 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:07 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:07 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:08 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:08 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:08 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:09 - Calling Remote Init...
15:56:09 - ExchangeConfiguration - Dry mode is ON
15:56:09 - Adding account 'main'
15:56:09 - - Adding balance 99.0001 BTC
15:56:09 - Adding account 'savings'
15:56:09 - - Adding balance 1.1 BTC
15:56:09 - - Adding balance 2.2 USDT
15:56:09 - - Adding balance 3.3 ETH
15:56:09 - Adding account 'trade'
15:56:09 - - Adding balance 0.99962937 BTC
15:56:09 - - Adding balance 1000 USDT
15:56:09 - - Adding balance 10 ETH
15:56:09 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:09 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:56:09 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:09 - Initializing ExecutorService 'taskScheduler'
15:56:09 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:09 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:09 - Started Issue482Test in 4.363 seconds (JVM running for 5.123)
15:56:09 - Shutting down ExecutorService 'taskScheduler'
15:56:09 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:09 - HikariPool-1 - Shutdown initiated...
15:56:09 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:09 - Starting Issue482Test using Java 11.0.17 on repairnator with PID 25346 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:09 - No active profile set, falling back to default profiles: default
15:56:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:10 - Finished Spring Data repository scanning in 17 ms. Found 5 JPA repository interfaces.
15:56:10 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:10 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:56:10 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:10 - HikariPool-2 - Starting...
15:56:10 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:10 - HikariPool-2 - Start completed.
15:56:10 - Successfully acquired change log lock
15:56:10 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:10 - Reading from PUBLIC.DATABASECHANGELOG
15:56:10 - Successfully released change log lock
15:56:10 - Successfully acquired change log lock
Skipping auto-registration
15:56:10 - Skipping auto-registration
15:56:10 - Table EXCHANGE_ACCOUNTS created
15:56:10 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:10 - Table STRATEGIES created
15:56:10 - Auto-increment added to STRATEGIES.ID
15:56:10 - Table POSITIONS created
15:56:10 - Auto-increment added to POSITIONS.ID
15:56:10 - Table ORDERS created
15:56:10 - Auto-increment added to ORDERS.ID
15:56:10 - Table TRADES created
15:56:10 - Auto-increment added to TRADES.ID
15:56:10 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:10 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:10 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:10 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:10 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:10 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:10 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:10 - Index IDX_POSITIONS_POSITION_ID created
15:56:10 - Index IDX_POSITIONS_STATUS created
15:56:10 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:10 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:10 - Index IDX_ORDERS_ORDER_ID created
15:56:10 - Index IDX_TRADES_TRADE_ID created
15:56:10 - Index IDX_TRADES_ORDER_ID created
15:56:10 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 18ms
15:56:10 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:10 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:10 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:10 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:10 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:10 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:10 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:56:10 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:10 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:10 - Successfully released change log lock
15:56:10 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:10 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:10 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:10 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:10 - Calling Remote Init...
15:56:10 - ExchangeConfiguration - Dry mode is ON
15:56:10 - Adding account 'main'
15:56:10 - - Adding balance 99.0001 BTC
15:56:10 - Adding account 'savings'
15:56:10 - - Adding balance 1.1 BTC
15:56:10 - - Adding balance 2.2 USDT
15:56:10 - - Adding balance 3.3 ETH
15:56:10 - Adding account 'trade'
15:56:10 - - Adding balance 0.99962937 BTC
15:56:10 - - Adding balance 1000 USDT
15:56:10 - - Adding balance 10 ETH
15:56:10 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:10 - ExchangeConfiguration - Supported currency pairs : ETH/BTC, ETH/USDT 
15:56:10 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:10 - Initializing ExecutorService 'taskScheduler'
15:56:10 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:10 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:10 - Started Issue482Test in 0.778 seconds (JVM running for 5.925)
15:56:11 - TestableStrategy-onTickerUpdate 001 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:56:11.670499Z[Etc/UTC])

15:56:11 - TestableStrategy-onAccountUpdate 001 : AccountDTO(accountId=trade, name=trade, features=[], balances={})

15:56:15 - TestableStrategy-onTickerUpdate 002 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:56:15.264191Z[Etc/UTC])

15:56:18 - TestableStrategy-onTickerUpdate 003 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:56:18.864085Z[Etc/UTC])

15:56:22 - TestableStrategy-onTickerUpdate 004 : TickerDTO(currencyPair=ETH/BTC, open=1, last=1, bid=1, ask=1, high=1, low=1, vwap=1, volume=1, quoteVolume=1, bidSize=1, askSize=1, timestamp=2023-01-13T15:56:22.463490Z[Etc/UTC])

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 19.675 s - in tech.cassandre.trading.bot.issues.v4_1_0.Issue482Test
15:56:25 - UserService - InterruptedException : null
15:56:25 - MarketService - InterruptedException : null
15:56:25 - TradeService - InterruptedException : null
15:56:25 - Shutting down ExecutorService 'taskScheduler'
15:56:25 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:25 - HikariPool-2 - Shutdown initiated...
15:56:25 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
15:56:26.108 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:56:26.115 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:56:26.139 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:56:26.146 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test], using SpringBootContextLoader
15:56:26.149 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue483Test-context.xml] does not exist
15:56:26.149 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_0/Issue483TestContext.groovy] does not exist
15:56:26.149 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:56:26.149 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: Issue483Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:56:26.182 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]
15:56:26.220 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:56:26.220 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
15:56:26.275 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test]: using defaults.
15:56:26.275 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:56:26.281 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:56:26.287 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7b205dbd, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@106cc338, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a67e3c6, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@6cc558c6, org.springframework.test.context.support.DirtiesContextTestExecutionListener@15713d56, org.springframework.test.context.transaction.TransactionalTestExecutionListener@63f259c3, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@26ceffa8, org.springframework.test.context.event.EventPublishingTestExecutionListener@600b90df, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@7c8c9a05, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@d41f816, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5c2375a9, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@60129b9a, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@78d6692f, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@7a55af6b]
15:56:26.289 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@291a7e3c testClass = Issue483Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = Issue483Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1046d517 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue483TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@74751b3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52af26ee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1b11171f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:56:26.329 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@291a7e3c testClass = Issue483Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test@5a1de7fb, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@ca30bc1 testClass = Issue483Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@1046d517 key = [tech.cassandre.trading.bot.issues.v4_1_0.Issue483TestMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@74751b3, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@52af26ee, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@3c7f66c4, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@729d991e, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@1b11171f, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@7bb58ca3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:56:26.343 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:26 - Starting Issue483Test using Java 11.0.17 on repairnator with PID 26045 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:26 - No active profile set, falling back to default profiles: default
15:56:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:27 - Finished Spring Data repository scanning in 139 ms. Found 5 JPA repository interfaces.
15:56:27 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:27 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:27 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:27 - HikariPool-1 - Starting...
15:56:27 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:27 - HikariPool-1 - Start completed.
15:56:28 - Successfully acquired change log lock
15:56:28 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:28 - Reading from PUBLIC.DATABASECHANGELOG
15:56:28 - Successfully released change log lock
15:56:28 - Successfully acquired change log lock
Skipping auto-registration
15:56:28 - Skipping auto-registration
15:56:28 - Table EXCHANGE_ACCOUNTS created
15:56:28 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:28 - Table STRATEGIES created
15:56:28 - Auto-increment added to STRATEGIES.ID
15:56:28 - Table POSITIONS created
15:56:28 - Auto-increment added to POSITIONS.ID
15:56:28 - Table ORDERS created
15:56:28 - Auto-increment added to ORDERS.ID
15:56:28 - Table TRADES created
15:56:28 - Auto-increment added to TRADES.ID
15:56:28 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:28 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:28 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:28 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:28 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:28 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:28 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:28 - Index IDX_POSITIONS_POSITION_ID created
15:56:28 - Index IDX_POSITIONS_STATUS created
15:56:28 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:28 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:28 - Index IDX_ORDERS_ORDER_ID created
15:56:28 - Index IDX_TRADES_TRADE_ID created
15:56:28 - Index IDX_TRADES_ORDER_ID created
15:56:28 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 24ms
15:56:28 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:28 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:28 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:28 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:28 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:28 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:28 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:28 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:28 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:28 - Successfully released change log lock
15:56:28 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:28 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:28 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:28 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:29 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:29 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:30 - Calling Remote Init...
15:56:30 - ExchangeConfiguration - Dry mode is OFF
15:56:30 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:30 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:30 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:30 - Initializing ExecutorService 'taskScheduler'
15:56:30 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:30 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:30 - Started Issue483Test in 4.429 seconds (JVM running for 5.346)
15:56:30 - Shutting down ExecutorService 'taskScheduler'
15:56:30 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:30 - HikariPool-1 - Shutdown initiated...
15:56:30 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:30 - Starting Issue483Test using Java 11.0.17 on repairnator with PID 26045 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:30 - No active profile set, falling back to default profiles: default
15:56:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:30 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:56:30 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:30 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:31 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:31 - HikariPool-2 - Starting...
15:56:31 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:31 - HikariPool-2 - Start completed.
15:56:31 - Successfully acquired change log lock
15:56:31 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:31 - Reading from PUBLIC.DATABASECHANGELOG
15:56:31 - Successfully released change log lock
15:56:31 - Successfully acquired change log lock
Skipping auto-registration
15:56:31 - Skipping auto-registration
15:56:31 - Table EXCHANGE_ACCOUNTS created
15:56:31 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:31 - Table STRATEGIES created
15:56:31 - Auto-increment added to STRATEGIES.ID
15:56:31 - Table POSITIONS created
15:56:31 - Auto-increment added to POSITIONS.ID
15:56:31 - Table ORDERS created
15:56:31 - Auto-increment added to ORDERS.ID
15:56:31 - Table TRADES created
15:56:31 - Auto-increment added to TRADES.ID
15:56:31 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:31 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:31 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:31 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:31 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:31 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:31 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:31 - Index IDX_POSITIONS_POSITION_ID created
15:56:31 - Index IDX_POSITIONS_STATUS created
15:56:31 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:31 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:31 - Index IDX_ORDERS_ORDER_ID created
15:56:31 - Index IDX_TRADES_TRADE_ID created
15:56:31 - Index IDX_TRADES_ORDER_ID created
15:56:31 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:56:31 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:31 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:31 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:31 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:31 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:31 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:31 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:56:31 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:31 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:56:31 - Successfully released change log lock
15:56:31 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:31 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:31 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:31 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:31 - Calling Remote Init...
15:56:31 - ExchangeConfiguration - Dry mode is OFF
15:56:31 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:31 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:31 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:31 - Initializing ExecutorService 'taskScheduler'
15:56:31 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:31 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:31 - Started Issue483Test in 0.818 seconds (JVM running for 6.185)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.542 s - in tech.cassandre.trading.bot.issues.v4_1_0.Issue483Test
15:56:31 - Shutting down ExecutorService 'taskScheduler'
15:56:31 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:31 - HikariPool-2 - Shutdown initiated...
15:56:31 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
15:56:32.623 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:56:32.629 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:56:32.653 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:56:32.660 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test], using SpringBootContextLoader
15:56:32.662 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue510Test-context.xml] does not exist
15:56:32.662 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue510TestContext.groovy] does not exist
15:56:32.663 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:56:32.663 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: Issue510Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:56:32.729 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:56:32.730 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
15:56:32.799 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test]: using defaults.
15:56:32.799 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:56:32.806 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:56:32.811 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@68702e03, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@7a220c9a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2421cc4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@30c93896, org.springframework.test.context.support.DirtiesContextTestExecutionListener@59a008ba, org.springframework.test.context.transaction.TransactionalTestExecutionListener@338c99c8, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@21ba0741, org.springframework.test.context.event.EventPublishingTestExecutionListener@58ce9668, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@172b013, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@56673b2c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@2796aeae, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@b4711e2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@70f02c32]
15:56:32.813 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@60129b9a testClass = Issue510Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78d6692f testClass = Issue510Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4229bb3f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20ccf40b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4fb3ee4e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@306e95ec, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@316bcf94, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:56:32.854 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@60129b9a testClass = Issue510Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test@2f16c6b3, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@78d6692f testClass = Issue510Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4229bb3f, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@20ccf40b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@4fb3ee4e, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@306e95ec, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@316bcf94, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@448ff1a8], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:56:32.867 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:56:32.870 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:33 - Starting Issue510Test using Java 11.0.17 on repairnator with PID 26327 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:33 - The following profiles are active: schedule-disabled
15:56:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:33 - Finished Spring Data repository scanning in 116 ms. Found 5 JPA repository interfaces.
15:56:33 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:33 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:33 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:33 - HikariPool-1 - Starting...
15:56:34 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:34 - HikariPool-1 - Start completed.
15:56:34 - Successfully acquired change log lock
15:56:34 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:34 - Reading from PUBLIC.DATABASECHANGELOG
15:56:34 - Successfully released change log lock
15:56:34 - Successfully acquired change log lock
Skipping auto-registration
15:56:35 - Skipping auto-registration
15:56:35 - Table EXCHANGE_ACCOUNTS created
15:56:35 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:35 - Table STRATEGIES created
15:56:35 - Auto-increment added to STRATEGIES.ID
15:56:35 - Table POSITIONS created
15:56:35 - Auto-increment added to POSITIONS.ID
15:56:35 - Table ORDERS created
15:56:35 - Auto-increment added to ORDERS.ID
15:56:35 - Table TRADES created
15:56:35 - Auto-increment added to TRADES.ID
15:56:35 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:35 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:35 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:35 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:35 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:35 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:35 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:35 - Index IDX_POSITIONS_POSITION_ID created
15:56:35 - Index IDX_POSITIONS_STATUS created
15:56:35 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:35 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:35 - Index IDX_ORDERS_ORDER_ID created
15:56:35 - Index IDX_TRADES_TRADE_ID created
15:56:35 - Index IDX_TRADES_ORDER_ID created
15:56:35 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 39ms
15:56:35 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:35 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:35 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:35 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:35 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:35 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:35 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:35 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:35 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:35 - Successfully released change log lock
15:56:35 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:35 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:35 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:35 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:35 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:35 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:36 - Calling Remote Init...
15:56:36 - ExchangeConfiguration - Dry mode is OFF
15:56:36 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:36 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:36 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:36 - StrategyConfiguration - Accounts available : 'null/null'.
15:56:36 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:38 - Started Issue510Test in 5.218 seconds (JVM running for 6.039)
15:56:38 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:38 - HikariPool-1 - Shutdown initiated...
15:56:38 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:38 - Starting Issue510Test using Java 11.0.17 on repairnator with PID 26327 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:38 - The following profiles are active: schedule-disabled
15:56:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:38 - Finished Spring Data repository scanning in 19 ms. Found 5 JPA repository interfaces.
15:56:38 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:38 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:56:38 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:38 - HikariPool-2 - Starting...
15:56:38 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:38 - HikariPool-2 - Start completed.
15:56:38 - Successfully acquired change log lock
15:56:38 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:38 - Reading from PUBLIC.DATABASECHANGELOG
15:56:38 - Successfully released change log lock
15:56:38 - Successfully acquired change log lock
Skipping auto-registration
15:56:38 - Skipping auto-registration
15:56:38 - Table EXCHANGE_ACCOUNTS created
15:56:38 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:38 - Table STRATEGIES created
15:56:38 - Auto-increment added to STRATEGIES.ID
15:56:38 - Table POSITIONS created
15:56:38 - Auto-increment added to POSITIONS.ID
15:56:38 - Table ORDERS created
15:56:38 - Auto-increment added to ORDERS.ID
15:56:38 - Table TRADES created
15:56:38 - Auto-increment added to TRADES.ID
15:56:38 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:38 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:38 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:38 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:38 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:38 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:38 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:38 - Index IDX_POSITIONS_POSITION_ID created
15:56:38 - Index IDX_POSITIONS_STATUS created
15:56:38 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:38 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:38 - Index IDX_ORDERS_ORDER_ID created
15:56:38 - Index IDX_TRADES_TRADE_ID created
15:56:38 - Index IDX_TRADES_ORDER_ID created
15:56:38 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 17ms
15:56:38 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:38 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:38 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:38 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:38 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:38 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:38 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:38 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:38 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:56:38 - Successfully released change log lock
15:56:38 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:38 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:38 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:38 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:38 - Calling Remote Init...
15:56:38 - ExchangeConfiguration - Dry mode is OFF
15:56:38 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:38 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:38 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:38 - StrategyConfiguration - Accounts available : 'null/null'.
15:56:38 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:39 - Started Issue510Test in 1.393 seconds (JVM running for 7.455)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.988 s - in tech.cassandre.trading.bot.issues.v4_1_1.Issue510Test
15:56:39 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:39 - HikariPool-2 - Shutdown initiated...
15:56:39 - HikariPool-2 - Shutdown completed.
[INFO] Running tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
15:56:40.524 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:56:40.531 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:56:40.555 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:56:40.562 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test], using SpringBootContextLoader
15:56:40.564 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue509Test-context.xml] does not exist
15:56:40.565 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: class path resource [tech/cassandre/trading/bot/issues/v4_1_1/Issue509TestContext.groovy] does not exist
15:56:40.565 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: no resource found for suffixes {-context.xml, Context.groovy}.
15:56:40.565 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: Issue509Test does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:56:40.637 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter/autoconfigure/target/test-classes/tech/cassandre/trading/bot/CassandreTradingBot.class]
15:56:40.637 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.CassandreTradingBot for test class tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
15:56:40.703 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test]: using defaults.
15:56:40.704 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:56:40.711 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:56:40.718 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@2421cc4, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@30c93896, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@59a008ba, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@338c99c8, org.springframework.test.context.support.DirtiesContextTestExecutionListener@21ba0741, org.springframework.test.context.transaction.TransactionalTestExecutionListener@58ce9668, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@172b013, org.springframework.test.context.event.EventPublishingTestExecutionListener@56673b2c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2796aeae, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@b4711e2, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@1fa1cab1, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@70f02c32, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@62010f5c, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@51fadaff]
15:56:40.719 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@7a55af6b testClass = Issue509Test, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = Issue509Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2b91004a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@169e6180, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@25fb8912, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e11f9e9, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [true] with mode [BEFORE_EACH_TEST_METHOD].
15:56:40.788 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@7a55af6b testClass = Issue509Test, testInstance = tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test@19e4fcac, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@3d9c13b5 testClass = Issue509Test, locations = '{}', classes = '{class tech.cassandre.trading.bot.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{schedule-disabled}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@2b91004a, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@169e6180, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@25fb8912, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@6fd83fc1, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3e11f9e9, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@770c2e6b], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:56:40.801 [main] DEBUG org.springframework.core.env.StandardEnvironment - Activating profiles [schedule-disabled]
15:56:40.804 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:40 - Starting Issue509Test using Java 11.0.17 on repairnator with PID 26978 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:40 - The following profiles are active: schedule-disabled
15:56:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:41 - Finished Spring Data repository scanning in 129 ms. Found 5 JPA repository interfaces.
15:56:41 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:41 - Finished Spring Data repository scanning in 6 ms. Found 5 JPA repository interfaces.
15:56:41 - HikariPool-1 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:41 - HikariPool-1 - Starting...
15:56:42 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:42 - HikariPool-1 - Start completed.
15:56:42 - Successfully acquired change log lock
15:56:42 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:42 - Reading from PUBLIC.DATABASECHANGELOG
15:56:42 - Successfully released change log lock
15:56:42 - Successfully acquired change log lock
Skipping auto-registration
15:56:42 - Skipping auto-registration
15:56:42 - Table EXCHANGE_ACCOUNTS created
15:56:42 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:42 - Table STRATEGIES created
15:56:42 - Auto-increment added to STRATEGIES.ID
15:56:42 - Table POSITIONS created
15:56:42 - Auto-increment added to POSITIONS.ID
15:56:42 - Table ORDERS created
15:56:42 - Auto-increment added to ORDERS.ID
15:56:42 - Table TRADES created
15:56:42 - Auto-increment added to TRADES.ID
15:56:42 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:42 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:42 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:42 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:42 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:42 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:42 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:42 - Index IDX_POSITIONS_POSITION_ID created
15:56:42 - Index IDX_POSITIONS_STATUS created
15:56:42 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:42 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:42 - Index IDX_ORDERS_ORDER_ID created
15:56:42 - Index IDX_TRADES_TRADE_ID created
15:56:42 - Index IDX_TRADES_ORDER_ID created
15:56:42 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 23ms
15:56:42 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:42 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:42 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:42 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:42 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:42 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:42 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:42 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:42 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:42 - Successfully released change log lock
15:56:42 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:42 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:43 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:43 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:43 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:43 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:44 - Calling Remote Init...
15:56:44 - ExchangeConfiguration - Dry mode is OFF
15:56:44 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:44 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:44 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:44 - StrategyConfiguration - Accounts available : 'null/null'.
15:56:44 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:45 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:45 - Started Issue509Test in 5.179 seconds (JVM running for 5.97)
15:56:45 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:45 - HikariPool-1 - Shutdown initiated...
15:56:46 - HikariPool-1 - Shutdown completed.
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:46 - Starting Issue509Test using Java 11.0.17 on repairnator with PID 26978 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter/autoconfigure)
15:56:46 - The following profiles are active: schedule-disabled
15:56:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:46 - Finished Spring Data repository scanning in 18 ms. Found 5 JPA repository interfaces.
15:56:46 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:46 - Finished Spring Data repository scanning in 5 ms. Found 5 JPA repository interfaces.
15:56:46 - HikariPool-2 - idleTimeout has been set but has no effect because the pool is operating as a fixed size pool.
15:56:46 - HikariPool-2 - Starting...
15:56:46 - HikariPool-2 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:46 - HikariPool-2 - Start completed.
15:56:46 - Successfully acquired change log lock
15:56:46 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:46 - Reading from PUBLIC.DATABASECHANGELOG
15:56:46 - Successfully released change log lock
15:56:46 - Successfully acquired change log lock
Skipping auto-registration
15:56:46 - Skipping auto-registration
15:56:46 - Table EXCHANGE_ACCOUNTS created
15:56:46 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:46 - Table STRATEGIES created
15:56:46 - Auto-increment added to STRATEGIES.ID
15:56:46 - Table POSITIONS created
15:56:46 - Auto-increment added to POSITIONS.ID
15:56:46 - Table ORDERS created
15:56:46 - Auto-increment added to ORDERS.ID
15:56:46 - Table TRADES created
15:56:46 - Auto-increment added to TRADES.ID
15:56:46 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:46 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:46 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:46 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:46 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:46 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:46 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:46 - Index IDX_POSITIONS_POSITION_ID created
15:56:46 - Index IDX_POSITIONS_STATUS created
15:56:46 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:46 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:46 - Index IDX_ORDERS_ORDER_ID created
15:56:46 - Index IDX_TRADES_TRADE_ID created
15:56:46 - Index IDX_TRADES_ORDER_ID created
15:56:46 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 16ms
15:56:46 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:46 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:46 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:46 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:46 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:46 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:46 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 1ms
15:56:46 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:46 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 1ms
15:56:46 - Successfully released change log lock
15:56:46 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:46 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:46 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:46 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:46 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:46 - Calling Remote Init...
15:56:46 - ExchangeConfiguration - Dry mode is OFF
15:56:46 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:46 - ExchangeConfiguration - Supported currency pairs : BTC/USD 
15:56:46 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=2, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:46 - StrategyConfiguration - Accounts available : 'null/null'.
15:56:46 - StrategyConfiguration - Running strategy '01/Testable strategy' (requires ETH/BTC, ETH/USDT).
15:56:46 - TestableStrategy-onPositionUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:47 - Started Issue509Test in 1.396 seconds (JVM running for 7.388)
15:56:47 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:47 - TestableStrategy-onPositionStatusUpdate 001 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:48 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, order=Order(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:48 - TestableStrategy-onPositionUpdate 002 : PositionDTO(id=63, positionId=63, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d18be1220fc00062a072b, openingOrder=OrderDTO(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[TradeDTO(id=137, tradeId=605d18be2e113d2923fb0ba0, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC]), TradeDTO(id=138, tradeId=605d18be2e113d2923fb0ba1, type=BID, orderId=605d18be1220fc00062a072b, order=Order(id=109, orderId=605d18be1220fc00062a072b, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T23:11:58.401333Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00050000 BTC, price=51936.90000000 USDT, fee=0.02596845 USDT, userReference=null, timestamp=2021-03-25T23:11:58Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:49 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, order=Order(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:49 - TestableStrategy-onPositionUpdate 003 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, order=Order(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:50 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, order=Order(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:50 - TestableStrategy-onPositionStatusUpdate 002 : PositionDTO(id=70, positionId=70, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605d7b40dfaee70006df1e89, openingOrder=OrderDTO(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[TradeDTO(id=146, tradeId=605d7b402e113d2923295667, type=ASK, orderId=605d7b40dfaee70006df1e89, order=Order(id=116, orderId=605d7b40dfaee70006df1e89, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-26T06:12:16.650173Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52675.20000000 USDT, fee=0.05267520 USDT, userReference=null, timestamp=2021-03-26T06:12:16Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:51 - TestableStrategy-onPositionStatusUpdate 003 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, order=Order(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:51 - TestableStrategy-onPositionUpdate 004 : PositionDTO(id=53, positionId=53, type=LONG, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605c8c1763bd780006f520d0, openingOrder=OrderDTO(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[TradeDTO(id=126, tradeId=605c8c172e113d2923933004, type=BID, orderId=605c8c1763bd780006f520d0, order=Order(id=99, orderId=605c8c1763bd780006f520d0, type=BID, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T13:11:51.990852Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=50784.00000000 USDT, fee=0.05078400 USDT, userReference=null, timestamp=2021-03-25T13:11:52Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

15:56:52 - TestableStrategy-onPositionUpdate 005 : PositionDTO(id=60, positionId=60, type=SHORT, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, rules=Stop gain at 4 % / Stop loss at 15 %, status=OPENED, forceClosing=false, openingOrderId=605cee8ab5ab390006baef6a, openingOrder=OrderDTO(id=106, orderId=605cee8ab5ab390006baef6a, type=ASK, strategy=StrategyDTO(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, name=Testable strategy, lastPositionIdUsed=0), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T20:11:54.479442Z[Etc/UTC], trades=[TradeDTO(id=133, tradeId=605cee8a2e113d2923e554f0, type=ASK, orderId=605cee8ab5ab390006baef6a, order=Order(id=106, orderId=605cee8ab5ab390006baef6a, type=ASK, strategy=Strategy(id=1, strategyId=01, type=BASIC_TA4J_STRATEGY, exchangeAccount=ExchangeAccount(id=1, exchange=kucoin, account=cassandre.crypto.bot@gmail.com), name=Testable strategy), currencyPair=BTC/USDT, amount=0.00100000 BTC, averagePrice=null, limitPrice=null, leverage=null, status=PENDING_NEW, cumulativeAmount=null, userReference=null, timestamp=2021-03-25T20:11:54.479442Z[Etc/UTC], trades=[]), currencyPair=BTC/USDT, amount=0.00100000 BTC, price=52335.70000000 USDT, fee=0.05233570 USDT, userReference=null, timestamp=2021-03-25T20:11:54Z[Etc/UTC])]), closingOrderId=null, closingOrder=null, lowestGainPrice=null, highestGainPrice=null, latestGainPrice=null)

[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.995 s - in tech.cassandre.trading.bot.issues.v4_1_1.Issue509Test
15:56:52 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:56:52 - HikariPool-2 - Shutdown initiated...
15:56:52 - HikariPool-2 - Shutdown completed.
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 107, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter >--
[INFO] Building Trading bot spring boot starter 4.2.2-SNAPSHOT            [3/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter/starter/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-test-autoconfigure >--
[INFO] Building Trading bot spring boot autoconfigure test 4.2.2-SNAPSHOT [4/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 7 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 7 source files to /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter-test-autoconfigure ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
15:56:53.955 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating CacheAwareContextLoaderDelegate from class [org.springframework.test.context.cache.DefaultCacheAwareContextLoaderDelegate]
15:56:53.962 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating BootstrapContext using constructor [public org.springframework.test.context.support.DefaultBootstrapContext(java.lang.Class,org.springframework.test.context.CacheAwareContextLoaderDelegate)]
15:56:53.986 [main] DEBUG org.springframework.test.context.BootstrapUtils - Instantiating TestContextBootstrapper for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest] from class [org.springframework.boot.test.context.SpringBootTestContextBootstrapper]
15:56:53.993 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Neither @ContextConfiguration nor @ContextHierarchy found for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest], using SpringBootContextLoader
15:56:53.995 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: class path resource [tech/cassandre/trading/bot/test/mock/TickerFluxMockTest-context.xml] does not exist
15:56:53.995 [main] DEBUG org.springframework.test.context.support.AbstractContextLoader - Did not detect default resource location for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: class path resource [tech/cassandre/trading/bot/test/mock/TickerFluxMockTestContext.groovy] does not exist
15:56:53.996 [main] INFO org.springframework.test.context.support.AbstractContextLoader - Could not detect default resource locations for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: no resource found for suffixes {-context.xml, Context.groovy}.
15:56:53.996 [main] INFO org.springframework.test.context.support.AnnotationConfigContextLoaderUtils - Could not detect default configuration classes for test class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: TickerFluxMockTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
15:56:54.028 [main] DEBUG org.springframework.test.context.support.ActiveProfilesUtils - Could not find an 'annotation declaring class' for annotation type [org.springframework.test.context.ActiveProfiles] and class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]
15:56:54.065 [main] DEBUG org.springframework.context.annotation.ClassPathScanningCandidateComponentProvider - Identified candidate component class: file [/home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure/target/test-classes/tech/cassandre/trading/bot/test/CassandreTradingBot.class]
15:56:54.065 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Found @SpringBootConfiguration tech.cassandre.trading.bot.test.CassandreTradingBot for test class tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
15:56:54.115 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - @TestExecutionListeners is not present for class [tech.cassandre.trading.bot.test.mock.TickerFluxMockTest]: using defaults.
15:56:54.116 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.event.ApplicationEventsTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.test.context.event.EventPublishingTestExecutionListener]
15:56:54.121 [main] DEBUG org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Skipping candidate TestExecutionListener [org.springframework.test.context.web.ServletTestExecutionListener] due to a missing dependency. Specify custom listener classes or make the default listener classes and their required dependencies available. Offending class: [javax/servlet/ServletContext]
15:56:54.126 [main] INFO org.springframework.boot.test.context.SpringBootTestContextBootstrapper - Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@558bdf1f, org.springframework.test.context.event.ApplicationEventsTestExecutionListener@8576fa0, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7582ff54, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@67545b57, org.springframework.test.context.support.DirtiesContextTestExecutionListener@6c2c1385, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5f354bcf, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3daf7722, org.springframework.test.context.event.EventPublishingTestExecutionListener@78641d23, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@74589991, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@146dfe6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4716be8b, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1fc32e4f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2f67b837, org.springframework.boot.test.autoconfigure.webservices.client.MockWebServiceServerTestExecutionListener@1869fbd2]
15:56:54.128 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@5ddf0d24 testClass = TickerFluxMockTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@363a52f testClass = TickerFluxMockTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.test.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@60856961 key = [tech.cassandre.trading.bot.test.mock.TickerFluxMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4f2b503c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e15b7e8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@ffaa6af, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b0d79fc, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@319b92f3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
15:56:54.140 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@5ddf0d24 testClass = TickerFluxMockTest, testInstance = tech.cassandre.trading.bot.test.mock.TickerFluxMockTest@3ad2e17, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@363a52f testClass = TickerFluxMockTest, locations = '{}', classes = '{class tech.cassandre.trading.bot.test.CassandreTradingBot}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@60856961 key = [tech.cassandre.trading.bot.test.mock.TickerFluxMock]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@4f2b503c, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@e15b7e8, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@ffaa6af, org.springframework.boot.test.autoconfigure.actuate.metrics.MetricsExportContextCustomizerFactory$DisableMetricExportContextCustomizer@4dbb42b7, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@4b0d79fc, org.springframework.boot.test.context.SpringBootTestArgs@1, org.springframework.boot.test.context.SpringBootTestWebEnvironment@319b92f3], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.event.ApplicationEventsTestExecutionListener.recordApplicationEvents' -> false]]].
15:56:54.154 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}
 ==========================================================================
 ,-----.                                               ,--.
'  .--./  ,--,--.  ,---.   ,---.   ,--,--. ,--,--,   ,-|  | ,--.--.  ,---.
|  |     ' ,-.  | (  .-'  (  .-'  ' ,-.  | |      \ ' .-. | |  .--' | .-. :
'  '--'\ \ '-'  | .-'  `) .-'  `) \ '-'  | |  ||  | \ `-' | |  |    \   --.
 `-----'  `--`--' `----'  `----'   `--`--' `--''--'  `---'  `--'     `----'
 ==========================================================================
15:56:54 - Starting TickerFluxMockTest using Java 11.0.17 on repairnator with PID 27502 (started by gabsko in /home/gabsko/breaking-updates/spring-boot-starter-test/autoconfigure)
15:56:54 - No active profile set, falling back to default profiles: default
15:56:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:54 - Finished Spring Data repository scanning in 5 ms. Found 0 JPA repository interfaces.
15:56:54 - Bootstrapping Spring Data JPA repositories in DEFAULT mode.
15:56:54 - Finished Spring Data repository scanning in 109 ms. Found 5 JPA repository interfaces.
15:56:55 - HikariPool-1 - Starting...
15:56:55 - HikariPool-1 - Driver does not support get/set network timeout for connections. (feature not supported)
15:56:55 - HikariPool-1 - Start completed.
15:56:56 - Successfully acquired change log lock
15:56:57 - Creating database history table with name: PUBLIC.DATABASECHANGELOG
15:56:57 - Reading from PUBLIC.DATABASECHANGELOG
15:56:57 - Table EXCHANGE_ACCOUNTS created
15:56:57 - Auto-increment added to EXCHANGE_ACCOUNTS.ID
15:56:57 - Table STRATEGIES created
15:56:57 - Auto-increment added to STRATEGIES.ID
15:56:57 - Table POSITIONS created
15:56:57 - Auto-increment added to POSITIONS.ID
15:56:57 - Table ORDERS created
15:56:57 - Auto-increment added to ORDERS.ID
15:56:57 - Table TRADES created
15:56:57 - Auto-increment added to TRADES.ID
15:56:57 - Foreign key constraint added to STRATEGIES (FK_EXCHANGE_ACCOUNT_ID)
15:56:57 - Foreign key constraint added to POSITIONS (FK_STRATEGY_ID)
15:56:57 - Foreign key constraint added to POSITIONS (FK_OPENING_ORDER_ID)
15:56:57 - Foreign key constraint added to POSITIONS (FK_CLOSING_ORDER_ID)
15:56:57 - Foreign key constraint added to ORDERS (FK_STRATEGY_ID)
15:56:57 - Foreign key constraint added to TRADES (FK_ORDER_ID)
15:56:57 - Index IDX_STRATEGIES_STRATEGY_ID created
15:56:57 - Index IDX_POSITIONS_POSITION_ID created
15:56:57 - Index IDX_POSITIONS_STATUS created
15:56:57 - Index IDX_POSITIONS_FK_OPENING_ORDER_ID created
15:56:57 - Index IDX_POSITIONS_FK_CLOSING_ORDER_ID created
15:56:57 - Index IDX_ORDERS_ORDER_ID created
15:56:57 - Index IDX_TRADES_TRADE_ID created
15:56:57 - Index IDX_TRADES_ORDER_ID created
15:56:57 - ChangeSet db/changelog/db.changelog-4.0.0.xml::changelog-4.0.0::straumat ran successfully in 36ms
15:56:57 - Column POSITIONS.LOWEST_PRICE_VALUE renamed to LOWEST_GAIN_PRICE_VALUE
15:56:57 - Column POSITIONS.LOWEST_PRICE_CURRENCY renamed to LOWEST_GAIN_PRICE_CURRENCY
15:56:57 - Column POSITIONS.HIGHEST_PRICE_VALUE renamed to HIGHEST_GAIN_PRICE_VALUE
15:56:57 - Column POSITIONS.HIGHEST_PRICE_CURRENCY renamed to HIGHEST_GAIN_PRICE_CURRENCY
15:56:57 - Column POSITIONS.LATEST_PRICE_VALUE renamed to LATEST_GAIN_PRICE_VALUE
15:56:57 - Column POSITIONS.LATEST_PRICE_CURRENCY renamed to LATEST_GAIN_PRICE_CURRENCY
15:56:57 - ChangeSet db/changelog/db.changelog-4.1.0.xml::changelog-4.1.0::straumat ran successfully in 2ms
15:56:57 - Columns FORCE_CLOSING(boolean) added to POSITIONS
15:56:57 - ChangeSet db/changelog/db.changelog-4.1.1.xml::changelog-4.1.1::straumat ran successfully in 2ms
15:56:57 - Successfully released change log lock
15:56:58 - HHH000204: Processing PersistenceUnitInfo [name: default]
15:56:58 - HHH000412: Hibernate ORM core version 5.4.30.Final
15:56:58 - HCANN000001: Hibernate Commons Annotations {5.1.2.Final}
15:56:58 - HHH000400: Using dialect: org.hibernate.dialect.HSQLDialect
15:56:58 - HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
15:56:58 - Initialized JPA EntityManagerFactory for persistence unit 'default'
15:56:58 - Adding tests data from tickers-BTC-USDT.tsv
15:56:58 - Adding tests data from tickers-ETH-BTC.tsv
15:56:58 - Adding tests data from tickers-KCS-USDT.csv
15:56:59 - Calling Remote Init...
15:56:59 - ExchangeConfiguration - Dry mode is ON
15:56:59 - Adding account 'trade'
15:56:59 - - Adding balance 0.99962937 BTC
15:56:59 - - Adding balance 1000 USDT
15:56:59 - - Adding balance 10 ETH
15:56:59 - ExchangeConfiguration - Connection to org.knowm.xchange.simulated.SimulatedExchange successful
15:56:59 - ExchangeConfiguration - Supported currency pairs : BTC/USDT, ETH/BTC 
15:56:59 - ExchangeConfiguration - Exchange configuration saved in database ExchangeAccount(id=1, exchange=org.knowm.xchange.simulated.SimulatedExchange, account=cassandre.crypto.bot@gmail.com)
15:56:59 - Initializing ExecutorService 'taskScheduler'
15:56:59 - StrategyConfiguration - Accounts available : 'trade/trade'.
15:56:59 - StrategyConfiguration - Running strategy '1/Testable strategy' (requires BTC/USDT, ETH/BTC).
15:56:59 - Started TickerFluxMockTest in 5.843 seconds (JVM running for 6.604)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 19.219 s - in tech.cassandre.trading.bot.test.mock.TickerFluxMockTest
15:57:13 - Shutting down ExecutorService 'taskScheduler'
15:57:13 - Closing JPA EntityManagerFactory for persistence unit 'default'
15:57:13 - HikariPool-1 - Shutdown initiated...
15:57:13 - HikariPool-1 - Shutdown completed.
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-test >--
[INFO] Building Trading bot spring boot starter test 4.2.2-SNAPSHOT       [5/7]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Deleting /home/gabsko/breaking-updates/spring-boot-starter-test/starter/target
[INFO] 
[INFO] --- maven-checkstyle-plugin:3.1.2:check (default) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Starting audit...
Audit done.
[INFO] You have 0 Checkstyle violations.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.22.2:test (default-test) @ cassandre-trading-bot-spring-boot-starter-test ---
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-basic-archetype >--
[INFO] Building Cassandre trading bot basic archetype 4.2.2-SNAPSHOT      [6/7]
[INFO] --------------------------[ maven-archetype ]---------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Deleting /home/gabsko/breaking-updates/trading-bot-archetypes/basic-archetype/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 12 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-basic-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 2 resources
[INFO] 
[INFO] --< tech.cassandre.trading.bot:cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype >--
[INFO] Building Cassandre trading bot basic ta4j archetype 4.2.2-SNAPSHOT [7/7]
[INFO] --------------------------[ maven-archetype ]---------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Deleting /home/gabsko/breaking-updates/trading-bot-archetypes/basic-ta4j-archetype/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 1 resource
[INFO] Copying 12 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ cassandre-trading-bot-spring-boot-starter-basic-ta4j-archetype ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 2 resources
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for Cassandre trading bot 4.2.2-SNAPSHOT:
[INFO] 
[INFO] Cassandre trading bot .............................. SUCCESS [  0.068 s]
[INFO] Trading bot spring boot autoconfigure .............. SUCCESS [17:28 min]
[INFO] Trading bot spring boot starter .................... SUCCESS [  0.052 s]
[INFO] Trading bot spring boot autoconfigure test ......... SUCCESS [ 20.480 s]
[INFO] Trading bot spring boot starter test ............... SUCCESS [  0.052 s]
[INFO] Cassandre trading bot basic archetype .............. SUCCESS [  0.056 s]
[INFO] Cassandre trading bot basic ta4j archetype ......... SUCCESS [  0.009 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  17:49 min
[INFO] Finished at: 2023-01-13T15:57:13Z
[INFO] ------------------------------------------------------------------------
