[INFO] Scanning for projects...
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Build Order:
[INFO] 
[INFO] javaparser-parent                                                  [pom]
[INFO] javaparser-core                                                    [jar]
[INFO] javaparser-core-testing                                            [jar]
[INFO] javaparser-core-testing-bdd                                        [jar]
[INFO] javaparser-core-generators                                         [jar]
[INFO] javaparser-core-metamodel-generator                                [jar]
[INFO] javaparser-core-serialization                                      [jar]
[INFO] javaparser-symbol-solver-core                                      [jar]
[INFO] javaparser-symbol-solver-testing                                   [jar]
[INFO] 
[INFO] --------------< com.github.javaparser:javaparser-parent >---------------
[INFO] Building javaparser-parent 3.19.1-SNAPSHOT                         [1/9]
[INFO] --------------------------------[ pom ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-parent ---
[INFO] 
[INFO] ---------------< com.github.javaparser:javaparser-core >----------------
[INFO] Building javaparser-core 3.19.1-SNAPSHOT                           [2/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core/target
[INFO] 
[INFO] --- ph-javacc-maven-plugin:4.1.4:javacc (javacc) @ javaparser-core ---
ParserGeneratorCC Version 1.1.3 (ParserGeneratorCC)
(type "pgcc" with no arguments for help)
Reading from file /home/gabsko/breaking-updates/javaparser-core/src/main/javacc/java.jj ...
Warning: Line 47, Column 5: Bad option name "STATIC".  Option setting will be ignored.
Warning: Line 150, Column 3: Non-ASCII characters used in regular expression.
Please make sure you use the correct Reader when you create the parser, one that can handle your character set.
File "Provider.java" does not exist.  Will create one.
File "StringProvider.java" does not exist.  Will create one.
File "StreamProvider.java" does not exist.  Will create one.
File "TokenMgrException.java" does not exist.  Will create one.
File "ParseException.java" does not exist.  Will create one.
File "Token.java" does not exist.  Will create one.
File "CharStream.java" does not exist.  Will create one.
File "AbstractCharStream.java" does not exist.  Will create one.
File "SimpleCharStream.java" does not exist.  Will create one.
Parser generated with 0 errors and 2 warnings.
[INFO] Processed 1 grammar
[INFO] 
[INFO] --- build-helper-maven-plugin:3.2.0:add-source (add-source) @ javaparser-core ---
[INFO] Source directory: /home/gabsko/breaking-updates/javaparser-core/src/main/javacc-support added.
[INFO] 
[INFO] --- templating-maven-plugin:1.0.0:filter-sources (filter-src) @ javaparser-core ---
[INFO] Coping files with filtering to temporary directory.
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copied 1 files to output directory: /home/gabsko/breaking-updates/javaparser-core/target/generated-sources/java-templates
[INFO] Source directory: /home/gabsko/breaking-updates/javaparser-core/target/generated-sources/java-templates added.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 489 source files to /home/gabsko/breaking-updates/javaparser-core/target/classes
[INFO] /home/gabsko/breaking-updates/javaparser-core/src/main/java/com/github/javaparser/printer/SourcePrinter.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/javaparser-core/src/main/java/com/github/javaparser/printer/SourcePrinter.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/javaparser-core/src/main/java/com/github/javaparser/printer/configuration/DefaultPrinterConfiguration.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-core/src/main/java/com/github/javaparser/printer/configuration/DefaultPrinterConfiguration.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- bnd-maven-plugin:5.2.0:bnd-process (default) @ javaparser-core ---
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core ---
[INFO] No tests to run.
[INFO] 
[INFO] -----------< com.github.javaparser:javaparser-core-testing >------------
[INFO] Building javaparser-core-testing 3.19.1-SNAPSHOT                   [3/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core-testing ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core-testing/target
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:prepare-agent (jacoco-initialize) @ javaparser-core-testing ---
[INFO] argLine set to -javaagent:/home/gabsko/.m2/repository/org/jacoco/org.jacoco.agent/0.8.6/org.jacoco.agent-0.8.6-runtime.jar=destfile=/home/gabsko/breaking-updates/javaparser-core-testing/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-testing/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core-testing ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 100 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core-testing ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 169 source files to /home/gabsko/breaking-updates/javaparser-core-testing/target/test-classes
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing/src/test/java/com/github/javaparser/LineSeparatorProcessorTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-classes) @ javaparser-core-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 599 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-generated-sources) @ javaparser-core-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 13 resources
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core-testing ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.github.javaparser.GeneratedJavaParserTokenManagerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.462 s - in com.github.javaparser.GeneratedJavaParserTokenManagerTest
[INFO] Running com.github.javaparser.ProvidersTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.ProvidersTest
[INFO] Running com.github.javaparser.LineSeparatorProcessorTest


Original:
    public class Foo { //comment
        private String a;
        private String b;
        private String c;
        private String d;
    }


Expected:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }


Actual:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }
lineSeparator_cu.describe() = CRLF (\r\n)
lineSeparator_fd.describe() = CRLF (\r\n)


Original:
    public class Foo { //comment        private String a;        private String b;        private String c;        private String d;    }


Expected:
    public class Foo { //comment    private String newField;        private String a;        private String b;        private String c;        private String d;    }


Actual:
    public class Foo { //comment    private String newField;        private String a;        private String b;        private String c;        private String d;    }
lineSeparator_cu.describe() = CR (\r)
lineSeparator_fd.describe() = CR (\r)


Original:
    public class Foo { //comment
        private String a;
        private String b;
        private String c;
        private String d;
    }


Expected:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }


Actual:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }
lineSeparator_cu.describe() = LF (\n)
lineSeparator_fd.describe() = LF (\n)
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.08 s - in com.github.javaparser.LineSeparatorProcessorTest
[INFO] Running com.github.javaparser.utils.VisitorMapTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 s - in com.github.javaparser.utils.VisitorMapTest
[INFO] Running com.github.javaparser.utils.ParserCollectionStrategyTest
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/without_module_info
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/without_module_info
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/without_module_info/demo/Main.java
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/module-info.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/demo/Main.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/without_module_info/demo/Main.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/module-info.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/demo/Main.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/module-info.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/Main.java
SourceRoot at /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/module-info.java
Found /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/Main.java
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.624 s - in com.github.javaparser.utils.ParserCollectionStrategyTest
[INFO] Running com.github.javaparser.utils.LineSeparatorTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.utils.LineSeparatorTest
[INFO] Running com.github.javaparser.utils.VisitorSetTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.utils.VisitorSetTest
[INFO] Running com.github.javaparser.utils.PairTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.utils.PairTest
[INFO] Running com.github.javaparser.utils.UtilsTest
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in com.github.javaparser.utils.UtilsTest
[INFO] Running com.github.javaparser.utils.CodeGenerationUtilsTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.utils.CodeGenerationUtilsTest
[INFO] Running com.github.javaparser.utils.PositionUtilsTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in com.github.javaparser.utils.PositionUtilsTest
[INFO] Running com.github.javaparser.utils.SourceRootTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 s - in com.github.javaparser.utils.SourceRootTest
[INFO] Running com.github.javaparser.utils.LogTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.utils.LogTest
[INFO] Running com.github.javaparser.utils.VisitorListTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in com.github.javaparser.utils.VisitorListTest
[INFO] Running com.github.javaparser.utils.SourceZipTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.utils.SourceZipTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.CompilationUnitTransformationsTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.CompilationUnitTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.ConstructorDeclarationTransformationsTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.ConstructorDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.MethodDeclarationTransformationsTest
[WARNING] Tests run: 28, Failures: 0, Errors: 0, Skipped: 4, Time elapsed: 0.061 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.MethodDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.EnumConstantDeclarationTransformationsTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.EnumConstantDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.ClassOrInterfaceDeclarationTransformationsTest
[INFO] Tests run: 20, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.517 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.ClassOrInterfaceDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.FieldDeclarationTransformationsTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.FieldDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.OperatorTransformationsTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.OperatorTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.InitializerDeclarationTransformationsTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.InitializerDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.StatementTransformationsTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.StatementTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.EnumDeclarationTransformationsTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.EnumDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.AnnotationMemberDeclarationTransformationsTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.AnnotationMemberDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.AnnotationDeclarationTransformationsTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.029 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.body.AnnotationDeclarationTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.transformations.ast.ArrayCreationLevelTransformationsTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.printer.lexicalpreservation.transformations.ast.ArrayCreationLevelTransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2592Test

final int a_original parent true
int b parent true

final int a_original parent true
int b parent true
String c_brand_new parent true

public class A {

    public void m(final int a_renamed, int b, String c_brand_new) {
    }
}


final int a_renamed parent true
int b parent true
String c_brand_new parent true
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.printer.lexicalpreservation.Issue2592Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.LexicalPreservingPrinterTest
[INFO] Tests run: 92, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.214 s - in com.github.javaparser.printer.lexicalpreservation.LexicalPreservingPrinterTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2290Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.lexicalpreservation.Issue2290Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.AnnotationSpaceTest
public class Foo {
    void myMethod(@Nullable String param);
}
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.lexicalpreservation.AnnotationSpaceTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2806Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.printer.lexicalpreservation.Issue2806Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2393Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.printer.lexicalpreservation.Issue2393Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.PrettyPrinterIssue2340Test
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in com.github.javaparser.printer.lexicalpreservation.PrettyPrinterIssue2340Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.TransformationsTest
[INFO] Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.054 s - in com.github.javaparser.printer.lexicalpreservation.TransformationsTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.PrettyPrinterIssue2351Test
public enum RandomEnum { TYPE_1,SOMETHING
;}
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.printer.lexicalpreservation.PrettyPrinterIssue2351Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue1467Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.lexicalpreservation.Issue1467Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue1793Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.printer.lexicalpreservation.Issue1793Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.DifferenceElementCalculatorTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.github.javaparser.printer.lexicalpreservation.DifferenceElementCalculatorTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2620Test


Original:
    public class Foo { //comment
        private String a;
        private String b;
        private String c;
        private String d;
    }


Expected:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }


Actual:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }


Original:
    public class Foo { //comment        private String a;        private String b;        private String c;        private String d;    }


Expected:
    public class Foo { //comment    private String newField;        private String a;        private String b;        private String c;        private String d;    }


Actual:
    public class Foo { //comment    private String newField;        private String a;        private String b;        private String c;        private String d;    }


Original:
    public class Foo { //comment
        private String a;
        private String b;
        private String c;
        private String d;
    }


Expected:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }


Actual:
    public class Foo { //comment
    private String newField;
    
    private String a;
        private String b;
        private String c;
        private String d;
    }
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.printer.lexicalpreservation.Issue2620Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2374Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.printer.lexicalpreservation.Issue2374Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue2610Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.printer.lexicalpreservation.Issue2610Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue1766Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.lexicalpreservation.Issue1766Test
[INFO] Running com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculatorTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.printer.lexicalpreservation.LexicalDifferenceCalculatorTest
[INFO] Running com.github.javaparser.printer.lexicalpreservation.Issue1634Test
package com.wangym.test;
import lombok.Data;

class A{ }
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.lexicalpreservation.Issue1634Test
[INFO] Running com.github.javaparser.printer.ConcreteSyntaxModelAcceptanceTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.163 s - in com.github.javaparser.printer.ConcreteSyntaxModelAcceptanceTest
[INFO] Running com.github.javaparser.printer.PrettyPrintVisitorTest
[INFO] Tests run: 33, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.027 s - in com.github.javaparser.printer.PrettyPrintVisitorTest
[INFO] Running com.github.javaparser.printer.ConcreteSyntaxModelTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.printer.ConcreteSyntaxModelTest
[INFO] Running com.github.javaparser.printer.DotPrinterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.printer.DotPrinterTest
[INFO] Running com.github.javaparser.printer.XmlPrinterTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.XmlPrinterTest
[INFO] Running com.github.javaparser.printer.PrinterConfigurationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.printer.PrinterConfigurationTest
[INFO] Running com.github.javaparser.printer.DefaultPrettyPrinterTest
public class C {
    // orphan
    /*orphan*/
}

class Example {

    void foo() {
        IntStream.range(0, 10)
                 .filter(x -> x % 2 == 0)
                 .map(x -> x * IntStream.of(1, 3, 5, 1)
                                        .sum())
                 .forEach(System.out::println);
    }
}

[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.022 s - in com.github.javaparser.printer.DefaultPrettyPrinterTest
[INFO] Running com.github.javaparser.printer.YamlPrinterTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.printer.YamlPrinterTest
[INFO] Running com.github.javaparser.printer.PrettyPrinterTest
public class C {
    // orphan
    /*orphan*/
}

[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in com.github.javaparser.printer.PrettyPrinterTest
[INFO] Running com.github.javaparser.TokenTypesTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.TokenTypesTest
[INFO] Running com.github.javaparser.RangeTest
[INFO] Tests run: 27, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.RangeTest
[INFO] Running com.github.javaparser.version.Java10PostProcessorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.version.Java10PostProcessorTest
[INFO] Running com.github.javaparser.Issue2482Test
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.Issue2482Test
[INFO] Running com.github.javaparser.CommentsInserterTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.CommentsInserterTest
[INFO] Running com.github.javaparser.PositionMappingTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.PositionMappingTest
[INFO] Running com.github.javaparser.remove.NodeRemovalTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.remove.NodeRemovalTest
[INFO] Running com.github.javaparser.JavaTokenTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.JavaTokenTest
[INFO] Running com.github.javaparser.modules.ModuleDeclarationTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.github.javaparser.modules.ModuleDeclarationTest
[INFO] Running com.github.javaparser.metamodel.BaseNodeMetaModelTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.metamodel.BaseNodeMetaModelTest
[INFO] Running com.github.javaparser.metamodel.PropertyMetaModelTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.metamodel.PropertyMetaModelTest
[INFO] Running com.github.javaparser.ParseErrorRecoveryTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ParseErrorRecoveryTest
[INFO] Running com.github.javaparser.manual.BulkParseTest
New source root at "/home/gabsko/breaking-updates/javaparser-core/src/main/java"
Parsing com/github/javaparser/ParseResult.java
Parsing com/github/javaparser/Range.java
Parsing com/github/javaparser/Problem.java
Parsing com/github/javaparser/Position.java
Parsing com/github/javaparser/ParserConfiguration.java
Parsing com/github/javaparser/printer/YamlPrinter.java
Parsing com/github/javaparser/utils/CollectionStrategy.java
Parsing com/github/javaparser/utils/StringEscapeUtils.java
Parsing com/github/javaparser/printer/ConcreteSyntaxModel.java
Parsing com/github/javaparser/printer/lexicalpreservation/Removed.java
Parsing com/github/javaparser/printer/lexicalpreservation/Kept.java
Parsing com/github/javaparser/Providers.java
Parsing com/github/javaparser/printer/lexicalpreservation/DifferenceElement.java
Parsing com/github/javaparser/HasParentNode.java
Parsing com/github/javaparser/metamodel/ImportDeclarationMetaModel.java
Parsing com/github/javaparser/printer/lexicalpreservation/Reshuffled.java
Parsing com/github/javaparser/metamodel/ForStmtMetaModel.java
Parsing com/github/javaparser/JavadocParser.java
Parsing com/github/javaparser/resolution/MethodUsage.java
Parsing com/github/javaparser/metamodel/IfStmtMetaModel.java
Parsing com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculator.java
Parsing com/github/javaparser/metamodel/InstanceOfExprMetaModel.java
Parsing com/github/javaparser/utils/VisitorSet.java
Parsing com/github/javaparser/metamodel/ForEachStmtMetaModel.java
Parsing com/github/javaparser/metamodel/NameMetaModel.java
Parsing com/github/javaparser/metamodel/FieldAccessExprMetaModel.java
Parsing com/github/javaparser/metamodel/MethodCallExprMetaModel.java
Parsing com/github/javaparser/TokenTypes.java
Parsing com/github/javaparser/metamodel/CompilationUnitMetaModel.java
Parsing com/github/javaparser/metamodel/ExpressionStmtMetaModel.java
Parsing com/github/javaparser/metamodel/TryStmtMetaModel.java
Parsing com/github/javaparser/utils/ClassUtils.java
Parsing com/github/javaparser/resolution/SymbolResolver.java
Parsing com/github/javaparser/metamodel/UnknownTypeMetaModel.java
Parsing com/github/javaparser/resolution/UnsolvedSymbolException.java
Parsing com/github/javaparser/resolution/declarations/ResolvedClassDeclaration.java
Parsing com/github/javaparser/metamodel/EmptyStmtMetaModel.java
Parsing com/github/javaparser/utils/Utils.java
Parsing com/github/javaparser/metamodel/PackageDeclarationMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclaration.java
Parsing com/github/javaparser/resolution/Resolvable.java
Parsing com/github/javaparser/StaticJavaParser.java
Parsing com/github/javaparser/resolution/declarations/ResolvedMethodDeclaration.java
Parsing com/github/javaparser/metamodel/CastExprMetaModel.java
Parsing com/github/javaparser/resolution/MethodAmbiguityException.java
Parsing com/github/javaparser/resolution/declarations/ResolvedParameterDeclaration.java
Parsing com/github/javaparser/resolution/types/ResolvedVoidType.java
Parsing com/github/javaparser/metamodel/WhileStmtMetaModel.java
Parsing com/github/javaparser/resolution/types/ResolvedLambdaConstraintType.java
Parsing com/github/javaparser/resolution/declarations/ResolvedAnnotationMemberDeclaration.java
Parsing com/github/javaparser/metamodel/ConditionalExprMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedMethodLikeDeclaration.java
Parsing com/github/javaparser/metamodel/AnnotationDeclarationMetaModel.java
Parsing com/github/javaparser/resolution/types/ResolvedTypeTransformer.java
Parsing com/github/javaparser/resolution/types/ResolvedWildcard.java
Parsing com/github/javaparser/resolution/types/parametrization/ResolvedTypeParametrized.java
Parsing com/github/javaparser/metamodel/AnnotationExprMetaModel.java
Parsing com/github/javaparser/resolution/types/parametrization/ResolvedTypeParameterValueProvider.java
Parsing com/github/javaparser/printer/lexicalpreservation/TextElementIteratorsFactory.java
Parsing com/github/javaparser/metamodel/NodeMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclaration.java
Parsing com/github/javaparser/metamodel/ExpressionMetaModel.java
Parsing com/github/javaparser/resolution/types/parametrization/ResolvedTypeParametersMap.java
Parsing com/github/javaparser/metamodel/ClassOrInterfaceTypeMetaModel.java
Parsing com/github/javaparser/resolution/types/ResolvedReferenceType.java
Parsing com/github/javaparser/metamodel/EnumDeclarationMetaModel.java
Parsing com/github/javaparser/ParseStart.java
Parsing com/github/javaparser/metamodel/TypeExprMetaModel.java
Parsing com/github/javaparser/utils/Pair.java
Parsing com/github/javaparser/printer/lexicalpreservation/RemovedGroup.java
Parsing com/github/javaparser/metamodel/CharLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/PatternExprMetaModel.java
Parsing com/github/javaparser/utils/CodeGenerationUtils.java
Parsing com/github/javaparser/metamodel/ExplicitConstructorInvocationStmtMetaModel.java
Parsing com/github/javaparser/UnicodeEscapeProcessingProvider.java
Parsing com/github/javaparser/javadoc/Javadoc.java
Parsing com/github/javaparser/metamodel/NullLiteralExprMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclaration.java
Parsing com/github/javaparser/metamodel/MarkerAnnotationExprMetaModel.java
Parsing com/github/javaparser/metamodel/TypeDeclarationMetaModel.java
Parsing com/github/javaparser/metamodel/LabeledStmtMetaModel.java
Parsing com/github/javaparser/utils/PositionUtils.java
Parsing com/github/javaparser/javadoc/JavadocBlockTag.java
Parsing com/github/javaparser/metamodel/PrimitiveTypeMetaModel.java
Parsing com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinter.java
Parsing com/github/javaparser/metamodel/VariableDeclaratorMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedConstructorDeclaration.java
Parsing com/github/javaparser/metamodel/ReceiverParameterMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedFieldDeclaration.java
Parsing com/github/javaparser/metamodel/MemberValuePairMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedPatternDeclaration.java
Parsing com/github/javaparser/metamodel/ModuleProvidesDirectiveMetaModel.java
Parsing com/github/javaparser/javadoc/description/JavadocInlineTag.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeParametrizable.java
Parsing com/github/javaparser/printer/Printer.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmOrphanCommentsEnding.java
Parsing com/github/javaparser/printer/configuration/Indentation.java
Parsing com/github/javaparser/resolution/declarations/AssociableToAST.java
Parsing com/github/javaparser/metamodel/ModuleUsesDirectiveMetaModel.java
Parsing com/github/javaparser/printer/PrettyPrintVisitor.java
Parsing com/github/javaparser/resolution/declarations/ResolvedValueDeclaration.java
Parsing com/github/javaparser/metamodel/ThrowStmtMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmToken.java
Parsing com/github/javaparser/resolution/declarations/ResolvedAnnotationDeclaration.java
Parsing com/github/javaparser/metamodel/FieldDeclarationMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedEnumDeclaration.java
Parsing com/github/javaparser/LineEndingProcessingProvider.java
Parsing com/github/javaparser/metamodel/LiteralExprMetaModel.java
Parsing com/github/javaparser/printer/configuration/PrettyPrinterConfiguration.java
Parsing com/github/javaparser/utils/LineSeparator.java
Parsing com/github/javaparser/resolution/declarations/ResolvedDeclaration.java
Parsing com/github/javaparser/javadoc/description/JavadocSnippet.java
Parsing com/github/javaparser/metamodel/ModuleDirectiveMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmConditional.java
Parsing com/github/javaparser/javadoc/description/JavadocDescriptionElement.java
Parsing com/github/javaparser/metamodel/BlockStmtMetaModel.java
Parsing com/github/javaparser/javadoc/description/JavadocDescription.java
Parsing com/github/javaparser/resolution/types/ResolvedType.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeDeclaration.java
Parsing com/github/javaparser/metamodel/VarTypeMetaModel.java
Parsing com/github/javaparser/CommentsInserter.java
Parsing com/github/javaparser/ast/Node.java
Parsing com/github/javaparser/metamodel/VoidTypeMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmElement.java
Parsing com/github/javaparser/metamodel/VariableDeclarationExprMetaModel.java
Parsing com/github/javaparser/utils/VisitorMap.java
Parsing com/github/javaparser/metamodel/DoStmtMetaModel.java
Parsing com/github/javaparser/resolution/declarations/ResolvedInterfaceDeclaration.java
Parsing com/github/javaparser/resolution/types/ResolvedTypeVariable.java
Parsing com/github/javaparser/metamodel/EnumConstantDeclarationMetaModel.java
Parsing com/github/javaparser/resolution/declarations/HasAccessSpecifier.java
Parsing com/github/javaparser/metamodel/BaseNodeMetaModel.java
Parsing com/github/javaparser/printer/configuration/ConfigurationOption.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmAttribute.java
Parsing com/github/javaparser/printer/configuration/DefaultPrinterConfiguration.java
Parsing com/github/javaparser/resolution/types/ResolvedUnionType.java
Parsing com/github/javaparser/utils/ParserCollectionStrategy.java
Parsing com/github/javaparser/JavaParser.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmChar.java
Parsing com/github/javaparser/resolution/types/ResolvedArrayType.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmNone.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmTextBlock.java
Parsing com/github/javaparser/printer/configuration/PrinterConfiguration.java
Parsing com/github/javaparser/utils/Log.java
Parsing com/github/javaparser/printer/configuration/DefaultConfigurationOption.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmList.java
Parsing com/github/javaparser/resolution/types/ResolvedPrimitiveType.java
Parsing com/github/javaparser/metamodel/ArrayAccessExprMetaModel.java
Parsing com/github/javaparser/metamodel/CommentMetaModel.java
Parsing com/github/javaparser/metamodel/SingleMemberAnnotationExprMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmIndent.java
Parsing com/github/javaparser/metamodel/ModuleOpensDirectiveMetaModel.java
Parsing com/github/javaparser/utils/ProjectRoot.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmString.java
Parsing com/github/javaparser/metamodel/LambdaExprMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmComment.java
Parsing com/github/javaparser/metamodel/ModifierMetaModel.java
Parsing com/github/javaparser/utils/SourceRoot.java
Parsing com/github/javaparser/metamodel/JavaParserMetaModel.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmSequence.java
Parsing com/github/javaparser/resolution/types/ResolvedIntersectionType.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmUnindent.java
Parsing com/github/javaparser/JavaToken.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmSingleReference.java
Parsing com/github/javaparser/printer/lexicalpreservation/TextElement.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/CsmMix.java
Parsing com/github/javaparser/printer/lexicalpreservation/PhantomNodeLogic.java
Parsing com/github/javaparser/printer/concretesyntaxmodel/PrintingHelper.java
Parsing com/github/javaparser/printer/lexicalpreservation/WrappingRangeIterator.java
Parsing com/github/javaparser/printer/lexicalpreservation/TextElementMatcher.java
Parsing com/github/javaparser/printer/lexicalpreservation/Added.java
Parsing com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculator.java
Parsing com/github/javaparser/ast/DataKey.java
Parsing com/github/javaparser/ast/Generated.java
Parsing com/github/javaparser/ast/AccessSpecifier.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithTypeArguments.java
Parsing com/github/javaparser/ast/validator/Validators.java
Parsing com/github/javaparser/ast/body/FieldDeclaration.java
Parsing com/github/javaparser/ast/visitor/NoCommentEqualsVisitor.java
Parsing com/github/javaparser/ast/stmt/Statement.java
Parsing com/github/javaparser/ast/CompilationUnit.java
Parsing com/github/javaparser/ast/modules/ModuleRequiresDirective.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithTypeParameters.java
Parsing com/github/javaparser/ast/validator/SimpleValidator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithCondition.java
Parsing com/github/javaparser/ast/validator/VisitorValidator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithMembers.java
Parsing com/github/javaparser/ast/validator/ProblemReporter.java
Parsing com/github/javaparser/utils/SourceZip.java
Parsing com/github/javaparser/ast/validator/TypedValidator.java
Parsing com/github/javaparser/ast/validator/Validator.java
Parsing com/github/javaparser/ast/validator/ReservedKeywordValidator.java
Parsing com/github/javaparser/ast/validator/postprocessors/PostProcessors.java
Parsing com/github/javaparser/ast/modules/ModuleExportsDirective.java
Parsing com/github/javaparser/ast/validator/SingleNodeTypeValidator.java
Parsing com/github/javaparser/TokenRange.java
Parsing com/github/javaparser/ast/validator/postprocessors/Java10PostProcessor.java
Parsing com/github/javaparser/utils/SeparatedItemStringBuilder.java
Parsing com/github/javaparser/ast/validator/TreeVisitorValidator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java7Validator.java
Parsing com/github/javaparser/utils/VisitorList.java
Parsing com/github/javaparser/ParseProblemException.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java1_2Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java11Validator.java
Parsing com/github/javaparser/ast/body/InitializerDeclaration.java
Parsing com/github/javaparser/ast/modules/ModuleOpensDirective.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java9Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java1_4Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java15Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java8Validator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithExpression.java
Parsing com/github/javaparser/printer/lexicalpreservation/TokenTextElement.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithExtends.java
Parsing com/github/javaparser/ast/stmt/SynchronizedStmt.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java12Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java1_3Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java1_1Validator.java
Parsing com/github/javaparser/ast/body/Parameter.java
Parsing com/github/javaparser/printer/lexicalpreservation/ChildTextElement.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithThrownExceptions.java
Parsing com/github/javaparser/ast/modules/ModuleDeclaration.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java16Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java5Validator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithArguments.java
Parsing com/github/javaparser/printer/lexicalpreservation/Difference.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithStatements.java
Parsing com/github/javaparser/ast/stmt/UnparsableStmt.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java12PreviewValidator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java10Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java6Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/UnderscoreKeywordValidator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java1_0Validator.java
Parsing com/github/javaparser/ast/Modifier.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithTokenRange.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/ModifierValidator.java
Parsing com/github/javaparser/ast/stmt/IfStmt.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithVariables.java
Parsing com/github/javaparser/ast/modules/ModuleProvidesDirective.java
Parsing com/github/javaparser/ast/expr/EnclosedExpr.java
Parsing com/github/javaparser/ast/body/VariableDeclarator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithScope.java
Parsing com/github/javaparser/ast/AllFieldsConstructor.java
Parsing com/github/javaparser/ast/comments/BlockComment.java
Parsing com/github/javaparser/ast/observer/AstObserverAdapter.java
Parsing com/github/javaparser/ast/type/Type.java
Parsing com/github/javaparser/ast/expr/ArrayAccessExpr.java
Parsing com/github/javaparser/ast/NodeList.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithJavadoc.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java10PreviewValidator.java
Parsing com/github/javaparser/ast/modules/ModuleUsesDirective.java
Parsing com/github/javaparser/ast/observer/ObservableProperty.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java16PreviewValidator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java11PreviewValidator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithIdentifier.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java14PreviewValidator.java
Parsing com/github/javaparser/ast/stmt/ExplicitConstructorInvocationStmt.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java13PreviewValidator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithParameters.java
Parsing com/github/javaparser/ast/comments/CommentsCollection.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java14Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/CommonValidators.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java13Validator.java
Parsing com/github/javaparser/ast/validator/language_level_validations/Java15PreviewValidator.java
Parsing com/github/javaparser/ast/expr/SuperExpr.java
Parsing com/github/javaparser/ast/modules/ModuleDirective.java
Parsing com/github/javaparser/ast/comments/JavadocComment.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithOptionalScope.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/VarValidator.java
Parsing com/github/javaparser/ast/body/ReceiverParameter.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithBody.java
Parsing com/github/javaparser/printer/DotPrinter.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithTraversableScope.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithModifiers.java
Parsing com/github/javaparser/ast/comments/LineComment.java
Parsing com/github/javaparser/ast/expr/StringLiteralExpr.java
Parsing com/github/javaparser/ast/type/IntersectionType.java
Parsing com/github/javaparser/printer/SourcePrinter.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/NoBinaryIntegerLiteralsValidator.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithImplements.java
Parsing com/github/javaparser/ast/stmt/SwitchEntry.java
Parsing com/github/javaparser/ast/observer/PropagatingAstObserver.java
Parsing com/github/javaparser/ast/comments/Comment.java
Parsing com/github/javaparser/ast/validator/language_level_validations/chunks/NoUnderscoresInIntegerLiteralsValidator.java
Parsing com/github/javaparser/ast/visitor/GenericListVisitorAdapter.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithDeclaration.java
Parsing com/github/javaparser/ast/expr/MethodReferenceExpr.java
Parsing com/github/javaparser/ast/body/ClassOrInterfaceDeclaration.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithSimpleName.java
Parsing com/github/javaparser/ast/PackageDeclaration.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithOptionalLabel.java
Parsing com/github/javaparser/ast/observer/Observable.java
Parsing com/github/javaparser/ast/type/PrimitiveType.java
Parsing com/github/javaparser/ast/nodeTypes/SwitchNode.java
Parsing com/github/javaparser/ast/observer/AstObserver.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithRange.java
Parsing com/github/javaparser/ast/stmt/YieldStmt.java
Parsing com/github/javaparser/printer/Stringable.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithName.java
Parsing com/github/javaparser/printer/XmlPrinter.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithStaticModifier.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithProtectedModifier.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithBlockStmt.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithPrivateModifier.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithType.java
Parsing com/github/javaparser/ast/ArrayCreationLevel.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithAbstractModifier.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithPublicModifier.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithAnnotations.java
Parsing com/github/javaparser/ast/expr/ThisExpr.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithStrictfpModifier.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithFinalModifier.java
Parsing com/github/javaparser/printer/DefaultPrettyPrinterVisitor.java
Parsing com/github/javaparser/ast/stmt/WhileStmt.java
Parsing com/github/javaparser/ast/type/UnionType.java
Parsing com/github/javaparser/ast/nodeTypes/modifiers/NodeWithAccessModifiers.java
Parsing com/github/javaparser/ast/body/AnnotationDeclaration.java
Parsing com/github/javaparser/ast/ImportDeclaration.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithOptionalBlockStmt.java
Parsing com/github/javaparser/ast/expr/ArrayCreationExpr.java
Parsing com/github/javaparser/ast/stmt/ReturnStmt.java
Parsing com/github/javaparser/ast/type/TypeParameter.java
Parsing com/github/javaparser/printer/lexicalpreservation/TextElementMatchers.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/NoChange.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/ListAdditionChange.java
Parsing com/github/javaparser/printer/lexicalpreservation/NodeText.java
Parsing com/github/javaparser/ast/body/EnumDeclaration.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/Change.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/PropertyChange.java
Parsing com/github/javaparser/ast/stmt/ThrowStmt.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/ListRemovalChange.java
Parsing com/github/javaparser/ast/type/VoidType.java
Parsing com/github/javaparser/printer/lexicalpreservation/changes/ListReplacementChange.java
Parsing com/github/javaparser/ast/expr/SingleMemberAnnotationExpr.java
Parsing com/github/javaparser/ast/stmt/ForEachStmt.java
Parsing com/github/javaparser/ast/type/ArrayType.java
Parsing com/github/javaparser/ast/body/EnumConstantDeclaration.java
Parsing com/github/javaparser/ast/expr/Expression.java
Parsing com/github/javaparser/ast/body/MethodDeclaration.java
Parsing com/github/javaparser/ast/type/WildcardType.java
Parsing com/github/javaparser/ast/stmt/DoStmt.java
Parsing com/github/javaparser/ast/stmt/LocalClassDeclarationStmt.java
Parsing com/github/javaparser/ast/type/ClassOrInterfaceType.java
Parsing com/github/javaparser/ast/stmt/ContinueStmt.java
Parsing com/github/javaparser/ast/body/AnnotationMemberDeclaration.java
Parsing com/github/javaparser/ast/stmt/SwitchStmt.java
Parsing com/github/javaparser/metamodel/SuperExprMetaModel.java
Parsing com/github/javaparser/metamodel/ReturnStmtMetaModel.java
Parsing com/github/javaparser/metamodel/TypeParameterMetaModel.java
Parsing com/github/javaparser/metamodel/ConstructorDeclarationMetaModel.java
Parsing com/github/javaparser/ast/type/UnknownType.java
Parsing com/github/javaparser/metamodel/ClassOrInterfaceDeclarationMetaModel.java
Parsing com/github/javaparser/ast/stmt/AssertStmt.java
Parsing com/github/javaparser/metamodel/NameExprMetaModel.java
Parsing com/github/javaparser/ast/expr/ObjectCreationExpr.java
Parsing com/github/javaparser/metamodel/ArrayInitializerExprMetaModel.java
Parsing com/github/javaparser/metamodel/ArrayTypeMetaModel.java
Parsing com/github/javaparser/metamodel/TypeMetaModel.java
Parsing com/github/javaparser/ast/type/VarType.java
Parsing com/github/javaparser/metamodel/StringLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/DerivedProperty.java
Parsing com/github/javaparser/ast/stmt/CatchClause.java
Parsing com/github/javaparser/ast/body/BodyDeclaration.java
Parsing com/github/javaparser/metamodel/UnionTypeMetaModel.java
Parsing com/github/javaparser/metamodel/BodyDeclarationMetaModel.java
Parsing com/github/javaparser/ast/type/ReferenceType.java
Parsing com/github/javaparser/metamodel/InitializerDeclarationMetaModel.java
Parsing com/github/javaparser/metamodel/BreakStmtMetaModel.java
Parsing com/github/javaparser/metamodel/BlockCommentMetaModel.java
Parsing com/github/javaparser/metamodel/ModuleRequiresDirectiveMetaModel.java
Parsing com/github/javaparser/metamodel/ModuleDeclarationMetaModel.java
Parsing com/github/javaparser/ast/stmt/ForStmt.java
Parsing com/github/javaparser/metamodel/OptionalProperty.java
Parsing com/github/javaparser/metamodel/IntersectionTypeMetaModel.java
Parsing com/github/javaparser/metamodel/BooleanLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/ClassExprMetaModel.java
Parsing com/github/javaparser/metamodel/DoubleLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/UnparsableStmtMetaModel.java
Parsing com/github/javaparser/metamodel/LineCommentMetaModel.java
Parsing com/github/javaparser/ast/expr/LiteralStringValueExpr.java
Parsing com/github/javaparser/metamodel/SynchronizedStmtMetaModel.java
Parsing com/github/javaparser/metamodel/NormalAnnotationExprMetaModel.java
Parsing com/github/javaparser/metamodel/WildcardTypeMetaModel.java
Parsing com/github/javaparser/metamodel/AnnotationMemberDeclarationMetaModel.java
Parsing com/github/javaparser/metamodel/ObjectCreationExprMetaModel.java
Parsing com/github/javaparser/ast/stmt/EmptyStmt.java
Parsing com/github/javaparser/ast/expr/BooleanLiteralExpr.java
Parsing com/github/javaparser/metamodel/BinaryExprMetaModel.java
Parsing com/github/javaparser/ast/body/TypeDeclaration.java
Parsing com/github/javaparser/metamodel/AssertStmtMetaModel.java
Parsing com/github/javaparser/metamodel/AssignExprMetaModel.java
Parsing com/github/javaparser/metamodel/SwitchExprMetaModel.java
Parsing com/github/javaparser/ast/stmt/ExpressionStmt.java
Parsing com/github/javaparser/metamodel/ReferenceTypeMetaModel.java
Parsing com/github/javaparser/metamodel/ParameterMetaModel.java
Parsing com/github/javaparser/ast/expr/FieldAccessExpr.java
Parsing com/github/javaparser/metamodel/InternalProperty.java
Parsing com/github/javaparser/metamodel/EnclosedExprMetaModel.java
Parsing com/github/javaparser/metamodel/StatementMetaModel.java
Parsing com/github/javaparser/ast/stmt/BreakStmt.java
Parsing com/github/javaparser/metamodel/IntegerLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/MethodDeclarationMetaModel.java
Parsing com/github/javaparser/metamodel/ArrayCreationExprMetaModel.java
Parsing com/github/javaparser/metamodel/SwitchStmtMetaModel.java
Parsing com/github/javaparser/metamodel/PropertyMetaModel.java
Parsing com/github/javaparser/ast/visitor/Visitable.java
Parsing com/github/javaparser/ast/stmt/LabeledStmt.java
Parsing com/github/javaparser/ast/visitor/HashCodeVisitor.java
Parsing com/github/javaparser/ast/body/ConstructorDeclaration.java
Parsing com/github/javaparser/ast/expr/UnaryExpr.java
Parsing com/github/javaparser/ast/stmt/TryStmt.java
Parsing com/github/javaparser/metamodel/CatchClauseMetaModel.java
Parsing com/github/javaparser/metamodel/SimpleNameMetaModel.java
Parsing com/github/javaparser/metamodel/CallableDeclarationMetaModel.java
Parsing com/github/javaparser/printer/PrettyPrinter.java
Parsing com/github/javaparser/metamodel/YieldStmtMetaModel.java
Parsing com/github/javaparser/ast/expr/SwitchExpr.java
Parsing com/github/javaparser/metamodel/LiteralStringValueExprMetaModel.java
Parsing com/github/javaparser/metamodel/ArrayCreationLevelMetaModel.java
Parsing com/github/javaparser/printer/DefaultPrettyPrinter.java
Parsing com/github/javaparser/ast/body/CallableDeclaration.java
Parsing com/github/javaparser/metamodel/LongLiteralExprMetaModel.java
Parsing com/github/javaparser/metamodel/NonEmptyProperty.java
Parsing com/github/javaparser/metamodel/ThisExprMetaModel.java
Parsing com/github/javaparser/metamodel/TextBlockLiteralExprMetaModel.java
Parsing com/github/javaparser/ast/stmt/BlockStmt.java
Parsing com/github/javaparser/metamodel/SwitchEntryMetaModel.java
Parsing com/github/javaparser/metamodel/ContinueStmtMetaModel.java
Parsing com/github/javaparser/ast/expr/ClassExpr.java
Parsing com/github/javaparser/metamodel/UnaryExprMetaModel.java
Parsing com/github/javaparser/metamodel/JavadocCommentMetaModel.java
Parsing com/github/javaparser/metamodel/LocalClassDeclarationStmtMetaModel.java
Parsing com/github/javaparser/metamodel/MethodReferenceExprMetaModel.java
Parsing com/github/javaparser/metamodel/ModuleExportsDirectiveMetaModel.java
Parsing com/github/javaparser/ast/expr/Name.java
Parsing com/github/javaparser/ast/expr/NormalAnnotationExpr.java
Parsing com/github/javaparser/ast/expr/AssignExpr.java
Parsing com/github/javaparser/ast/expr/BinaryExpr.java
Parsing com/github/javaparser/ast/visitor/VoidVisitorAdapter.java
Parsing com/github/javaparser/ast/expr/DoubleLiteralExpr.java
Parsing com/github/javaparser/ast/expr/TypeExpr.java
Parsing com/github/javaparser/ast/expr/NameExpr.java
Parsing com/github/javaparser/ast/expr/NullLiteralExpr.java
Parsing com/github/javaparser/ast/expr/PatternExpr.java
Parsing com/github/javaparser/ast/expr/VariableDeclarationExpr.java
Parsing com/github/javaparser/ast/visitor/GenericVisitorAdapter.java
Parsing com/github/javaparser/ast/expr/CharLiteralExpr.java
Parsing com/github/javaparser/ast/expr/MarkerAnnotationExpr.java
Parsing com/github/javaparser/ast/expr/TextBlockLiteralExpr.java
Parsing com/github/javaparser/ast/expr/LiteralExpr.java
Parsing com/github/javaparser/ast/expr/SimpleName.java
Parsing com/github/javaparser/ast/expr/LongLiteralExpr.java
Parsing com/github/javaparser/ast/expr/ArrayInitializerExpr.java
Parsing com/github/javaparser/ast/expr/AnnotationExpr.java
Parsing com/github/javaparser/ast/expr/ConditionalExpr.java
Parsing com/github/javaparser/ast/expr/InstanceOfExpr.java
Parsing com/github/javaparser/ast/expr/CastExpr.java
Parsing com/github/javaparser/ast/expr/IntegerLiteralExpr.java
Parsing com/github/javaparser/ast/expr/LambdaExpr.java
Parsing com/github/javaparser/ast/visitor/ObjectIdentityEqualsVisitor.java
Parsing com/github/javaparser/ast/expr/MemberValuePair.java
Parsing com/github/javaparser/ast/expr/MethodCallExpr.java
Parsing com/github/javaparser/ast/visitor/CloneVisitor.java
Parsing com/github/javaparser/ast/visitor/GenericVisitorWithDefaults.java
Parsing com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitor.java
Parsing com/github/javaparser/ast/visitor/ModifierVisitor.java
Parsing com/github/javaparser/ast/visitor/TreeVisitor.java
Parsing com/github/javaparser/ast/visitor/GenericVisitor.java
Parsing com/github/javaparser/ast/visitor/VoidVisitor.java
Parsing com/github/javaparser/ast/visitor/NoCommentHashCodeVisitor.java
Parsing com/github/javaparser/ast/visitor/EqualsVisitor.java
Parsing com/github/javaparser/ast/visitor/VoidVisitorWithDefaults.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_core_src_main_java.txt
New source root at "/home/gabsko/breaking-updates/javaparser-core-testing/src/test/java"
Parsing com/github/javaparser/Issue1017Test.java
Parsing com/github/javaparser/ProvidersTest.java
Parsing com/github/javaparser/JavadocParserTest.java
Parsing com/github/javaparser/TokenRangeTest.java
Parsing com/github/javaparser/utils/LineSeparatorTest.java
Parsing com/github/javaparser/printer/PrinterConfigurationTest.java
Parsing com/github/javaparser/RangeTest.java
Parsing com/github/javaparser/printer/PrettyPrintVisitorTest.java
Parsing com/github/javaparser/utils/VisitorListTest.java
Parsing com/github/javaparser/utils/PairTest.java
Parsing com/github/javaparser/utils/LogTest.java
Parsing com/github/javaparser/PositionMappingTest.java
Parsing com/github/javaparser/version/Java10PostProcessorTest.java
Parsing com/github/javaparser/utils/UtilsTest.java
Parsing com/github/javaparser/printer/ConcreteSyntaxModelAcceptanceTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/AnnotationSpaceTest.java
Parsing com/github/javaparser/printer/PrettyPrinterTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue1766Test.java
Parsing com/github/javaparser/JavaTokenTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2340Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/ArrayCreationLevelTransformationsTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/MethodDeclarationTransformationsTest.java
Parsing com/github/javaparser/CommentsInserterTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2393Test.java
Parsing com/github/javaparser/utils/TestParser.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2620Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/CompilationUnitTransformationsTest.java
Parsing com/github/javaparser/utils/TestUtils.java
Parsing com/github/javaparser/ProblemTest.java
Parsing com/github/javaparser/Issue2482Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/AbstractLexicalPreservingTest.java
Parsing com/github/javaparser/TokenTypesTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2610Test.java
Parsing com/github/javaparser/JavaParserTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/TransformationsTest.java
Parsing com/github/javaparser/printer/YamlPrinterTest.java
Parsing com/github/javaparser/printer/JsonPrinterTest.java
Parsing com/github/javaparser/printer/DotPrinterTest.java
Parsing com/github/javaparser/utils/CodeGenerationUtilsTest.java
Parsing com/github/javaparser/utils/SourceRootTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/AnnotationMemberDeclarationTransformationsTest.java
Parsing com/github/javaparser/printer/DefaultPrettyPrinterTest.java
Parsing com/github/javaparser/utils/ParserCollectionStrategyTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2806Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ConstructorDeclarationTransformationsTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/LexicalDifferenceCalculatorTest.java
Parsing com/github/javaparser/LineSeparatorProcessorTest.java
Parsing com/github/javaparser/modules/ModuleDeclarationTest.java
Parsing com/github/javaparser/remove/NodeRemovalTest.java
Parsing com/github/javaparser/utils/SourceZipTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/StatementTransformationsTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/FieldDeclarationTransformationsTest.java
Parsing com/github/javaparser/utils/VisitorMapTest.java
Parsing com/github/javaparser/ParseErrorRecoveryTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/EnumDeclarationTransformationsTest.java
Parsing com/github/javaparser/utils/PositionUtilsTest.java
Parsing com/github/javaparser/metamodel/PropertyMetaModelTest.java
Parsing com/github/javaparser/GeneratedJavaParserTokenManagerTest.java
Parsing com/github/javaparser/manual/BulkParseTest.java
Parsing com/github/javaparser/ParserConfigurationTest.java
Parsing com/github/javaparser/javadoc/JavadocExtractorTest.java
Parsing com/github/javaparser/issues/Issue2627Test.java
Parsing com/github/javaparser/printer/TestVisitor.java
Parsing com/github/javaparser/metamodel/BaseNodeMetaModelTest.java
Parsing com/github/javaparser/printer/ConcreteSyntaxModelTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/OperatorTransformationsTest.java
Parsing com/github/javaparser/javadoc/JavadocTest.java
Parsing com/github/javaparser/UnicodeEscapeProcessingProviderTest.java
Parsing com/github/javaparser/builders/ClassOrInterfaceDeclarationBuildersTest.java
Parsing com/github/javaparser/ast/NodeListTest.java
Parsing com/github/javaparser/ast/imports/ImportDeclarationTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/EnumConstantDeclarationTransformationsTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/AnnotationDeclarationTransformationsTest.java
Parsing com/github/javaparser/builders/CompilationUnitBuildersTest.java
Parsing com/github/javaparser/printer/XmlPrinterTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/ClassOrInterfaceDeclarationTransformationsTest.java
Parsing com/github/javaparser/javadoc/description/JavadocInlineTagTest.java
Parsing com/github/javaparser/utils/VisitorSetTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/transformations/ast/body/InitializerDeclarationTransformationsTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/DifferenceElementCalculatorTest.java
Parsing com/github/javaparser/builders/FieldDeclarationBuildersTest.java
Parsing com/github/javaparser/ast/ListObservationTest.java
Parsing com/github/javaparser/builders/NodeWithParametersBuildersTest.java
Parsing com/github/javaparser/builders/NodeWithMembersBuildersTest.java
Parsing com/github/javaparser/ast/ParseResultTest.java
Parsing com/github/javaparser/ast/ReplaceNodeTest.java
Parsing com/github/javaparser/ast/FindNodeTest.java
Parsing com/github/javaparser/ast/DataKeyTest.java
Parsing com/github/javaparser/ast/stmt/YieldStmtTest.java
Parsing com/github/javaparser/ast/validator/Java11ValidatorTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithTraversableScopeTest.java
Parsing com/github/javaparser/ast/validator/Java9ValidatorTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithJavadocTest.java
Parsing com/github/javaparser/ast/stmt/SwitchStmtTest.java
Parsing com/github/javaparser/ast/WalkFindTest.java
Parsing com/github/javaparser/ast/body/AnnotationMemberDeclarationTest.java
Parsing com/github/javaparser/ast/visitor/TreeVisitorTest.java
Parsing com/github/javaparser/ast/stmt/IfElseStmtTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithOptionalScopeTest.java
Parsing com/github/javaparser/ast/body/MethodDeclarationTest.java
Parsing com/github/javaparser/ast/validator/Java6ValidatorTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithModifiersTest.java
Parsing com/github/javaparser/ast/stmt/TryStmtTest.java
Parsing com/github/javaparser/ast/CompilationUnitTest.java
Parsing com/github/javaparser/ast/validator/Java1_4ValidatorTest.java
Parsing com/github/javaparser/ast/body/ClassOrInterfaceDeclarationTest.java
Parsing com/github/javaparser/ast/validator/Java1_3ValidatorTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithVariablesTest.java
Parsing com/github/javaparser/ast/visitor/NoCommentEqualsVisitorTest.java
Parsing com/github/javaparser/builders/NodeWithAnnotationsBuildersTest.java
Parsing com/github/javaparser/ast/validator/Java1_0ValidatorTest.java
Parsing com/github/javaparser/ast/body/FieldDeclarationTest.java
Parsing com/github/javaparser/ast/ObservationTest.java
Parsing com/github/javaparser/ast/stmt/BreakStmtTest.java
Parsing com/github/javaparser/ast/visitor/ModifierVisitorTest.java
Parsing com/github/javaparser/ast/stmt/ForEachStmtTest.java
Parsing com/github/javaparser/ast/body/ConstructorDeclarationTest.java
Parsing com/github/javaparser/builders/NodeWithThrownExceptionsBuildersTest.java
Parsing com/github/javaparser/ast/nodeTypes/NodeWithBodyTest.java
Parsing com/github/javaparser/ast/body/AnnotationDeclarationTest.java
Parsing com/github/javaparser/ast/body/TypeDeclarationTest.java
Parsing com/github/javaparser/builders/EnumDeclarationBuildersTest.java
Parsing com/github/javaparser/ast/validator/Java10ValidatorTest.java
Parsing com/github/javaparser/ast/visitor/GenericVisitorWithDefaultsTest.java
Parsing com/github/javaparser/ast/validator/Java7ValidatorTest.java
Parsing com/github/javaparser/ast/NodeTest.java
Parsing com/github/javaparser/ast/expr/SimpleNameTest.java
Parsing com/github/javaparser/ast/comments/CommentTest.java
Parsing com/github/javaparser/ast/observer/PropagatingAstObserverTest.java
Parsing com/github/javaparser/ast/expr/StringLiteralExprTest.java
Parsing com/github/javaparser/ast/expr/MethodCallExprTest.java
Parsing com/github/javaparser/ast/validator/Java13ValidatorTest.java
Parsing com/github/javaparser/ast/expr/LiteralStringValueExprTest.java
Parsing com/github/javaparser/ast/validator/Java5ValidatorTest.java
Parsing com/github/javaparser/ast/AncestorDescendantTests.java
Parsing com/github/javaparser/ast/type/ArrayTypeTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue1467Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue1634Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2374Test.java
Parsing com/github/javaparser/ast/validator/Java8ValidatorTest.java
Parsing com/github/javaparser/ast/NodePositionTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/PrettyPrinterIssue2351Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2592Test.java
Parsing com/github/javaparser/ast/validator/Java12ValidatorTest.java
Parsing com/github/javaparser/ast/expr/SuperExprTest.java
Parsing com/github/javaparser/ast/validator/Java1_2ValidatorTest.java
Parsing com/github/javaparser/ast/type/TypeTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/LexicalPreservingPrinterTest.java
Parsing com/github/javaparser/ast/expr/ObjectCreationExprTest.java
Parsing com/github/javaparser/ast/expr/CharLiteralExprTest.java
Parsing com/github/javaparser/ast/expr/LambdaExprTest.java
Parsing com/github/javaparser/ast/visitor/CloneVisitorTest.java
Parsing com/github/javaparser/ast/expr/MethodReferenceExprTest.java
Parsing com/github/javaparser/ast/validator/Java1_1ValidatorTest.java
Parsing com/github/javaparser/ast/visitor/ObjectIdentityHashCodeVisitorTest.java
Parsing com/github/javaparser/ast/expr/DoubleLiteralExprTest.java
Parsing com/github/javaparser/ast/expr/NameTest.java
Parsing com/github/javaparser/ast/expr/SwitchExprTest.java
Parsing com/github/javaparser/ast/expr/TextBlockLiteralExprTest.java
Parsing com/github/javaparser/ast/expr/BinaryExprTest.java
Parsing com/github/javaparser/ast/expr/ThisExprTest.java
Parsing com/github/javaparser/ast/expr/AssignExprTest.java
Parsing com/github/javaparser/ast/expr/InstanceOfExprTest.java
Parsing com/github/javaparser/ast/visitor/NoCommentHashCodeVisitorTest.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue2290Test.java
Parsing com/github/javaparser/printer/lexicalpreservation/Issue1793Test.java
Parsing com/github/javaparser/ast/visitor/VoidVisitorTest.java
Parsing com/github/javaparser/ast/visitor/VoidVisitorWithDefaultsTest.java
Parsing com/github/javaparser/ast/visitor/HashCodeVisitorTest.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_core_testing_src_test_java.txt
New source root at "/home/gabsko/breaking-updates/javaparser-core-generators/src/main/java"
Parsing com/github/javaparser/generator/Generator.java
Parsing com/github/javaparser/generator/VisitorGenerator.java
Parsing com/github/javaparser/generator/core/utils/CodeUtils.java
Parsing com/github/javaparser/generator/core/node/CloneGenerator.java
Parsing com/github/javaparser/generator/core/CoreGenerator.java
Parsing com/github/javaparser/generator/core/visitor/GenericListVisitorAdapterGenerator.java
Parsing com/github/javaparser/generator/core/other/GrammarLetterGenerator.java
Parsing com/github/javaparser/generator/core/node/PropertyGenerator.java
Parsing com/github/javaparser/generator/core/visitor/NoCommentEqualsVisitorGenerator.java
Parsing com/github/javaparser/generator/NodeGenerator.java
Parsing com/github/javaparser/generator/core/other/TokenKindGenerator.java
Parsing com/github/javaparser/generator/core/visitor/HashCodeVisitorGenerator.java
Parsing com/github/javaparser/generator/core/visitor/VoidVisitorAdapterGenerator.java
Parsing com/github/javaparser/generator/core/other/BndGenerator.java
Parsing com/github/javaparser/generator/core/visitor/ObjectIdentityHashCodeVisitorGenerator.java
Parsing com/github/javaparser/generator/core/node/AcceptGenerator.java
Parsing com/github/javaparser/generator/core/visitor/ObjectIdentityEqualsVisitorGenerator.java
Parsing com/github/javaparser/generator/core/node/TypeCastingGenerator.java
Parsing com/github/javaparser/generator/core/visitor/ModifierVisitorGenerator.java
Parsing com/github/javaparser/generator/core/visitor/GenericVisitorAdapterGenerator.java
Parsing com/github/javaparser/generator/core/node/RemoveMethodGenerator.java
Parsing com/github/javaparser/generator/core/visitor/GenericVisitorGenerator.java
Parsing com/github/javaparser/generator/core/visitor/GenericVisitorWithDefaultsGenerator.java
Parsing com/github/javaparser/generator/core/node/ReplaceMethodGenerator.java
Parsing com/github/javaparser/generator/core/visitor/VoidVisitorWithDefaultsGenerator.java
Parsing com/github/javaparser/generator/core/node/MainConstructorGenerator.java
Parsing com/github/javaparser/generator/core/visitor/EqualsVisitorGenerator.java
Parsing com/github/javaparser/generator/core/node/GetMetaModelGenerator.java
Parsing com/github/javaparser/generator/core/visitor/VoidVisitorGenerator.java
Parsing com/github/javaparser/generator/core/node/NodeModifierGenerator.java
Parsing com/github/javaparser/generator/core/visitor/NoCommentHashCodeVisitorGenerator.java
Parsing com/github/javaparser/generator/core/visitor/CloneVisitorGenerator.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_core_generators_src_main_java.txt
New source root at "/home/gabsko/breaking-updates/javaparser-core-metamodel-generator/src/main/java"
Parsing com/github/javaparser/generator/AbstractGenerator.java
Parsing com/github/javaparser/generator/metamodel/MetaModelGenerator.java
Parsing com/github/javaparser/generator/metamodel/InitializePropertyMetaModelsStatementsGenerator.java
Parsing com/github/javaparser/generator/metamodel/NodeMetaModelGenerator.java
Parsing com/github/javaparser/generator/metamodel/InitializeConstructorParametersStatementsGenerator.java
Parsing com/github/javaparser/generator/metamodel/AstTypeAnalysis.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_core_metamodel_generator_src_main_java.txt
New source root at "/home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/java"
Parsing com/github/javaparser/symbolsolver/JavaSymbolSolver.java
Parsing com/github/javaparser/symbolsolver/model/resolution/TypeSolver.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeImpl.java
Parsing com/github/javaparser/symbolsolver/model/resolution/SymbolReference.java
Parsing com/github/javaparser/symbolsolver/model/resolution/Value.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/LazyType.java
Parsing com/github/javaparser/symbolsolver/utils/SymbolSolverCollectionStrategy.java
Parsing com/github/javaparser/symbolsolver/javaparser/package-info.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeDeclarationAdapter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/LambdaArgumentTypePlaceholder.java
Parsing com/github/javaparser/symbolsolver/javaparser/Navigator.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/VariableSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/logic/MethodResolutionCapability.java
Parsing com/github/javaparser/symbolsolver/SourceFileInfoExtractor.java
Parsing com/github/javaparser/symbolsolver/declarations/common/MethodDeclarationCommonLogic.java
Parsing com/github/javaparser/symbolsolver/core/resolution/TypeVariableResolutionCapability.java
Parsing com/github/javaparser/symbolsolver/logic/FunctionalInterfaceLogic.java
Parsing com/github/javaparser/symbolsolver/core/resolution/MethodUsageResolutionCapability.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFacade.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ClassOrInterfaceDeclarationContext.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/NullType.java
Parsing com/github/javaparser/symbolsolver/core/resolution/Context.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/AbstractSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistFieldDeclaration.java
Parsing com/github/javaparser/symbolsolver/utils/FileUtils.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/NoSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/logic/InferenceContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/ParameterSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumConstantDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/PatternSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarators/FieldSymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/AbstractJavaParserContext.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodResolutionLogic.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionPatternDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/Instantiation.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolver.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserParameterDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolver.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ConstraintFormula.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolver.java
Parsing com/github/javaparser/symbolsolver/logic/InferenceVariableType.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/Substitution.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistConstructorDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionFieldDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ConstraintFormulaSet.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolver.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/TryWithResourceContext.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodResolutionLogic.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/Bound.java
Parsing com/github/javaparser/symbolsolver/logic/AbstractClassDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/ClassLoaderTypeSolver.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ExpressionHelper.java
Parsing com/github/javaparser/symbolsolver/logic/AbstractTypeDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/BoundSet.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBound.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/EnumDeclarationContext.java
Parsing com/github/javaparser/symbolsolver/logic/ObjectProvider.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolver.java
Parsing com/github/javaparser/symbolsolver/logic/ConfilictingGenericTypesException.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/BinaryExprContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/FalseBound.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/ThrowsBound.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserFieldDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/CapturesBound.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SameAsBound.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolver.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationMemberDeclaration.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeAdapter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ContextHelper.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ObjectCreationContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/package-info.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/DefaultVisitorAdapter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/AnonymousClassDeclarationContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserConstructorDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclaration.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserSymbolDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/CatchClauseContext.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistFactory.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionConstructorDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ForEachStatementContext.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolDeclarator.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolSolver.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/LambdaExprContext.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/comparators/ParameterComparator.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserMethodDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/comparators/ClassComparator.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/comparators/MethodComparator.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassAdapter.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistUtils.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/AstResolutionUtils.java
Parsing com/github/javaparser/symbolsolver/resolution/ConstructorResolutionLogic.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameLogic.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/JavaParserFactory.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/TypeInferenceCache.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/VariableDeclaratorContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeParameter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/SwitchEntryContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/InferenceVariableSubstitution.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationMemberDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/TypeInference.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/package-info.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/JavaParserTypeDeclarationAdapter.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumConstantDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionTypeParameter.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumConstantDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/TypeExtractor.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ConstructorContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/CompilationUnitContext.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationMemberDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionFactory.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/DefaultConstructorDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserPatternDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclaration.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/package-info.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/MyObjectProvider.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ControlFlowLogic.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodReferenceExprContext.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameRole.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameCategory.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/AbstractMethodLikeDeclarationContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/InstantiationSet.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/MethodType.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/TypeCompatibleWithType.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeVariableDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/UnaryExprContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ProperLowerBound.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/IfStatementContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/TypeHelper.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclaration.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/TypeSameAsType.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/AnnotationDeclarationContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserVariableDeclaration.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/StatementContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/ExpressionCompatibleWithType.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/InferenceVariable.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/VariableDeclarationExprContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/ProperUpperBound.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/MethodCallExprContext.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/LambdaThrowsCompatibleWithType.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/TypeContainedByType.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/MethodReferenceThrowsCompatibleWithType.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/TypeSubtypeOfType.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/BlockStmtContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/InstanceOfExprContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/ForStatementContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/EnclosedExprContext.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/FieldAccessContext.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_symbol_solver_core_src_main_java.txt
New source root at "/home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/test/java"
Parsing com/github/javaparser/symbolsolver/Issue1769Test.java
Parsing com/github/javaparser/SlowTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeParametrizableTest.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/PrimitiveTypeTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2362Test.java
Parsing com/github/javaparser/resolution/declarations/ResolvedTypeParameterDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedMethodLikeDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedEnumDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2953Test.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/AssociableToASTTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedPatternDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedConstructorDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedReferenceTypeDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue343Test.java
Parsing com/github/javaparser/resolution/declarations/ResolvedEnumConstantDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/Issue257Test.java
Parsing com/github/javaparser/symbolsolver/Issue314Test.java
Parsing com/github/javaparser/resolution/declarations/ResolvedClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationMemberDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue113Test.java
Parsing com/github/javaparser/resolution/declarations/ResolvedValueDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistMethodDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedParameterDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1456Test.java
Parsing com/github/javaparser/resolution/declarations/ResolvedAnnotationMemberDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedAnnotationDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue300Test.java
Parsing com/github/javaparser/resolution/declarations/HasAccessSpecifierTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedMethodDeclarationTest.java
Parsing com/github/javaparser/resolution/declarations/ResolvedFieldDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumConstantDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue3028Test.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/WildcardUsageTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistTypeParameterDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue84Test.java
Parsing com/github/javaparser/symbolsolver/Issue1479Test.java
Parsing com/github/javaparser/symbolsolver/Issue1599Test.java
Parsing com/github/javaparser/symbolsolver/Issue2289Test.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistInterfaceDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/ReferenceTypeTest.java
Parsing com/github/javaparser/symbolsolver/Issue2035Test.java
Parsing com/github/javaparser/symbolsolver/utils/LeanParserConfiguration.java
Parsing com/github/javaparser/symbolsolver/utils/SymbolSolverCollectionStrategyTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistAnnotationDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1668Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/ConvertToUsageTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1713Test.java
Parsing com/github/javaparser/symbolsolver/SolveMethodDeclaredInEnumTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/contexts/MultiCatchMethodCallExprTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/DifferentiateDotExpressionTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserFieldDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue200Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserEnumDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue546Test.java
Parsing com/github/javaparser/symbolsolver/Issue2083Test.java
Parsing com/github/javaparser/symbolsolver/Issue1518Test.java
Parsing com/github/javaparser/symbolsolver/Issue1868Test.java
Parsing com/github/javaparser/symbolsolver/Issue1480Test.java
Parsing com/github/javaparser/symbolsolver/Issue2406Test.java
Parsing com/github/javaparser/symbolsolver/Issue366Test.java
Parsing com/github/javaparser/symbolsolver/core/resolution/MethodUsageResolutionCapabilityTest.java
Parsing com/github/javaparser/symbolsolver/core/resolution/TypeVariableResolutionCapabilityTest.java
Parsing com/github/javaparser/symbolsolver/Issue2162Test.java
Parsing com/github/javaparser/symbolsolver/FindingAllFieldsTest.java
Parsing com/github/javaparser/symbolsolver/Issue1526Test.java
Parsing com/github/javaparser/symbolsolver/Issue2943Test.java
Parsing com/github/javaparser/symbolsolver/Issue1511Test.java
Parsing com/github/javaparser/symbolsolver/logic/AbstractClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistConstructorDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/logic/MethodResolutionCapabilityTest.java
Parsing com/github/javaparser/symbolsolver/logic/AbstractTypeDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javassistmodel/JavassistParameterDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1945Test.java
Parsing com/github/javaparser/symbolsolver/logic/FunctionInterfaceLogicTest.java
Parsing com/github/javaparser/symbolsolver/Issue1370Test.java
Parsing com/github/javaparser/symbolsolver/logic/InferenceContextTest.java
Parsing com/github/javaparser/symbolsolver/Issue1726Test.java
Parsing com/github/javaparser/symbolsolver/Issue2987Test.java
Parsing com/github/javaparser/symbolsolver/Issue3030Test.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/ArrayTypeTest.java
Parsing com/github/javaparser/symbolsolver/Issue2740Test.java
Parsing com/github/javaparser/symbolsolver/Issue2132Test.java
Parsing com/github/javaparser/symbolsolver/Issue1774Test.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/NullTypeTest.java
Parsing com/github/javaparser/symbolsolver/Issue1757Test.java
Parsing com/github/javaparser/symbolsolver/PullRequest2398Test.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/VoidTypeTest.java
Parsing com/github/javaparser/symbolsolver/Issue2489Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserParameterDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2284Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeVariableDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1946Test.java
Parsing com/github/javaparser/symbolsolver/model/typesystem/TypeVariableUsageTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnonymousClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/JavaParserAPIIntegrationTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserTypeParameterTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserPatternDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserAnnotationDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2062Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/JavaSymbolSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue1485Test.java
Parsing com/github/javaparser/symbolsolver/Issue2878Test.java
Parsing com/github/javaparser/symbolsolver/Issue116Test.java
Parsing com/github/javaparser/symbolsolver/resolution/UnknownMethodsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SameAsBoundTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/constraintformulas/ConstraintFormulaTest.java
Parsing com/github/javaparser/symbolsolver/Issue2781Test.java
Parsing com/github/javaparser/symbolsolver/resolution/VariadicResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typeinference/bounds/SubtypeOfBoundTest.java
Parsing com/github/javaparser/symbolsolver/Issue1364Test.java
Parsing com/github/javaparser/symbolsolver/Issue347Test.java
Parsing com/github/javaparser/symbolsolver/Issue276Test.java
Parsing com/github/javaparser/symbolsolver/Issue1817Test.java
Parsing com/github/javaparser/symbolsolver/resolution/InternalClassInInterfaceTest.java
Parsing com/github/javaparser/symbolsolver/Issue2764Test.java
Parsing com/github/javaparser/symbolsolver/Issue186Test.java
Parsing com/github/javaparser/symbolsolver/Issue3087Test.java
Parsing com/github/javaparser/symbolsolver/resolution/ConditionalExprTest.java
Parsing com/github/javaparser/symbolsolver/Issue2823Test.java
Parsing com/github/javaparser/symbolsolver/AbstractSymbolResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue3083Test.java
Parsing com/github/javaparser/symbolsolver/Issue1814Test.java
Parsing com/github/javaparser/symbolsolver/resolution/FieldAccessExprResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/VarTypeTest.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/EnumDeclarationContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/declarations/JavaParserTypeParameterResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue185Test.java
Parsing com/github/javaparser/symbolsolver/resolution/CompilationUnitContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/ClassLoaderTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue232Test.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/AarTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue2367Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserMethodDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodCallExprContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserInterfaceDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2995Test.java
Parsing com/github/javaparser/symbolsolver/resolution/ContextTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue3024Test.java
Parsing com/github/javaparser/symbolsolver/Issue2236Test.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionParameterDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue2477Test.java
Parsing com/github/javaparser/symbolsolver/Issue156Test.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/JavaParserTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue228Test.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionClassDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue235Test.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/FieldAccessContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/ClassOrInterfaceDeclarationContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue128Test.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/MemoryTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue1491Test.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/JarTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue2909Test.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/ReflectionTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/resolution/typesolvers/AbstractTypeSolverTest.java
Parsing com/github/javaparser/symbolsolver/Issue241Test.java
Parsing com/github/javaparser/symbolsolver/Issue2602Test.java
Parsing com/github/javaparser/symbolsolver/Issue2044Test.java
Parsing com/github/javaparser/symbolsolver/Issue2595Test.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/CompilationUnitContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue251Test.java
Parsing com/github/javaparser/symbolsolver/Issue2951Test.java
Parsing com/github/javaparser/symbolsolver/testingclasses/UtilityClass.java
Parsing com/github/javaparser/symbolsolver/testingclasses/SomeClass.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/MethodContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue144Test.java
Parsing com/github/javaparser/symbolsolver/resolution/javaparser/contexts/LambdaExprContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/Issue18Test.java
Parsing com/github/javaparser/symbolsolver/javaparsermodel/declarations/JavaParserVariableDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/Issue1574Test.java
Parsing com/github/javaparser/symbolsolver/Issue2065Test.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionMethodDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionEnumDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionTestObject.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionInterfaceDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/reflectionmodel/ReflectionAnnotationDeclarationTest.java
Parsing com/github/javaparser/symbolsolver/resolution/ReferenceTypeResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/GenericsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/QualifiedNameResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AbstractResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/TypeInClassWithAnnotationAncestorTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserTest.java
Parsing com/github/javaparser/symbolsolver/resolution/LambdaResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/PolyExpressionResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/VariableResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/DescriptorTest.java
Parsing com/github/javaparser/symbolsolver/resolution/DefaultPackageTest.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodReferenceResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/ImplementedOrExtendedTypeResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/ArrayExprTest.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodsResolutionLogicTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnnotationsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnalyseNewJavaParserHelpersTest.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistClassTest.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolSolverTest.java
Parsing com/github/javaparser/symbolsolver/resolution/EnumLiteralsInAnnotatedClassTest.java
Parsing com/github/javaparser/symbolsolver/resolution/reflectionmodel/SymbolResolutionResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodsResolutionWithJavassistTest.java
Parsing com/github/javaparser/symbolsolver/resolution/TypeResolutionWithSameNameTest.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/AbstractNameLogicTest.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameLogicDisambiguationTest.java
Parsing com/github/javaparser/symbolsolver/resolution/MethodLikeSignaturesTest.java
Parsing com/github/javaparser/symbolsolver/resolution/NotQuiteCyclicParentTest.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistEnumTest.java
Parsing com/github/javaparser/symbolsolver/resolution/StatementContextResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnalyseJavaSymbolSolver060Test.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameLogicTestingJss060Test.java
Parsing com/github/javaparser/symbolsolver/resolution/EnumResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/ExprResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/naming/NameLogicTest.java
Parsing com/github/javaparser/symbolsolver/resolution/InstanceOfTest.java
Parsing com/github/javaparser/symbolsolver/resolution/ConstructorsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnonymousClassesResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/AnalyseJavaParserTest.java
Parsing com/github/javaparser/symbolsolver/resolution/FieldsResolutionTest.java
Parsing com/github/javaparser/symbolsolver/resolution/SymbolSolverWithJavassistInterfaceTest.java
Parsing com/github/javaparser/symbolsolver/resolution/types/ResolvedPrimitiveTypeTest.java
Parsing com/github/javaparser/symbolsolver/resolution/JavaParserFacadeResolutionTest.java
Writing results...
Results are in /home/gabsko/breaking-updates/javaparser-core-testing/src/test/resources/com/github/javaparser/bulk_test_results/javaparser_test_results_javaparser_symbol_solver_testing_src_test_java.txt
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.884 s - in com.github.javaparser.manual.BulkParseTest
[INFO] Running com.github.javaparser.JavadocParserTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.JavadocParserTest
[INFO] Running com.github.javaparser.Issue1017Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.Issue1017Test
[INFO] Running com.github.javaparser.issues.Issue2627Test
range = (line 796,col 3)-(line 799,col 3)
range = (line 911,col 3)-(line 914,col 3)
range = (line 3686,col 3)-(line 3689,col 3)
range = (line 796,col 3)-(line 799,col 3)
range = (line 911,col 3)-(line 914,col 3)
range = (line 3686,col 3)-(line 3689,col 3)
range = (line 796,col 3)-(line 799,col 3)
range = (line 911,col 3)-(line 914,col 3)
range = (line 3686,col 3)-(line 3689,col 3)
range = (line 258,col 5)-(line 260,col 5)
range = (line 163,col 5)-(line 164,col 5)
range = (line 3,col 5)-(line 4,col 5)
range = (line 796,col 3)-(line 799,col 3)
range = (line 911,col 3)-(line 914,col 3)
range = (line 3686,col 3)-(line 3689,col 3)
range = (line 180,col 5)-(line 193,col 5)





0: 
range = (line 6,col 5)-(line 8,col 7)
comment = 

     * Test
     
token 0 = "/*\n     * Test\n     */"   <9>   (line 6,col 5)-(line 8,col 7)
/*
     * Test
     */





1: 
range = (line 10,col 5)-(line 40,col 7)
comment = 

     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     
token 0 = "/*\n     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789\n     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789\n     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789\n     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789\n     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789\n     *\n     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789\n     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789\n     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789\n     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789\n     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789\n     *\n     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789\n     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789\n     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789\n     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789\n     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789\n     *\n     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789\n     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789\n     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789\n     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789\n     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789\n     *\n     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789\n     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789\n     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789\n     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789\n     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789\n     */"   <9>   (line 10,col 5)-(line 40,col 7)
/*
     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     */





2: 
range = (line 42,col 5)-(line 72,col 7)
comment = 

     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     
token 0 = "/*\n     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789\n     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789\n     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789\n     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789\n     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789\n     *\n     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789\n     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789\n     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789\n     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789\n     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789\n     *\n     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789\n     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789\n     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789\n     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789\n     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789\n     *\n     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789\n     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789\n     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789\n     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789\n     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789\n     *\n     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789\n     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789\n     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789\n     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789\n     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789\n     */"   <9>   (line 42,col 5)-(line 72,col 7)
/*
     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     */





3: 
range = (line 75,col 5)-(line 81,col 7)
comment = 

     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     
token 0 = "/*\n     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789\n     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789\n     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789\n     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789\n     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789\n     */"   <9>   (line 75,col 5)-(line 81,col 7)
/*
     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     */





4: 
range = (line 83,col 5)-(line 89,col 7)
comment = 

     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     
token 0 = "/*\n     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789\n     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789\n     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789\n     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789\n     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789\n     */"   <9>   (line 83,col 5)-(line 89,col 7)
/*
     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     */





5: 
range = (line 91,col 5)-(line 97,col 7)
comment = 

     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     
token 0 = "/*\n     * 01A123456789\n     * 01B123456789\n     * 01C123456789\n     * 01D123456789\n     * 01E123456789\n     */"   <9>   (line 91,col 5)-(line 97,col 7)
/*
     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     */





6: 
range = (line 99,col 5)-(line 105,col 7)
comment = 

     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     
token 0 = "/*\n     * 01A123456789\n     * 01B123456789\n     * 01C123456789\n     * 01D123456789\n     * 01E123456789\n     */"   <9>   (line 99,col 5)-(line 105,col 7)
/*
     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     */





7: 
range = (line 107,col 5)-(line 113,col 7)
comment = 

     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     
token 0 = "/*\n     * 01A123456789\n     * 01B123456789\n     * 01C123456789\n     * 01D123456789\n     * 01E123456789\n     */"   <9>   (line 107,col 5)-(line 113,col 7)
/*
     * 01A123456789
     * 01B123456789
     * 01C123456789
     * 01D123456789
     * 01E123456789
     */





8: 
range = (line 115,col 5)-(line 121,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 115,col 5)-(line 121,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





9: 
range = (line 123,col 5)-(line 129,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 123,col 5)-(line 129,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





10: 
range = (line 131,col 5)-(line 137,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 131,col 5)-(line 137,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





11: 
range = (line 139,col 5)-(line 145,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 139,col 5)-(line 145,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





12: 
range = (line 147,col 5)-(line 153,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 147,col 5)-(line 153,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





13: 
range = (line 155,col 5)-(line 161,col 7)
comment = 

     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     
token 0 = "/*\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     * 123456789 123456789 123456789 123456789 123456789\n     */"   <9>   (line 155,col 5)-(line 161,col 7)
/*
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     * 123456789 123456789 123456789 123456789 123456789
     */





14: 
range = (line 166,col 5)-(line 256,col 7)
comment = 

     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     *
     * 06A123456789 06A123456789 06A123456789 06A123456789 06A123456789
     * 06B123456789 06B123456789 06B123456789 06B123456789 06B123456789
     * 06C123456789 06C123456789 06C123456789 06C123456789 06C123456789
     * 06D123456789 06D123456789 06D123456789 06D123456789 06D123456789
     * 06E123456789 06E123456789 06E123456789 06E123456789 06E123456789
     *
     * 07A123456789 07A123456789 07A123456789 07A123456789 07A123456789
     * 07B123456789 07B123456789 07B123456789 07B123456789 07B123456789
     * 07C123456789 07C123456789 07C123456789 07C123456789 07C123456789
     * 07D123456789 07D123456789 07D123456789 07D123456789 07D123456789
     * 07E123456789 07E123456789 07E123456789 07E123456789 07E123456789
     *
     * 08A123456789 08A123456789 08A123456789 08A123456789 08A123456789
     * 08B123456789 08B123456789 08B123456789 08B123456789 08B123456789
     * 08C123456789 08C123456789 08C123456789 08C123456789 08C123456789
     * 08D123456789 08D123456789 08D123456789 08D123456789 08D123456789
     * 08E123456789 08E123456789 08E123456789 08E123456789 08E123456789
     *
     * 09A123456789 09A123456789 09A123456789 09A123456789 09A123456789
     * 09B123456789 09B123456789 09B123456789 09B123456789 09B123456789
     * 09C123456789 09C123456789 09C123456789 09C123456789 09C123456789
     * 09D123456789 09D123456789 09D123456789 09D123456789 09D123456789
     * 09E123456789 09E123456789 09E123456789 09E123456789 09E123456789
     *
     * 10A123456789 10A123456789 10A123456789 10A123456789 10A123456789
     * 10B123456789 10B123456789 10B123456789 10B123456789 10B123456789
     * 10C123456789 10C123456789 10C123456789 10C123456789 10C123456789
     * 10D123456789 10D123456789 10D123456789 10D123456789 10D123456789
     * 10E123456789 10E123456789 10E123456789 10E123456789 10E123456789
     *
     * 11A123456789 11A123456789 11A123456789 11A123456789 11A123456789
     * 11B123456789 11B123456789 11B123456789 11B123456789 11B123456789
     * 11C123456789 11C123456789 11C123456789 11C123456789 11C123456789
     * 11D123456789 11D123456789 11D123456789 11D123456789 11D123456789
     * 11E123456789 11E123456789 11E123456789 11E123456789 11E123456789
     *
     * 12A123456789 12A123456789 12A123456789 12A123456789 12A123456789
     * 12B123456789 12B123456789 12B123456789 12B123456789 12B123456789
     * 12C123456789 12C123456789 12C123456789 12C123456789 12C123456789
     * 12D123456789 12D123456789 12D123456789 12D123456789 12D123456789
     * 12E123456789 12E123456789 12E123456789 12E123456789 12E123456789
     *
     * 13A123456789 13A123456789 13A123456789 13A123456789 13A123456789
     * 13B123456789 13B123456789 13B123456789 13B123456789 13B123456789
     * 13C123456789 13C123456789 13C123456789 13C123456789 13C123456789
     * 13D123456789 13D123456789 13D123456789 13D123456789 13D123456789
     * 13E123456789 13E123456789 13E123456789 13E123456789 13E123456789
     *
     * 14A123456789 14A123456789 14A123456789 14A123456789 14A123456789
     * 14B123456789 14B123456789 14B123456789 14B123456789 14B123456789
     * 14C123456789 14C123456789 14C123456789 14C123456789 14C123456789
     * 14D123456789 14D123456789 14D123456789 14D123456789 14D123456789
     * 14E123456789 14E123456789 14E123456789 14E123456789 14E123456789
     *
     * 15A123456789 15A123456789 15A123456789 15A123456789 15A123456789
     * 15B123456789 15B123456789 15B123456789 15B123456789 15B123456789
     * 15C123456789 15C123456789 15C123456789 15C123456789 15C123456789
     * 15D123456789 15D123456789 15D123456789 15D123456789 15D123456789
     * 15E123456789 15E123456789 15E123456789 15E123456789 15E123456789
     
token 0 = "/*\n     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789\n     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789\n     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789\n     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789\n     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789\n     *\n     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789\n     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789\n     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789\n     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789\n     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789\n     *\n     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789\n     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789\n     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789\n     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789\n     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789\n     *\n     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789\n     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789\n     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789\n     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789\n     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789\n     *\n     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789\n     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789\n     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789\n     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789\n     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789\n     *\n     * 06A123456789 06A123456789 06A123456789 06A123456789 06A123456789\n     * 06B123456789 06B123456789 06B123456789 06B123456789 06B123456789\n     * 06C123456789 06C123456789 06C123456789 06C123456789 06C123456789\n     * 06D123456789 06D123456789 06D123456789 06D123456789 06D123456789\n     * 06E123456789 06E123456789 06E123456789 06E123456789 06E123456789\n     *\n     * 07A123456789 07A123456789 07A123456789 07A123456789 07A123456789\n     * 07B123456789 07B123456789 07B123456789 07B123456789 07B123456789\n     * 07C123456789 07C123456789 07C123456789 07C123456789 07C123456789\n     * 07D123456789 07D123456789 07D123456789 07D123456789 07D123456789\n     * 07E123456789 07E123456789 07E123456789 07E123456789 07E123456789\n     *\n     * 08A123456789 08A123456789 08A123456789 08A123456789 08A123456789\n     * 08B123456789 08B123456789 08B123456789 08B123456789 08B123456789\n     * 08C123456789 08C123456789 08C123456789 08C123456789 08C123456789\n     * 08D123456789 08D123456789 08D123456789 08D123456789 08D123456789\n     * 08E123456789 08E123456789 08E123456789 08E123456789 08E123456789\n     *\n     * 09A123456789 09A123456789 09A123456789 09A123456789 09A123456789\n     * 09B123456789 09B123456789 09B123456789 09B123456789 09B123456789\n     * 09C123456789 09C123456789 09C123456789 09C123456789 09C123456789\n     * 09D123456789 09D123456789 09D123456789 09D123456789 09D123456789\n     * 09E123456789 09E123456789 09E123456789 09E123456789 09E123456789\n     *\n     * 10A123456789 10A123456789 10A123456789 10A123456789 10A123456789\n     * 10B123456789 10B123456789 10B123456789 10B123456789 10B123456789\n     * 10C123456789 10C123456789 10C123456789 10C123456789 10C123456789\n     * 10D123456789 10D123456789 10D123456789 10D123456789 10D123456789\n     * 10E123456789 10E123456789 10E123456789 10E123456789 10E123456789\n     *\n     * 11A123456789 11A123456789 11A123456789 11A123456789 11A123456789\n     * 11B123456789 11B123456789 11B123456789 11B123456789 11B123456789\n     * 11C123456789 11C123456789 11C123456789 11C123456789 11C123456789\n     * 11D123456789 11D123456789 11D123456789 11D123456789 11D123456789\n     * 11E123456789 11E123456789 11E123456789 11E123456789 11E123456789\n     *\n     * 12A123456789 12A123456789 12A123456789 12A123456789 12A123456789\n     * 12B123456789 12B123456789 12B123456789 12B123456789 12B123456789\n     * 12C123456789 12C123456789 12C123456789 12C123456789 12C123456789\n     * 12D123456789 12D123456789 12D123456789 12D123456789 12D123456789\n     * 12E123456789 12E123456789 12E123456789 12E123456789 12E123456789\n     *\n     * 13A123456789 13A123456789 13A123456789 13A123456789 13A123456789\n     * 13B123456789 13B123456789 13B123456789 13B123456789 13B123456789\n     * 13C123456789 13C123456789 13C123456789 13C123456789 13C123456789\n     * 13D123456789 13D123456789 13D123456789 13D123456789 13D123456789\n     * 13E123456789 13E123456789 13E123456789 13E123456789 13E123456789\n     *\n     * 14A123456789 14A123456789 14A123456789 14A123456789 14A123456789\n     * 14B123456789 14B123456789 14B123456789 14B123456789 14B123456789\n     * 14C123456789 14C123456789 14C123456789 14C123456789 14C123456789\n     * 14D123456789 14D123456789 14D123456789 14D123456789 14D123456789\n     * 14E123456789 14E123456789 14E123456789 14E123456789 14E123456789\n     *\n     * 15A123456789 15A123456789 15A123456789 15A123456789 15A123456789\n     * 15B123456789 15B123456789 15B123456789 15B123456789 15B123456789\n     * 15C123456789 15C123456789 15C123456789 15C123456789 15C123456789\n     * 15D123456789 15D123456789 15D123456789 15D123456789 15D123456789\n     * 15E123456789 15E123456789 15E123456789 15E123456789 15E123456789\n     */"   <9>   (line 166,col 5)-(line 256,col 7)
/*
     * 01A123456789 01A123456789 01A123456789 01A123456789 01A123456789
     * 01B123456789 01B123456789 01B123456789 01B123456789 01B123456789
     * 01C123456789 01C123456789 01C123456789 01C123456789 01C123456789
     * 01D123456789 01D123456789 01D123456789 01D123456789 01D123456789
     * 01E123456789 01E123456789 01E123456789 01E123456789 01E123456789
     *
     * 02A123456789 02A123456789 02A123456789 02A123456789 02A123456789
     * 02B123456789 02B123456789 02B123456789 02B123456789 02B123456789
     * 02C123456789 02C123456789 02C123456789 02C123456789 02C123456789
     * 02D123456789 02D123456789 02D123456789 02D123456789 02D123456789
     * 02E123456789 02E123456789 02E123456789 02E123456789 02E123456789
     *
     * 03A123456789 03A123456789 03A123456789 03A123456789 03A123456789
     * 03B123456789 03B123456789 03B123456789 03B123456789 03B123456789
     * 03C123456789 03C123456789 03C123456789 03C123456789 03C123456789
     * 03D123456789 03D123456789 03D123456789 03D123456789 03D123456789
     * 03E123456789 03E123456789 03E123456789 03E123456789 03E123456789
     *
     * 04A123456789 04A123456789 04A123456789 04A123456789 04A123456789
     * 04B123456789 04B123456789 04B123456789 04B123456789 04B123456789
     * 04C123456789 04C123456789 04C123456789 04C123456789 04C123456789
     * 04D123456789 04D123456789 04D123456789 04D123456789 04D123456789
     * 04E123456789 04E123456789 04E123456789 04E123456789 04E123456789
     *
     * 05A123456789 05A123456789 05A123456789 05A123456789 05A123456789
     * 05B123456789 05B123456789 05B123456789 05B123456789 05B123456789
     * 05C123456789 05C123456789 05C123456789 05C123456789 05C123456789
     * 05D123456789 05D123456789 05D123456789 05D123456789 05D123456789
     * 05E123456789 05E123456789 05E123456789 05E123456789 05E123456789
     *
     * 06A123456789 06A123456789 06A123456789 06A123456789 06A123456789
     * 06B123456789 06B123456789 06B123456789 06B123456789 06B123456789
     * 06C123456789 06C123456789 06C123456789 06C123456789 06C123456789
     * 06D123456789 06D123456789 06D123456789 06D123456789 06D123456789
     * 06E123456789 06E123456789 06E123456789 06E123456789 06E123456789
     *
     * 07A123456789 07A123456789 07A123456789 07A123456789 07A123456789
     * 07B123456789 07B123456789 07B123456789 07B123456789 07B123456789
     * 07C123456789 07C123456789 07C123456789 07C123456789 07C123456789
     * 07D123456789 07D123456789 07D123456789 07D123456789 07D123456789
     * 07E123456789 07E123456789 07E123456789 07E123456789 07E123456789
     *
     * 08A123456789 08A123456789 08A123456789 08A123456789 08A123456789
     * 08B123456789 08B123456789 08B123456789 08B123456789 08B123456789
     * 08C123456789 08C123456789 08C123456789 08C123456789 08C123456789
     * 08D123456789 08D123456789 08D123456789 08D123456789 08D123456789
     * 08E123456789 08E123456789 08E123456789 08E123456789 08E123456789
     *
     * 09A123456789 09A123456789 09A123456789 09A123456789 09A123456789
     * 09B123456789 09B123456789 09B123456789 09B123456789 09B123456789
     * 09C123456789 09C123456789 09C123456789 09C123456789 09C123456789
     * 09D123456789 09D123456789 09D123456789 09D123456789 09D123456789
     * 09E123456789 09E123456789 09E123456789 09E123456789 09E123456789
     *
     * 10A123456789 10A123456789 10A123456789 10A123456789 10A123456789
     * 10B123456789 10B123456789 10B123456789 10B123456789 10B123456789
     * 10C123456789 10C123456789 10C123456789 10C123456789 10C123456789
     * 10D123456789 10D123456789 10D123456789 10D123456789 10D123456789
     * 10E123456789 10E123456789 10E123456789 10E123456789 10E123456789
     *
     * 11A123456789 11A123456789 11A123456789 11A123456789 11A123456789
     * 11B123456789 11B123456789 11B123456789 11B123456789 11B123456789
     * 11C123456789 11C123456789 11C123456789 11C123456789 11C123456789
     * 11D123456789 11D123456789 11D123456789 11D123456789 11D123456789
     * 11E123456789 11E123456789 11E123456789 11E123456789 11E123456789
     *
     * 12A123456789 12A123456789 12A123456789 12A123456789 12A123456789
     * 12B123456789 12B123456789 12B123456789 12B123456789 12B123456789
     * 12C123456789 12C123456789 12C123456789 12C123456789 12C123456789
     * 12D123456789 12D123456789 12D123456789 12D123456789 12D123456789
     * 12E123456789 12E123456789 12E123456789 12E123456789 12E123456789
     *
     * 13A123456789 13A123456789 13A123456789 13A123456789 13A123456789
     * 13B123456789 13B123456789 13B123456789 13B123456789 13B123456789
     * 13C123456789 13C123456789 13C123456789 13C123456789 13C123456789
     * 13D123456789 13D123456789 13D123456789 13D123456789 13D123456789
     * 13E123456789 13E123456789 13E123456789 13E123456789 13E123456789
     *
     * 14A123456789 14A123456789 14A123456789 14A123456789 14A123456789
     * 14B123456789 14B123456789 14B123456789 14B123456789 14B123456789
     * 14C123456789 14C123456789 14C123456789 14C123456789 14C123456789
     * 14D123456789 14D123456789 14D123456789 14D123456789 14D123456789
     * 14E123456789 14E123456789 14E123456789 14E123456789 14E123456789
     *
     * 15A123456789 15A123456789 15A123456789 15A123456789 15A123456789
     * 15B123456789 15B123456789 15B123456789 15B123456789 15B123456789
     * 15C123456789 15C123456789 15C123456789 15C123456789 15C123456789
     * 15D123456789 15D123456789 15D123456789 15D123456789 15D123456789
     * 15E123456789 15E123456789 15E123456789 15E123456789 15E123456789
     */





15: 
range = (line 262,col 5)-(line 264,col 7)
comment = 

     * Test
     
token 0 = "/*\n     * Test\n     */"   <9>   (line 262,col 5)-(line 264,col 7)
/*
     * Test
     */
cu.getRange().get() = (line 1,col 1)-(line 265,col 2)
lineCount = 264
range = (line 1,col 1)-(line 265,col 2)
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.285 s - in com.github.javaparser.issues.Issue2627Test
[INFO] Running com.github.javaparser.ProblemTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ProblemTest
[INFO] Running com.github.javaparser.javadoc.JavadocTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.javadoc.JavadocTest
[INFO] Running com.github.javaparser.javadoc.JavadocExtractorTest
ERROR PROCESSING ../javaparser-core-testing/src/test/resources/com/github/javaparser/utils/module-info.java
ERROR PROCESSING ../javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/module-info.java
ERROR PROCESSING ../javaparser-core-testing/src/test/resources/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/module-info.java
ERROR PROCESSING ../javaparser-core-testing/src/test/resources/com/github/javaparser/TestFileIso88591.java
ERROR PROCESSING ../javaparser-core-testing/target/test-classes/com/github/javaparser/utils/module-info.java
ERROR PROCESSING ../javaparser-core-testing/target/test-classes/com/github/javaparser/utils/projectroot/issue2615/with_module_info/demo/module-info.java
ERROR PROCESSING ../javaparser-core-testing/target/test-classes/com/github/javaparser/utils/projectroot/issue2615/with_module_info_in_root/module-info.java
ERROR PROCESSING ../javaparser-core-testing/target/test-classes/com/github/javaparser/TestFileIso88591.java
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.27 s - in com.github.javaparser.javadoc.JavadocExtractorTest
[INFO] Running com.github.javaparser.javadoc.description.JavadocInlineTagTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.javadoc.description.JavadocInlineTagTest
[INFO] Running com.github.javaparser.ast.NodePositionTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.NodePositionTest
[INFO] Running com.github.javaparser.ast.imports.ImportDeclarationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.imports.ImportDeclarationTest
[INFO] Running com.github.javaparser.ast.FindNodeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.FindNodeTest
[INFO] Running com.github.javaparser.ast.ObservationTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.ast.ObservationTest
[INFO] Running com.github.javaparser.ast.stmt.IfElseStmtTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.stmt.IfElseStmtTest
[INFO] Running com.github.javaparser.ast.stmt.TryStmtTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.stmt.TryStmtTest
[INFO] Running com.github.javaparser.ast.stmt.YieldStmtTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.stmt.YieldStmtTest
[INFO] Running com.github.javaparser.ast.stmt.SwitchStmtTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.stmt.SwitchStmtTest
[INFO] Running com.github.javaparser.ast.stmt.BreakStmtTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.stmt.BreakStmtTest
[INFO] Running com.github.javaparser.ast.stmt.ForEachStmtTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.stmt.ForEachStmtTest
[INFO] Running com.github.javaparser.ast.ReplaceNodeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.ReplaceNodeTest
[INFO] Running com.github.javaparser.ast.validator.Java8ValidatorTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.validator.Java8ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java12ValidatorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.validator.Java12ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java6ValidatorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.validator.Java6ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java13ValidatorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.validator.Java13ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java1_2ValidatorTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.ast.validator.Java1_2ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java1_0ValidatorTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.validator.Java1_0ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java1_3ValidatorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.validator.Java1_3ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java7ValidatorTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.validator.Java7ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java11ValidatorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.validator.Java11ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java5ValidatorTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.ast.validator.Java5ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java1_4ValidatorTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.validator.Java1_4ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java1_1ValidatorTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.ast.validator.Java1_1ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java10ValidatorTest
[WARNING] Tests run: 15, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.005 s - in com.github.javaparser.ast.validator.Java10ValidatorTest
[INFO] Running com.github.javaparser.ast.validator.Java9ValidatorTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.validator.Java9ValidatorTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithOptionalScopeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.nodeTypes.NodeWithOptionalScopeTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithJavadocTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.nodeTypes.NodeWithJavadocTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithVariablesTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.nodeTypes.NodeWithVariablesTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithTraversableScopeTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.nodeTypes.NodeWithTraversableScopeTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithBodyTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.nodeTypes.NodeWithBodyTest
[INFO] Running com.github.javaparser.ast.nodeTypes.NodeWithModifiersTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.nodeTypes.NodeWithModifiersTest
[INFO] Running com.github.javaparser.ast.visitor.TreeVisitorTest
<new int[] { 1, 2, 3, 4 }> <int> <[]> <{ 1, 2, 3, 4 }> <1> <2> <3> <4> 
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.ast.visitor.TreeVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.CloneVisitorTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.visitor.CloneVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.VoidVisitorTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.visitor.VoidVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.GenericVisitorWithDefaultsTest
[INFO] Tests run: 103, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.116 s - in com.github.javaparser.ast.visitor.GenericVisitorWithDefaultsTest
[INFO] Running com.github.javaparser.ast.visitor.ModifierVisitorTest

public class ModifierVisitorTest {
    private void causesException() {
        String[] listWithExtraCommaAndEqualElements = {"a", "a",};
    }
}
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.ast.visitor.ModifierVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.NoCommentEqualsVisitorTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.visitor.NoCommentEqualsVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.HashCodeVisitorTest
[INFO] Tests run: 98, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.131 s - in com.github.javaparser.ast.visitor.HashCodeVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.NoCommentHashCodeVisitorTest
[INFO] Tests run: 99, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.068 s - in com.github.javaparser.ast.visitor.NoCommentHashCodeVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.ObjectIdentityHashCodeVisitorTest
[INFO] Tests run: 96, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s - in com.github.javaparser.ast.visitor.ObjectIdentityHashCodeVisitorTest
[INFO] Running com.github.javaparser.ast.visitor.VoidVisitorWithDefaultsTest
[INFO] Tests run: 103, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.123 s - in com.github.javaparser.ast.visitor.VoidVisitorWithDefaultsTest
[INFO] Running com.github.javaparser.ast.WalkFindTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.ast.WalkFindTest
[INFO] Running com.github.javaparser.ast.body.AnnotationDeclarationTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.body.AnnotationDeclarationTest
[INFO] Running com.github.javaparser.ast.body.MethodDeclarationTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.ast.body.MethodDeclarationTest
[INFO] Running com.github.javaparser.ast.body.ClassOrInterfaceDeclarationTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.body.ClassOrInterfaceDeclarationTest
[INFO] Running com.github.javaparser.ast.body.ConstructorDeclarationTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.body.ConstructorDeclarationTest
[INFO] Running com.github.javaparser.ast.body.TypeDeclarationTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.body.TypeDeclarationTest
[INFO] Running com.github.javaparser.ast.body.FieldDeclarationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.body.FieldDeclarationTest
[INFO] Running com.github.javaparser.ast.body.AnnotationMemberDeclarationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.body.AnnotationMemberDeclarationTest
[INFO] Running com.github.javaparser.ast.ListObservationTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s - in com.github.javaparser.ast.ListObservationTest
[INFO] Running com.github.javaparser.ast.expr.BinaryExprTest
[INFO] Running com.github.javaparser.ast.expr.BinaryExprTest$LogicalOperatorPrecedence
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.expr.BinaryExprTest$LogicalOperatorPrecedence
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.expr.BinaryExprTest
[INFO] Running com.github.javaparser.ast.expr.SuperExprTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.expr.SuperExprTest
[INFO] Running com.github.javaparser.ast.expr.LambdaExprTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.ast.expr.LambdaExprTest
[INFO] Running com.github.javaparser.ast.expr.NameTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.expr.NameTest
[INFO] Running com.github.javaparser.ast.expr.TextBlockLiteralExprTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.github.javaparser.ast.expr.TextBlockLiteralExprTest
[INFO] Running com.github.javaparser.ast.expr.ThisExprTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.expr.ThisExprTest
[INFO] Running com.github.javaparser.ast.expr.AssignExprTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.expr.AssignExprTest
[INFO] Running com.github.javaparser.ast.expr.DoubleLiteralExprTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.expr.DoubleLiteralExprTest
[INFO] Running com.github.javaparser.ast.expr.LiteralStringValueExprTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in com.github.javaparser.ast.expr.LiteralStringValueExprTest
[INFO] Running com.github.javaparser.ast.expr.StringLiteralExprTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.expr.StringLiteralExprTest
[INFO] Running com.github.javaparser.ast.expr.ObjectCreationExprTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.expr.ObjectCreationExprTest
[INFO] Running com.github.javaparser.ast.expr.SimpleNameTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.expr.SimpleNameTest
[INFO] Running com.github.javaparser.ast.expr.SwitchExprTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.expr.SwitchExprTest
[INFO] Running com.github.javaparser.ast.expr.CharLiteralExprTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.ast.expr.CharLiteralExprTest
[INFO] Running com.github.javaparser.ast.expr.MethodCallExprTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.expr.MethodCallExprTest
[INFO] Running com.github.javaparser.ast.expr.MethodReferenceExprTest
[INFO] Tests run: 21, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.ast.expr.MethodReferenceExprTest
[INFO] Running com.github.javaparser.ast.expr.InstanceOfExprTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.expr.InstanceOfExprTest
[INFO] Running com.github.javaparser.ast.DataKeyTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.DataKeyTest
[INFO] Running com.github.javaparser.ast.comments.CommentTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.comments.CommentTest
[INFO] Running com.github.javaparser.ast.observer.PropagatingAstObserverTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.observer.PropagatingAstObserverTest
[INFO] Running com.github.javaparser.ast.type.ArrayTypeTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.ast.type.ArrayTypeTest
[INFO] Running com.github.javaparser.ast.type.TypeTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.ast.type.TypeTest
[INFO] Running com.github.javaparser.ast.NodeListTest
[INFO] Running com.github.javaparser.ast.NodeListTest$IteratorTest
[INFO] Running com.github.javaparser.ast.NodeListTest$IteratorTest$SingleItemIteratorTest
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.NodeListTest$IteratorTest$SingleItemIteratorTest
[INFO] Running com.github.javaparser.ast.NodeListTest$IteratorTest$EmptyIteratorTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.NodeListTest$IteratorTest$EmptyIteratorTest
[INFO] Running com.github.javaparser.ast.NodeListTest$IteratorTest$AddRemoveListIteratorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.ast.NodeListTest$IteratorTest$AddRemoveListIteratorTest
[INFO] Running com.github.javaparser.ast.NodeListTest$IteratorTest$ObserversTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.NodeListTest$IteratorTest$ObserversTest
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.ast.NodeListTest$IteratorTest
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.ast.NodeListTest
[INFO] Running com.github.javaparser.ast.ParseResultTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ast.ParseResultTest
[INFO] Running com.github.javaparser.ast.NodeTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.NodeTest
[INFO] Running com.github.javaparser.ast.AncestorDescendantTests
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.ast.AncestorDescendantTests
[INFO] Running com.github.javaparser.ast.CompilationUnitTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.ast.CompilationUnitTest
[INFO] Running com.github.javaparser.TokenRangeTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.TokenRangeTest
[INFO] Running com.github.javaparser.UnicodeEscapeProcessingProviderTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.UnicodeEscapeProcessingProviderTest
[INFO] Running com.github.javaparser.builders.ClassOrInterfaceDeclarationBuildersTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.builders.ClassOrInterfaceDeclarationBuildersTest
[INFO] Running com.github.javaparser.builders.NodeWithThrownExceptionsBuildersTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.builders.NodeWithThrownExceptionsBuildersTest
[INFO] Running com.github.javaparser.builders.NodeWithMembersBuildersTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.builders.NodeWithMembersBuildersTest
[INFO] Running com.github.javaparser.builders.NodeWithParametersBuildersTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.builders.NodeWithParametersBuildersTest
[INFO] Running com.github.javaparser.builders.FieldDeclarationBuildersTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.builders.FieldDeclarationBuildersTest
[INFO] Running com.github.javaparser.builders.NodeWithAnnotationsBuildersTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.builders.NodeWithAnnotationsBuildersTest
[INFO] Running com.github.javaparser.builders.CompilationUnitBuildersTest
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.builders.CompilationUnitBuildersTest
[INFO] Running com.github.javaparser.builders.EnumDeclarationBuildersTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.builders.EnumDeclarationBuildersTest
[INFO] Running com.github.javaparser.ParserConfigurationTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.ParserConfigurationTest
[INFO] Running com.github.javaparser.JavaParserTest
---
root(Type=CompilationUnit): 
    types: 
        - type(Type=ClassOrInterfaceDeclaration): 
            isInterface: "false"
            name(Type=SimpleName): 
                identifier: "X"
...
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in com.github.javaparser.JavaParserTest
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 1649, Failures: 0, Errors: 0, Skipped: 6
[INFO] 
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:report (jacoco-report) @ javaparser-core-testing ---
[INFO] Loading execution data file /home/gabsko/breaking-updates/javaparser-core-testing/target/jacoco.exec
[INFO] Analyzed bundle 'javaparser-core-testing' with 541 classes
[INFO] 
[INFO] ---------< com.github.javaparser:javaparser-core-testing-bdd >----------
[INFO] Building javaparser-core-testing-bdd 3.19.1-SNAPSHOT               [4/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core-testing-bdd ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core-testing-bdd/target
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:prepare-agent (jacoco-initialize) @ javaparser-core-testing-bdd ---
[INFO] argLine set to -javaagent:/home/gabsko/.m2/repository/org/jacoco/org.jacoco.agent/0.8.6/org.jacoco.agent-0.8.6-runtime.jar=destfile=/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core-testing-bdd ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core-testing-bdd ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core-testing-bdd ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 12 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core-testing-bdd ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 19 source files to /home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/test-classes
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java: /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java uses or overrides a deprecated API.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/CommentParsingSteps.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java: /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java uses unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-core-testing-bdd/src/test/java/com/github/javaparser/steps/SharedSteps.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-classes) @ javaparser-core-testing-bdd ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 599 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-generated-sources) @ javaparser-core-testing-bdd ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 13 resources
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core-testing-bdd ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.github.javaparser.ParsingTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.ParsingTest

Running story com/github/javaparser/parsing_scenarios.story

(com/github/javaparser/parsing_scenarios.story)


Scenario: Test declaration as String for constructor on parsed class
Given a CompilationUnit
Using timeout for story parsing_scenarios.story of 300 secs.
When the following source is parsed:
class ClassWithAConstructor {
    protected ClassWithAConstructor(int a, String b) throws This, AndThat, AndWhatElse {
    }
}
Then constructor 1 in class 1 declaration as a String is "protected ClassWithAConstructor(int a, String b) throws This, AndThat, AndWhatElse"
Then all nodes refer to their parent

Scenario: Test declaration as String exclusing modifiers and throws for constructor on parsed class
Given a CompilationUnit
When the following source is parsed:
class ClassWithAConstructor {
    protected ClassWithAConstructor(int a, String b) throws This, AndThat, AndWhatElse {
    }
}
Then constructor 1 in class 1 declaration short form as a String is "ClassWithAConstructor(int a, String b)"
Then all nodes refer to their parent

Scenario: Test declaration as String exclusing modifiers and throws for method on parsed class
Given a CompilationUnit
When the following source is parsed:
class ClassWithAMethod {
    /*comment1*/
    final protected /*comment2*/ native List<String> /*comment2*/ aMethod(int a, String b) throws /*comment3*/ This, AndThat, AndWhatElse {

    }
}
Then method 1 in class 1 declaration as a String is "protected final native List<String> aMethod(int a, String b) throws This, AndThat, AndWhatElse"
Then all nodes refer to their parent

Scenario: Test declaration as String exclusing modifiers and throws for method on parsed class
Given a CompilationUnit
When the following source is parsed:
class ClassWithAMethod {
    /*comment1*/
    final protected /*comment2*/ native List<String> /*comment2*/ aMethod(int a, String b) throws /*comment3*/ This, AndThat, AndWhatElse {

    }
}
Then method 1 in class 1 declaration as a String short form is "List<String> aMethod(int a, String b)"
Then all nodes refer to their parent

Scenario: The same class source is parsed by two different compilation units and should therefore be equal
Given a CompilationUnit
Given a second CompilationUnit
When the following source is parsed:
package japa.parser.comments;
public class ClassEquality {

    public void aMethod(){
        // first comment
        int a=0; // second comment
    }
}
When the following sources is parsed by the second CompilationUnit:
package japa.parser.comments;
public class ClassEquality {

    public void aMethod(){
        // first comment
        int a=0; // second comment
    }
}
Then the CompilationUnit is equal to the second CompilationUnit
Then the CompilationUnit has the same hashcode to the second CompilationUnit
Then all nodes refer to their parent
Then all nodes of the second compilation unit refer to their parent

Scenario: Two different class sources are parsed by two different compilation units and should not be equal
Given a CompilationUnit
Given a second CompilationUnit
When the following source is parsed:
package japa.parser.comments;
public class ClassEquality {

    public void aMethod(){
        // first comment
        int a=0; // second comment
    }
}
When the following sources is parsed by the second CompilationUnit:
package japa.parser.comments;
public class DifferentClass {

    public void aMethod(){
        // first comment
        int a=0; // second comment
    }
}
Then the CompilationUnit is not equal to the second CompilationUnit
Then the CompilationUnit has a different hashcode to the second CompilationUnit
Then all nodes refer to their parent
Then all nodes of the second compilation unit refer to their parent

Scenario: Classes that only differ by comments should not be equal or have the same hashcode
Given a CompilationUnit
Given a second CompilationUnit
When the following source is parsed:
package japa.parser.comments;
public class ClassEquality {

    public void aMethod(){
        // first comment
        int a=0; // second comment
    }
}
When the following sources is parsed by the second CompilationUnit:
package japa.parser.comments;
public class ClassEquality {

    public void aMethod(){
        // first comment
        int a=0;
    }
}
Then the CompilationUnit is not equal to the second CompilationUnit
Then the CompilationUnit has a different hashcode to the second CompilationUnit
Then all nodes refer to their parent
Then all nodes of the second compilation unit refer to their parent

Scenario: A class with a colon in the annoation value is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast;
import org.junit.Test;
public class Issue37 {
    public static @interface SomeAnnotation {
        String value();
    }
    // Parser bug: the type of this field
    @SomeAnnotation("http://someURL.org/")
    protected Test test;
}
Then field 1 in class 1 contains annotation 1 value is ""http://someURL.org/""
Then all nodes refer to their parent

Scenario: A class with a Lambda is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
package bdd.samples;
import java.util.stream.Stream;
public class Lambdas {

    public static void main(String[] args) {
        // Lambda Runnable
        Runnable r1 = () -> System.out.println("Hello world!");
        Runnable r2 = () -> {};
        Runnable r3 = () -> { System.out.println("Hello world two!"); };

        Stream<CharSequence> stream = Stream.generate((Supplier<CharSequence>) () -> "foo");
    }
}
Then lambda in statement 1 in method 1 in class 1 is called r1
Then lambda in statement 2 in method 1 in class 1 is called r2
Then lambda in statement 3 in method 1 in class 1 is called r3
Then lambda in statement 1 in method 1 in class 1 body is "System.out.println("Hello world!");"
Then lambda in statement 2 in method 1 in class 1 block statement is null
Then lambda in statement 3 in method 1 in class 1 block statement is "System.out.println("Hello world two!");"
Then lambda in statement 1 in method 1 in class 1 is parent of contained body
Then lambda in statement 3 in method 1 in class 1 is parent of contained body
Then all nodes refer to their parent
Then lambda in method call in statement 4 in method 1 in class 1 body is ""foo";"

Scenario: A class with parameterized Lambdas is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
package com.github.javapasrser.bdd.parsing;
import java.util.function.Function;
public class ParameterizedLambdas {
    public static void main(String[] args) {
        Function<Integer,String> f1 = (Integer i) -> String.valueOf(i);
        Function<Integer,String> f2 = (i) -> String.valueOf(i);
        Function<Integer,String> f3 = i -> String.valueOf(i);
    }
}
Then lambda in statement 1 in method 1 in class 1 is parent of contained parameter
Then lambda in statement 2 in method 1 in class 1 is parent of contained parameter
Then lambda in statement 3 in method 1 in class 1 is parent of contained parameter
Then lambda in statement 1 in method 1 in class 1 is parent of contained body
Then lambda in statement 2 in method 1 in class 1 is parent of contained body
Then lambda in statement 3 in method 1 in class 1 is parent of contained body
Then lambda in statement 1 in method 1 in class 1 has parameters with non-null type
Then lambda in statement 2 in method 1 in class 1 has parameters with non-null type
Then lambda in statement 3 in method 1 in class 1 has parameters with non-null type

Scenario: A class with multi-parameters Lambdas is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
package com.github.javapasrser.bdd.parsing;
import java.util.function.Function;
public class MultiParameterizedLambdas {
    public static void main(String[] args) {
        BiFunction<Integer, Integer, String> f = (a, b) -> String.valueOf(a) + String.valueOf(b);
    }
}
Then lambda in statement 1 in method 1 in class 1 has parameters with non-null type

Scenario: A class with a method reference is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
public class Person {

    String name;
    LocalDate birthday;

    public void sortByAge(Person[] people){
        Arrays.sort(people, Person::compareByAge);
    }

    public static int compareByAge(Person a, Person b) {
        return a.birthday.compareTo(b.birthday);
    }
}
Then method reference in statement 1 in method 1 in class 1 scope is Person
Then method reference in statement 1 in method 1 in class 1 identifier is compareByAge
Then all nodes refer to their parent

Scenario: An interface with a default method is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
interface MyInterface {
    default String doSomething(){
        return "implementation in an interface!";
    }

    String doSomethingElse();
}
Then method 1 class 1 is a default method
Then method 2 class 1 is not a default method
Then all nodes refer to their parent

Scenario: A lambda expression inside a conditional expression is parsed by the Java Parser
Given a CompilationUnit
When the following source is parsed:
public class A{
	static <T> Predicate<T> isEqual(Object targetRef) {
	    return (null == targetRef)? Objects::isNull : object -> targetRef.equals(object);
	}
}
Then ThenExpr in the conditional expression of the statement 1 in method 1 in class 1 is LambdaExpr

Scenario: Parsing array creation expressions the positions are correct
Given a CompilationUnit
When the following source is parsed (trimming space):
public class A{
    int[][] a = new int[][]{};
}
When I take the ArrayCreationExpr
Then the begin line is 2
Then the begin column is 17
Then the end line is 2
Then the end column is 29

Scenario: simple cast on lambda expression can be parsed
Given a CompilationUnit
When the following source is parsed:
class A {
    static final Comparator<ChronoLocalDate> DATE_ORDER =
        (Comparator<ChronoLocalDate>) (date1, date2) -> {
            return Long.compare(date1.toEpochDay(), date2.toEpochDay());
        };
}
Then all nodes refer to their parent

Scenario: a combined cast on lambda expression can be parsed
Given a CompilationUnit
When the following source is parsed:
class A {
    static final Comparator<ChronoLocalDate> DATE_ORDER =
        (Comparator<ChronoLocalDate> & Serializable) (date1, date2) -> {
            return Long.compare(date1.toEpochDay(), date2.toEpochDay());
        };
}
Then all nodes refer to their parent

Scenario: a combined cast on a literal can be parsed
Given a CompilationUnit
When the following source is parsed:
class A {
    static int a = (Comparator<ChronoLocalDate> & Serializable) 1;
}
Then all nodes refer to their parent

Scenario: Parsing excess semicolons on CompilationUnit level should work
Given a CompilationUnit
When the following source is parsed:
;
package a;
;
import foo.a;
;
class A { }
;
Then no errors are reported

Scenario: Parsing excess semicolons in an AnnotationTypeDeclaration should work
Given a CompilationUnit
When the following source is parsed:
@interface A {
    ;
    ;
}
Then no errors are reported

Scenario: Classes that are thrown from a method can be annotated
Given a CompilationUnit
When the following source is parsed:
class A {
    void a() throws @Abc X {
    }
}
Then no errors are reported

Scenario: Classes that are thrown from a constructor can be annotated
Given a CompilationUnit
When the following source is parsed:
class A {
    A() throws @Abc X {
    }
}
Then no errors are reported

Scenario: Parsing trailing semicolons inside the imports area should work
Given a CompilationUnit
When the following source is parsed:
import foo.a;;
import foo.b;

class A {
}
Then no errors are reported

Scenario: Full package name should be parsed
Given a CompilationUnit
When the following source is parsed:
package com.github.javaparser.bdd;
class C {}
When I take the PackageDeclaration
Then the package name is com.github.javaparser.bdd

Scenario: Strings with unescaped newlines are illegal (issue 211)
Given the class:
class A {
    public void helloWorld(String greeting, String name) {
        return "hello
        world";
    }
}
Then the Java parser cannot parse it because of an error

Scenario: Chars with unescaped newlines are illegal (issue 211)
Given the class:
class A {
    public void helloWorld(String greeting, String name) {
        return '
';
    }
}
Then the Java parser cannot parse it because of an error

Scenario: Diamond Operator information is exposed
Given a CompilationUnit
When the following source is parsed:
class A {
    List<String> args = new ArrayList<>();
}
When I take the ObjectCreationExpr
Then the type's diamond operator flag should be true

Scenario: Diamond Operator can be parsed also with space and comments
Given a CompilationUnit
When the following source is parsed:
class A {
    List<String> args = new ArrayList<  /*hello*/  >();
}
When I take the ObjectCreationExpr
Then the type's diamond operator flag should be true

Scenario: Type Arguments are not specified
Given a CompilationUnit
When the following source is parsed:
class A {
    List args = new ArrayList();
}
When I take the ObjectCreationExpr
Then the type's diamond operator flag should be false

Scenario: Type Arguments are specified
Given a CompilationUnit
When the following source is parsed:
class A {
    Either<Ok, Error> either = new Either<Ok, Error>();
}
When I take the ObjectCreationExpr
Then the type's diamond operator flag should be false

Scenario: A method reference with type arguments is parsed correctly
Given a CompilationUnit
When the following source is parsed:
class X { 
	void x() { 
		a.orElseGet( Stream::<IVariable<?>>empty ); 
	} 
}
Then no errors are reported

Scenario: The target of this assignExpr is not null
Given a CompilationUnit
When the following source is parsed:
public class Example {
  private String mString;
  public Example(String arg) {
    mString = arg;
  }
}
Then the assignExpr produced doesn't have a null target

Scenario: Two comments in one line, and a unicode space
Given a CompilationUnit
When the following source is parsed:
public class Example {
  Object mAvailablePrimaryConnection;
  public Example(String arg) {
     ​mAvailablePrimaryConnection = openConnectionLocked(mConfiguration,
        true /*primaryConnection*/); // comment
  }
}
Then no errors are reported

Scenario: alternative [] placings
Given a CompilationUnit
When the following source is parsed:
class I{int[]bar(int[]x[])[]{return new int[][]{};}}
Then no errors are reported

Scenario: try requires resources, a finally or a catch (issue 442)
Given the class:
class A {
    public void helloWorld() {
        try {
        }
    }
}
Then the Java parser cannot parse it because of an error

Scenario: Partially dimensioned arrays are fine
Given a CompilationUnit
When the following source is parsed:
class X {
    int a = new int @A [10] @A [20] @A [] [];
    int b = new int @A [] @A []{{1}};
}
Then no errors are reported





(AfterStories)

[INFO] Tests run: 157, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.537 s - in com.github.javaparser.ParsingTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.PrettyPrintingTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.PrettyPrintingTest

Running story com/github/javaparser/pretty_printing_java_concepts.story
Using timeout for story pretty_printing_java_concepts.story of 300 secs.

(com/github/javaparser/pretty_printing_java_concepts.story)


Scenario: Check a whole lot of things at once that should be separate tests
Given the class in the file "JavaConcepts.java"
When the class is parsed by the Java parser
Then it is printed as:
package japa.bdd.samples;

import com.github.javaparser.JavaParser;
import japa.parser.ParseException;
import com.github.javaparser.ast.CompilationUnit;
import org.junit.Ignore;
import java.io.*;
import java.util.*;

@Ignore
@Deprecated
public class JavaConcepts<T extends List<int[]>, X> extends Base implements Serializable {

    static Class clz1 = String.class;

    protected Class clz2 = (String.class);

    Class clz3 = int.class;

    Class clz4 = (int.class);

    int[] arr = new int[10];

    byte bye = 0;

    byte[] byebye = null;

    short sh1, sh2 = 1;

    int intWithUnderscore = 1234_5678;

    long longWithUnderscore = 1234_5678L;

    float floatWithUnderscore = 1_234.5_678f;

    float floatWithUnderscoreAndExponent = 1_234e1_0f;

    double doubleWithUnderscore = 1_234.5_678;

    double doubleWithUnderscoreAndExponent = 1_234e1_0;

    int binaryLiteral = 0b101101;

    List<String>[][] arrLS = (List<String>[][]) new List<?>[10][];

    {
        int z = 0, y = 0;
        int a = (z) + y;
        a = (+z) + y;
        byte b = (byte) +y;
    }

    List<String> diamond1 = new LinkedList<>();

    @Deprecated()
    static class Ugly {

        static int x = 0;

        public static void main(String[] args) {
            x = +x;
            x = ~x;
            --x;
            boolean b = !false;
            x &= 2;
            x |= 2;
            x ^= 2;
            x -= 2;
            x %= 2;
            x /= 2;
            x *= 2;
            x <<= 2;
            x >>= 2;
            x >>>= 2;
            b = b || false;
            b = b | false;
            b = b & false;
            b = b ^ false;
            b = b != false;
            b = x > 1;
            b = x < 1;
            b = x >= 1;
            b = x <= 1;
            x = x << 1;
            x = x >> 1;
            x = x >>> 1;
            x = x - 1;
            x = x * 1;
            x = x % 1;
            x = x / 1;
        }
    }

    @Deprecated()
    int[][][][] arr2 = new int[10][2][1][0];

    volatile float fff = 0x1.fffeP+127f;

    char cc = 'a';

    int[][] arr3 = { { 1, 2 }, { 3, 4 } };

    static int[][] arr4 = {};

    public static JavaConcepts t;

    static {
        arr4 = new int[][] { { 2 }, { 1 } };
    }

    {
        arr3 = new int[][] { { 2 }, { 1 } };
    }

    public enum Teste {

        asc, def
    }

    public enum Sexo {

        m, @Deprecated
        f;

        public enum Sexo_ implements Serializable, Cloneable {
        }

        private Sexo() {
        }
    }

    @Deprecated
    public enum Enum {

        m(1) {

            @Override
            void mm() {
            }
        }
        , f(2) {

            void mm() {
            }
        }
        ;

        native void nnn();

        transient int x;

        private Enum(int x) {
            this.x = x;
        }

        abstract void mm();
    }

    strictfp double ddd() {
        return 0.0;
    }

    public <T, E> JavaConcepts(int x) {
        this.arr[0] = x;
        T val1 = null;
        E val2 = null;
        super.<T, E>check2(val1, val2);
        boolean b = true, y = false;
        abstract class X {

            int i = 0;

            public <D> X() {
            }

            public void m() {
            }
        }
        @Deprecated
        final class Y extends X {

            public Y() {
                super();
                JavaConcepts.this.cc = 'c';
                super.i = 1;
                Y.super.m();
            }

            public Y(int y) {
                super();
            }

            public Y(long x) {
                this();
            }
        }
    }

    public <T> JavaConcepts(String str) {
    }

    private class QWE extends JavaConcepts<List<int[]>, String> {

        @Deprecated
        final int z = 0;

        int i = (int) -1;

        public QWE(String... x) {
            <String>super(x[0]);
        }

        public QWE(int... x) {
            super(x[0]);
            i = x[0];
            assert true;
            assert 1 == 1 : 2;
            {
                int iii = 3;
                iii += 3;
            }
            label: {
                int iii = 1;
            }
            ;
            ;
            int min = -2147483648;
            long sl = 123123123123l;
            long minl = -9223372036854775808L;
            switch(i) {
            }
            ll: switch(i) {
                case 1:
                    System.out.println(1);
                    break ll;
                default:
                    {
                        System.out.println("default");
                        break;
                    }
                case 2:
                    if (t instanceof Base) {
                        System.out.println(1);
                    }
                    i++;
                    ++i;
            }
        }

        private synchronized int[] doSomething() {
            List<? extends Number> x = new ArrayList<Integer>();
            return new int[] { 1 };
        }
    }

    public static void main(String[] args) throws ParseException, IOException {
        int x = 2;
        CompilationUnit cu = parse(new File("src/japa/parser/javacc/Parser.java"));
        System.out.println(cu);
        JavaConcepts teste = new JavaConcepts(2);
        JavaConcepts.QWE qwe = teste.new QWE(1);
        if (1 + 1 == 2) {
            teste = null;
            teste = new JavaConcepts(1);
        } else {
            x = 3;
            teste = new JavaConcepts(1);
            x = x == 0 ? 2 : 4;
        }
        if (true)
            x = 1;
        else
            x = 3;
        if (true)
            x = 1;
        else if (false)
            x = 3;
        else
            x = 2;
        while (true) {
            xxx: while (x == 3) continue xxx;
            break;
        }
        do {
            x++;
        } while (x < 100);
        do x++; while (x < 100);
        for (@Deprecated int i : arr4[0]) {
            x--;
        }
        for (@Deprecated final int i = 0, j = 1; i < 10; x++) {
            break;
        }
        int i, j;
        for (i = 0, j = 1; i < 10 && j < 2; i++, j--) {
            break;
        }
    }

    public static CompilationUnit parse(@Deprecated File file) throws ParseException, IOException {
        String a = ((String) "qwe");
        String x = ((String) clz1.getName());
        int y = ((Integer) (Object) x).intValue();
        synchronized (file) {
            file = null;
            file = new File("");
        }
        try {
            if (file == null) {
                throw new NullPointerException("blah");
            }
        } catch (final NullPointerException e) {
            System.out.println("catch");
        } catch (RuntimeException e) {
            System.out.println("catch");
        } finally {
            System.out.println("finally");
        }
        try {
            if (file == null) {
                throw new NullPointerException("blah");
            }
        } finally {
            System.out.println("finally");
        }
        try {
            if (file == null) {
                throw new NullPointerException("blah");
            }
        } catch (RuntimeException e) {
            System.out.println("catch");
        }
        try (InputStream in = createInputStream()) {
            System.out.println(in);
        } catch (IOException e) {
            System.out.println("catch");
        }
        try (InputStream in = createInputStream();
            InputStream in2 = createInputStream()) {
            System.out.println(in);
        } catch (IOException e) {
            System.out.println("catch");
        }
        try (InputStream in = createInputStream()) {
            System.out.println(in);
        }
        try {
            System.out.println("whatever");
        } catch (RuntimeException e) {
            System.out.println(e);
        } catch (final Exception | Error e) {
            System.out.println(e);
        }
        return JavaParser.parse(file);
    }

    class A<T extends Integer & Serializable> implements XXX, Serializable {

        public <ABC> A(Integer integer, ABC string) throws Exception, IOException {
        }
    }

    private <Y> void x(Map<? extends X, ? super T> x) {
        @Deprecated
        Comparator c = new Comparator() {

            public int compare(Object o1, Object o2) {
                try {
                    A<Integer> a = new <String> A<Integer>(new Integer(11), "foo") {
                    };
                } catch (Exception e) {
                }
                return 0;
            }

            @Override
            public boolean equals(Object obj) {
                return super.equals(obj);
            }
        };
    }

    private static InputStream createInputStream() {
        return new ByteArrayInputStream(null);
    }
}

class Base {

    public <A, B> void check2(A val1, B val2) {
    }
}

interface XXX extends Serializable, Cloneable {
}




Running story com/github/javaparser/pretty_printing_scenarios.story

(com/github/javaparser/pretty_printing_scenarios.story)


Scenario: When printing the instantiation we should use the right amount of spaces
Given the class:
public class A {
    Object foo = new Object();
}
When the class is parsed by the Java parser
Then it is printed as:
public class A {

    Object foo = new Object();
}

Scenario: When printing the lambda expression we should use the right indentation
Given the class:
public class B {
	Runnable runnable = ()-> System.out.println("running");
    Consumer<Integer> consumer = i->{ i+=1; System.out.println(i);};
}
When the class is parsed by the Java parser
Then it is printed as:
public class B {

    Runnable runnable = () -> System.out.println("running");

    Consumer<Integer> consumer = i -> {
        i += 1;
        System.out.println(i);
    };
}

Scenario: Printing orphan comments in empty method
Given the class:
class A {
    public void helloWorld(String greeting, String name) {
        //sdfsdfsdf
            //sdfds
        /*
                            dgfdgfdgfdgfdgfd
         */
    }
}
When the class is parsed by the Java parser
Then it is printed as:
class A {

    public void helloWorld(String greeting, String name) {
        // sdfsdfsdf
        // sdfds
        /*
                            dgfdgfdgfdgfdgfd
         */
    }
}

Scenario: Printing orphan comments in empty method (issue 192)
Given the class:
public class StepImplementation {
    @Step("A step")
    public void contextStep() {
        // Foo bar
    }
}
When the class is parsed by the Java parser
Then it is printed as:
public class StepImplementation {

    @Step("A step")
    public void contextStep() {
        // Foo bar
    }
}

Scenario: Printing orphan comments in for loop (issue 192)
Given the class:
public class StepImplementation {
    public void contextStep() {
        for (int i = 0; i < 5; i++) {
            // foo bar
        }
    }
}
When the class is parsed by the Java parser
Then it is printed as:
public class StepImplementation {

    public void contextStep() {
        for (int i = 0; i < 5; i++) {
            // foo bar
        }
    }
}

Scenario: Printing orphan and attributed comments in for loop (issue 192)
Given the class:
public class StepImplementation {
public void contextStep() {
        for (int i = 0; i < 5; i++) {
            // foo bar
            System.out.println();
            // another foo bar
        }
    }
}
When the class is parsed by the Java parser
Then it is printed as:
public class StepImplementation {

    public void contextStep() {
        for (int i = 0; i < 5; i++) {
            // foo bar
            System.out.println();
            // another foo bar
        }
    }
}

Scenario: An empty Enum is printed correctly
Given the compilation unit:
package test; enum XYZ {}
When the class is parsed by the Java parser
Then it is printed as:
package test;

enum XYZ {
}

Scenario: An enum without fields has no () on its members
Given the compilation unit:
package test; enum XYZ {A,B,C}
When the class is parsed by the Java parser
Then it is printed as:
package test;

enum XYZ {

    A, B, C
}

Scenario: Strings with escaped newlines are parsed correctly
Given the class:
class A {
    public void helloWorld(String greeting, String name) {
        return "hello\nworld";
    }
}
When the class is parsed by the Java parser
Then it is printed as:
class A {

    public void helloWorld(String greeting, String name) {
        return "hello\nworld";
    }
}

Scenario: A multi-catch is printed correctly
Given the class:
class A {
    public void a() {
        try {
        } catch (IndexOutOfBoundException | IOException e) {
        }
    }
}
Using timeout for story pretty_printing_scenarios.story of 300 secs.
When the class is parsed by the Java parser
Then it is printed as:
class A {

    public void a() {
        try {
        } catch (IndexOutOfBoundException | IOException e) {
        }
    }
}

Scenario: An empty import does not fail
Given the class:
package a.b.c;

;
When the class is parsed by the Java parser
Then it is printed as:
package a.b.c;

Scenario: we can parse blocks
Given the block:
{
    a=2+1;
    b=3+1;
}
When the block is parsed by the Java parser
Then it is printed as:
{
    a = 2 + 1;
    b = 3 + 1;
}

Scenario: we can parse statements
Given the statement:
while (true) {
}
When the statement is parsed by the Java parser
Then it is printed as:
while (true) {
}

Scenario: we can parse static on demand imports
Given the import:
import static a.b.c.Abc.*;
When the import is parsed by the Java parser
Then it is printed as:
import static a.b.c.Abc.*;

Scenario: we can parse static type imports
Given the import:
import static a.b.c.Abc;
When the import is parsed by the Java parser
Then it is printed as:
import static a.b.c.Abc;

Scenario: we can parse on demand imports
Given the import:
import a.b.c.*;
When the import is parsed by the Java parser
Then it is printed as:
import a.b.c.*;

Scenario: we can parse type imports
Given the import:
import a.b.c.Abc;
When the import is parsed by the Java parser
Then it is printed as:
import a.b.c.Abc;

Scenario: we can parse annotations
Given the annotation:
@Abc
When the annotation is parsed by the Java parser
Then it is printed as:
@Abc

Scenario: we can parse body declarations
Given the body:
String author();
When the annotation body declaration is parsed by the Java parser
Then it is printed as:
String author();

Scenario: we can parse class body declarations
Given the body:
public int xyz() {}
When the class body declaration is parsed by the Java parser
Then it is printed as:
public int xyz() {
}

Scenario: we can parse interface body declarations
Given the body:
int xyz();
When the interface body declaration is parsed by the Java parser
Then it is printed as:
int xyz();

Scenario: It doesn't throw NPE when using a modifierVisitorAdapter
Given the class:
public class Example {
  private String mString;
  public Example(String arg) {
    mString = arg;
  }
}
When the class is parsed by the Java parser
When the class is visited by an empty ModifierVisitorAdapter
Then it is printed as:
public class Example {

    private String mString;

    public Example(String arg) {
        mString = arg;
    }
}

Scenario: JavaDoc OR comment is printed, not both.
Given the class:
public class Foo {
    /** This line gets duplicated */
    public void foo() {
    }
}
When the class is parsed by the Java parser
Then it is printed as:
public class Foo {

    /**
     * This line gets duplicated
     */
    public void foo() {
    }
}

Scenario: various lamba casts (issue 418)
Given the class:
public class TestLambda {
    void okMethod() {
        return (ITF) () -> {
            return true;
        };
    }
    void faliingMethod() {
        testThis(check ? null : (ITF) () -> {
            return true;
        });
    }
}
When the class body declaration is parsed by the Java parser
Then it is printed as:
public class TestLambda {

    void okMethod() {
        return (ITF) () -> {
            return true;
        };
    }

    void faliingMethod() {
        testThis(check ? null : (ITF) () -> {
            return true;
        });
    }
}

Scenario: Duplicate methods are not a parsing error (#416)
Given the class:
public class Foo {
    public void foo() {
    }
    public void foo() {
    }
    public void foo() {
    }
}
When the class is parsed by the Java parser
Then it is printed as:
public class Foo {

    public void foo() {
    }

    public void foo() {
    }

    public void foo() {
    }
}

Scenario: Both array syntaxes are supported (#416)
Given the class:
public class Foo {
    public void m1(boolean[] boolArray) {}
    public void m1(boolean boolArray[]) {}
    public void m1(boolean[] boolArray[]) {}
}
When the class is parsed by the Java parser
Then it is printed as:
public class Foo {

    public void m1(boolean[] boolArray) {
    }

    public void m1(boolean[] boolArray) {
    }

    public void m1(boolean[][] boolArray) {
    }
}

Scenario: Array parts can be annotated
Given the class:
class Foo {
    void m1(@Boo boolean @Index1 [] @ Index2 [] boolArray) {}
}
When the class is parsed by the Java parser
Then it is printed as:
class Foo {

    void m1(@Boo boolean @Index1 [] @Index2 [] boolArray) {
    }
}

Scenario: Annotations are supported on annotations
Given the class:
@C @interface D {
}
When the class is parsed by the Java parser
Then it is printed as:
@C
@interface D {
}

Scenario: Annotations are supported on interfaces
Given the class:
@C interface Abc {
}
When the class is parsed by the Java parser
Then it is printed as:
@C
interface Abc {
}

Scenario: Annotations are supported on enums
Given the class:
@C enum Abc {
}
When the class is parsed by the Java parser
Then it is printed as:
@C
enum Abc {
}

Scenario: Annotations are supported on classes (issue 436 is the commented part)
Given the compilation unit:
@C
public class Abc<@C A, @C X extends @C String & @C Serializable> {

	@C int @C[] @C []f;

	@C
	public Abc(@C int p, List<@C ? extends Object> aa){
		@C int b;
	}
	public @C void a(@C int o) {
/*		try {
			throw new IOException();
		} catch (@C NullPointerException | @C IOException e) {
		}
*/	}
}
When the compilation unit is parsed by the Java parser
Then it is printed as:
@C
public class Abc<@C A, @C X extends @C String & @C Serializable> {

    @C
    int @C [] @C [] f;

    @C
    public Abc(@C int p, List<@C ? extends Object> aa) {
        @C
        int b;
    }

    @C
    public void a(@C int o) {
        /*		try {
			throw new IOException();
		} catch (@C NullPointerException | @C IOException e) {
		}
*/
    }
}

Scenario: Annotations are supported inside catch (issue 436)
Given the compilation unit:
public class Abc {
	public void a() {
		try {
		} catch (@C NullPointerException | @C IOException e) {
		}
	}
}
When the compilation unit is parsed by the Java parser
Then it is printed as:
public class Abc {

    public void a() {
        try {
        } catch (@C NullPointerException | @C IOException e) {
        }
    }
}

Scenario: Inner class notation does not confuse annotations (#107)
Given the class:
class A extends @Ann1 B.@Ann2 C {
}
When the class is parsed by the Java parser
Then it is printed as:
class A extends @Ann1 B.@Ann2 C {
}

Scenario: Make sure interface extends can be annotated
Given the class:
interface A extends @X B, @Y C, @Z D {
}
When the class is parsed by the Java parser
Then it is printed as:
interface A extends @X B, @Y C, @Z D {
}

Scenario: default modifier isn't printed twice
Given the class:
interface X {default String author(){}}
When the annotation body declaration is parsed by the Java parser
Then it is printed as:
interface X {

    default String author() {
    }
}





(AfterStories)

[INFO] Tests run: 111, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.304 s - in com.github.javaparser.PrettyPrintingTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.PositionRangeTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.PositionRangeTest

Running story com/github/javaparser/position_range_scenarios.story

(com/github/javaparser/position_range_scenarios.story)


Scenario: a position is equal to another position at the same place
Given the position 10, 10
When I compare to position 10, 10
Then the positions are equal
And it is not before the first position
And it is not after the first position

Scenario: a position is after another position
Given the position 10, 10
When I compare to position 20, 20
Then it is after the first position
And the positions are not equal
And it is not before the first position

Scenario: a position is directly after another position
Given the position 10, 10
When I compare to position 10, 11
Then it is after the first position
And the positions are not equal
And it is not before the first position

Scenario: a position is before another position
Given the position 10, 10
When I compare to position 5, 5
Then it is before the first position
And the positions are not equal
And it is not after the first position

Scenario: a position is directly before another position
Given the position 10, 10
When I compare to position 10, 9
Then it is before the first position
And the positions are not equal
And it is not after the first position

Scenario: a range is equal to another range
Given the range 10, 10 - 20, 20
When I compare to range 10, 10 - 20, 20
Then the ranges are equal

Scenario: a range is before a position
Given the position 20, 21
When I compare to range 10, 10 - 20, 20
Then it is before the position

Scenario: a range is after a position
Given the position 10, 9
When I compare to range 10, 10 - 20, 20
Then it is after the  position

Scenario: a range is contained in another range
Given the range 10, 10 - 20, 20
When I compare to range 11, 11 - 19, 19
Then it is contained in the first range





(AfterStories)

[INFO] Tests run: 48, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.203 s - in com.github.javaparser.PositionRangeTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.CommentParsingTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.CommentParsingTest

Running story com/github/javaparser/comment_attribution_scenarios.story
Using timeout for story comment_attribution_scenarios.story of 300 secs.

(com/github/javaparser/comment_attribution_scenarios.story)


Scenario: A Class With Line Comments is processed by the Java Parser
Given the class:
package japa.parser.comments;

public class ClassWithLineComments {

    public void aMethod(){
        // first comment
        int a=0; // second comment
        // third comment
        // fourth comment
    }
}
When the class is parsed by the Java parser
Then the compilation unit is not commented
Then the compilation unit has 0 orphan comments
Then class 1 has 4 total contained comments
Then method 1 in class 1 has 4 total contained comments
Then method 1 in class 1 has 0 orphan comments
Then block statement in method 1 in class 1 has 4 total contained comments
Then block statement in method 1 in class 1 has 3 orphan comments

Scenario: A Class With Line Comments is processed by the Java Parser
Given the class:
package japa.parser.comments;

/**Javadoc associated with the class*/
public class ClassWithOrphanComments {
    //a first comment floating in the class

    //comment associated to the method
    void foo(){
        /*comment floating inside the method*/
    }

    //a second comment floating in the class
}

//Orphan comment inside the CompilationUnit
When the class is parsed by the Java parser
Then the compilation unit is not commented
Then the compilation unit has 6 contained comments
Then the compilation unit orphan comment 1 is "Orphan comment inside the CompilationUnit"
Then class 1 orphan comment 1 is "a first comment floating in the class"
Then class 1 orphan comment 2 is "a second comment floating in the class"
Then class 1 is commented "Javadoc associated with the class"
Then class 1 has 4 total contained comments
Then method 1 in class 1 has 0 orphan comments
Then method 1 in class 1 is commented "comment associated to the method"
Then comment 1 in method 1 in class 1 is "comment floating inside the method"
Then block statement in method 1 in class 1 orphan comment 1 is "comment floating inside the method"

Scenario: A Class With Orphan Comment in Class Declaration is parsed by the Java Parser
Given the class:
class /*Comment1*/ A {
    //comment2
    // comment3
    int a;
    /**comment4
    *
    * */
    //comment5
}
When the class is parsed by the Java parser
Then class 1 is not commented
Then class 1 orphan comment 1 is "comment2"

Scenario: A Class With Line Comments in Multiple Methods is parsed by the Java Parser
Given the class:
package japa.parser.comments;

public class ClassWithLineCommentsInMultipleMethods {

    public void aMethod() {
        // first comment
        int a = 0; //second comment
        // third comment
        // fourth comment
    }

    public void anotherMethod() {
        // a unique comment
        // first comment
        int a = 0; //second comment
        // third comment
        // fourth comment
    }
}
When the class is parsed by the Java parser
Then the compilation unit has 9 contained comments
Then the compilation unit has 0 orphan comments
Then class 1 is not commented
Then class 1 has 9 total contained comments
Then method 1 in class 1 has 4 total contained comments
Then method 1 in class 1 has 0 orphan comments
Then block statement in method 1 in class 1 has 4 total contained comments
Then block statement in method 1 in class 1 has 3 orphan comments
Then method 2 in class 1 has 5 total contained comments
Then method 2 in class 1 has 0 orphan comments
Then block statement in method 2 in class 1 has 5 total contained comments
Then block statement in method 2 in class 1 has 4 orphan comments

Scenario: A Class With Line Comments in Multiple Methods is parsed by the Java Parser
Given the class:
package japa.parser.comments;

public class ClassWithLineCommentInsideBlockComment {

    /* comment to a method */
    void foo(){}

    /*// Line Comment put immediately after block comment

    //// Comment debauchery

    another orphan.
    It spans over more lines */
}
When the class is parsed by the Java parser
Then method 1 in class 1 is commented " comment to a method "
Then class 1 orphan comment 1 is "// Line Comment put immediately after block comment

                                  //// Comment debauchery

                                  another orphan.
                                  It spans over more lines "

Scenario: A Class With Line Comments on Fields is parsed by the Java Parser
Given the class:
package japa.parser.comments;

public class Issue43 {
    //Case 1
    private String field1 = null; //field1

    //Case 2
    private String field2
            = null; //field2

}
When the class is parsed by the Java parser
Then the compilation unit has 4 contained comments
Then class 1 has 4 total contained comments
Then class 1 has 1 orphan comment
Then class 1 orphan comment 1 is "Case 1"
Then field 1 in class 1 contains 0 comments
!--Then field 2 in class 1 contains 0 comments
Then field 1 in class 1 is commented "field1"
Then field 2 in class 1 is commented "Case 2"
Then variable 1 value of field 2 in class 1 is commented "field2"

Scenario: Another Class With Line Comments on Fields is parsed by the Java Parser
Given the class:
package japa.parser.comments;

public class Issue43variant {
    private String field1 = null; //field1

    private String field2
            = null; //field2

}
When the class is parsed by the Java parser
Then the compilation unit has 2 contained comments
Then class 1 has 2 total contained comments
Then field 1 in class 1 contains 0 comments
!--Then field 2 in class 1 contains 0 comments
Then field 1 in class 1 is commented "field1"
Then variable 1 value of field 2 in class 1 is commented "field2"

Scenario: A Class With Mixed Comments on Fields is parsed by the Java Parser
Given the class:
package japa.parser.javacc;
public class Teste {
    //line comment1
    int a = 0; //line comment2
    int b = 0; //line comment3
    int c = 0; /* multi-line
                * comment
                */
    int d = 0; /** multi-line
                * javadoc */
    int e = 0;
}
//final comment
When the class is parsed by the Java parser
Then the compilation unit has 6 contained comments
Then class 1 has 5 total contained comments
Then class 1 orphan comment 1 is "line comment1"
Then field 1 in class 1 is commented "line comment2"
Then field 2 in class 1 is commented "line comment3"
Then field 3 in class 1 is not commented

Scenario: Comment with a preceding line space is an orphan
Given the class:
//comment

class A {}
When the class is parsed by the Java parser
Then the compilation unit orphan comment 1 is "comment"

Scenario: Comment without a preceding line space is associated to class
Given the class:
//comment
class A {}
When the class is parsed by the Java parser
Then class 1 is commented "comment"

Scenario: Comments after Javadoc are attributed to the method if flag is active
Given the class:
class Issue40{
    @GET
    @Path("original")
    /**
    * Return the original user.
    */
    public User getOriginalUser(String userName) {
        return userService.getOriginalUser(userName);
    }
}
When the do not consider annotations as node start for code attribution is true on the Java parser
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is not an orphan
Then method 1 in class 1 is commented "* Return the original user."

Scenario: Comments after Javadoc are attributed to the method if flag is not active
Given the class:
class Issue40{
    @GET
    @Path("original")
    /**
    * Return the original user.
    */
    public User getOriginalUser(String userName) {
        return userService.getOriginalUser(userName);
    }
}
When the do not consider annotations as node start for code attribution is false on the Java parser
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is not an orphan
Then type of method 1 in class 1 is commented "* Return the original user."

Scenario: A Class With Line Comments is processed by the Java Parser
Given the class:
/*CompilationUnitComment*/
package japa.parser.comments;

public class ClassWithMixedStyleComments {
    // line comment
    int a = 0;
    // another line comment
    int b = 0;
    // line comment
    int c = 0;
    /* multi-line
       comment
    */
    int d = 0;
    /**
     * multi-line
     */
    int e = 0;
    // final comment
}
When the class is parsed by the Java parser
Then the compilation is commented "CompilationUnitComment"
Then class 1 is not commented
Then class 1 has 6 total contained comments
Then class 1 orphan comment 1 is " final comment"
Then field 1 in class 1 is commented " line comment"
Then field 1 in class 1 contains 0 comments
Then field 2 in class 1 is commented " another line comment"
Then field 2 in class 1 contains 0 comments
Then field 3 in class 1 is commented " line comment"
Then field 3 in class 1 contains 0 comments
Then field 4 in class 1 is commented " multi-line comment"
Then field 4 in class 1 contains 0 comments
Then field 5 in class 1 is commented " * multi-line"
Then field 5 in class 1 contains 0 comments

Scenario: A class with only an orphan comment is processed by the Java Parser
Given the class:
class A {
    // orphan comment"
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is an orphan
Then comment 1 in compilation unit parent is ClassOrInterfaceDeclaration

Scenario: A class with only a class comment is processed by the Java Parser
Given the class:
/* Comment of the class */
class A {
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is not an orphan
Then comment 1 in compilation unit commented node is ClassOrInterfaceDeclaration

Scenario: A Class With two comments at class level is processed by the Java Parser
Given the class:
/* Orphan comment */
/* Comment of the class */
class A {
}
When the class is parsed by the Java parser
Then the compilation unit has 2 contained comments
Then comment 1 in compilation unit is an orphan
Then the compilation unit orphan comment 1 is "Orphan comment"
Then comment 2 in compilation unit is not an orphan
Then comment 2 in compilation unit commented node is ClassOrInterfaceDeclaration

Scenario: A Class has a comment associated to a field when processed by the Java Parser
Given the class:
class A {
    int a = 0; // comment associated to the field
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is not an orphan
Then comment 1 in compilation unit commented node is FieldDeclaration

Scenario: A Class has a comment associated to a the literal when processed by the Java Parser
Given the class:
class A {
    int a
        = 0; // comment associated to the field
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is not an orphan
Then comment 1 in compilation unit commented node is IntegerLiteralExpr

Scenario: A Class with two line comment within a method when processed by the Java Parser
Given the class:
class A {
    void foo() {
        // a comment
        int b; // another comment
    }
}
When the class is parsed by the Java parser
Then the compilation unit has 2 contained comments
Then comment 1 in compilation unit is an orphan
Then comment 1 in compilation unit is "a comment"
Then comment 2 in compilation unit is not an orphan
Then comment 2 in compilation unit is "another comment"
Then comment 2 in compilation unit commented node is ExpressionStmt

Scenario: A Class with an inline comment inside a block comment is parsed by the Java Parser
Given the class:
class A {
    /* A block comment that
    // Contains a line comment
    */
    public static void main(String args[]) {
    }
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit is "A block comment that // Contains a line comment"

Scenario: A Class with an inline comment inbetween annotation a method declaration is parsed Java Parser
Given the class:
class A {
    @Override
    // Returns number of vowels in a name
    public int countVowels(String name) {
    }
}
When the class is parsed by the Java parser
Then the compilation unit has 1 contained comments
Then comment 1 in compilation unit commented node is PrimitiveType

Scenario: We print correctly two consecutive line-comments in a class
Given the class:
class A {
  // foo
  // bar
  void aMethod(){}
}
When the class is parsed by the Java parser
Then it is printed as:
class A {

    // foo
    // bar
    void aMethod() {
    }
}

Scenario: We print correctly two consecutive line-comments in a method
Given the class:
class A {
  void aMethod(){
     // foo
     // bar
     int a;
  }
}
When the class is parsed by the Java parser
Then it is printed as:
class A {

    void aMethod() {
        // foo
        // bar
        int a;
    }
}

Scenario: We print correctly orphan comments in a for loop
Given the class:
class A {
    public static List calcularResultadoFinal(List avaliacoes) throws SQLException, ClassNotFoundException{
        for(Avaliacao avaliacao: avaliacoes){
            // if(avaliacao.obterAprovacao()){
            // avaliacao.setResultadoFinal("Aprovado");
            // }else{
            // avaliacao.setResultadoFinal("Reprovado");
            // }
            avaliacao.setEmAberto(false);
            avaliacao.editar();
        }
        return avaliacoes;
    }
}
When the class is parsed by the Java parser
Then it is printed as:
class A {

    public static List calcularResultadoFinal(List avaliacoes) throws SQLException, ClassNotFoundException {
        for (Avaliacao avaliacao : avaliacoes) {
            // if(avaliacao.obterAprovacao()){
            // avaliacao.setResultadoFinal("Aprovado");
            // }else{
            // avaliacao.setResultadoFinal("Reprovado");
            // }
            avaliacao.setEmAberto(false);
            avaliacao.editar();
        }
        return avaliacoes;
    }
}




Running story com/github/javaparser/comment_parsing_scenarios.story

(com/github/javaparser/comment_parsing_scenarios.story)


Scenario: A Class With Line Comments is processed by the Comments Parser
Given the class:
package japa.parser.comments;

public class ClassWithLineComments {

    public void aMethod(){
        // first comment
        int a=0; // second comment
        // third comment
        // fourth comment
    }
}
When the class is parsed by the comment parser
Then the total number of comments is 4
Then line comment 1 is " first comment"
Then line comment 2 is " second comment"
Then line comment 3 is " third comment"
Then line comment 4 is " fourth comment"
Then the line comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|6|9|6|24|
|7|18|7|34|
|8|9|8|24|
|9|9|9|25|


Scenario: A Class With Block Comments is processed by the Comments Parser
Given the class:
package japa.parser.comments;

/* comment which is not attributed to the class, it floats around as an orphan */
/* comment to a class */
public class ClassWithBlockComments {

    /* comment to a method */
    void foo(){};

    /* comment put randomly in class:

    another orphan.
    It spans over more lines */

}

/* a comment lost inside a compilation unit. It is orphan, I am sure you got this one */
When the class is parsed by the comment parser
Then the total number of comments is 5
Then block comment 1 is " comment which is not attributed to the class, it floats around as an orphan "
Then block comment 2 is " comment to a class "
Then block comment 3 is " comment to a method "
Then block comment 4 is " comment put randomly in class:    another orphan.    It spans over more lines "
Then block comment 5 is " a comment lost inside a compilation unit. It is orphan, I am sure you got this one  "
Then the block comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|3|1|3|81|
|4|1|4|24|
|7|5|7|29|
|10|5|13|31|
|17|1|17|88|


Scenario: A Class With Javadoc Comments is processed by the Comments Parser
Given the class:
package japa.parser.comments;

/** a proper javadoc comment */
public class ClassWithJavadocComments {

    void foo(){};


}
/** a floating javadoc comment */
When the class is parsed by the comment parser
Then the total number of comments is 2
Using timeout for story comment_parsing_scenarios.story of 300 secs.
Then Javadoc comment 1 is " a proper javadoc comment "
Then Javadoc comment 2 is " a floating javadoc comment "
Then the Javadoc comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|3|1|3|31|
|10|1|10|33|


Scenario: A Class With Orphan Comments is processed by the Comments Parser
Given the class:
package japa.parser.comments;

/**Javadoc associated with the class*/
public class ClassWithOrphanComments {
    //a first comment floating in the class

    //comment associated to the method
    void foo(){
        /*comment floating inside the method*/
    }

    //a second comment floating in the class
}

//Orphan comment inside the CompilationUnit
When the class is parsed by the comment parser
Then the total number of comments is 6
Then line comment 1 is "a first comment floating in the class"
Then line comment 2 is "comment associated to the method"
Then line comment 3 is "a second comment floating in the class"
Then block comment 1 is "comment floating inside the method"
Then Javadoc comment 1 is "Javadoc associated with the class"

Scenario: A Class With Orphan Comments is processed by the Comments Parser
Given the class:
/*CompilationUnitComment*/
package japa.parser.comments;

public class ClassWithMixedStyleComments {
    // line comment
    int a = 0;
    // another line comment
    int b = 0;
    // line comment
    int c = 0;
    /* multi-line
       comment
    */
    int d = 0;
    /**
     * multi-line
     */
    int e = 0;
    // final comment
}
When the class is parsed by the comment parser
Then the total number of comments is 7
Then the line comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|5|5|5|19|
|7|5|7|27|
|9|5|9|19|
|19|5|19|20|

Then the block comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|1|1|1|26|
|11|5|13|6|

Then the Javadoc comments have the following positions:

|beginLine|beginColumn|endLine|endColumn|
|15|5|17|7|


Scenario: A method containing two consecutive line comments is parsed correctly
Given the class:
class A {
  void aMethod(){
     // foo
     // bar
     int a;
  }
}
When the class is parsed by the comment parser
Then the total number of comments is 2
Then line comment 1 is " foo"
Then line comment 2 is " bar"

Scenario: Comments from a file with an non-UTF-8 encoding are parsed correctly
When read sample "ClassInLatin1" using encoding "ISO-8859-1"
Then the total number of comments is 3
Then line comment 2 is " A l'émej in piasì che sent dësgust."

Scenario: Should not recognize /*/ as a comment
Given the class:
/*/
class Foo {}
When the class is parsed by the comment parser
Then the total number of comments is 0
Given the class:
/*/
class Foo {}
Then the Java parser cannot parse it because of an error

Scenario: Should recognize /*/ inside a block comment
Given the class:
/* Foo /*/
When the class is parsed by the comment parser
Then the total number of comments is 1
Then block comment 1 is " Foo /"

Scenario: A Class With Character Literal is processed by the Comments Parser
Given the class:
class A {
    /** comment1 */
    private char c = '"';
    /** comment2 */
    private String d;
}
When the class is parsed by the comment parser
Then the total number of comments is 2
Then Javadoc comment 1 is "comment1"
Then Javadoc comment 2 is "comment2"

Scenario: Double slash in string does not mess up comments parsing
Given the class:
public class b {

    public void m1() {
        String s = "\\";
    }

    /**
     * Comment
    */
    public void m2() {
        return;
    }
}
When the class is parsed by the comment parser
Then the total number of comments is 1

Scenario: Triple slash in string does not mess up comments parsing
Given the class:
public class b {

    public void m1() {
        String s = "\\\" // still in string";
    }

    /**
     * Comment
    */
    public void m2() {
        return;
    }
}
When the class is parsed by the comment parser
Then the total number of comments is 1

Scenario: Four slashes in string does not mess up comments parsing
Given the class:
public class b {

    public void m1() {
        String s = "\\\\" // out of the string";
        ;
    }

    /**
     * Comment
    */
    public void m2() {
        return;
    }
}
When the class is parsed by the comment parser
Then the total number of comments is 2

Scenario: Five slashes in string does not mess up comments parsing
Given the class:
public class b {

    public void m1() {
        String s = "\\\\\" // still in string";
        ;
    }

    /**
     * Comment
    */
    public void m2() {
        return;
    }
}
When the class is parsed by the comment parser
Then the total number of comments is 1





(AfterStories)

[INFO] Tests run: 228, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.304 s - in com.github.javaparser.CommentParsingTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.ManipulationTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.ManipulationTest

Running story com/github/javaparser/manipulation_scenarios.story

(com/github/javaparser/manipulation_scenarios.story)


Scenario: A Node can only ever be equal to a class that extends Node
Given a CompilationUnit
Then is not equal to null
Then is not equal to "Some String Value"

Scenario: A BlockStmt can be created by a provided String
Given a BlockStmt
When is the String "{return x+y;}" is parsed by the JavaParser using parseBlock
Then Statement 1 in BlockStmt toString is "return x + y;"

Scenario: A Statement can be created by a provided String
Given a Statement
When is the String "x = x+y;" is parsed by the JavaParser using parseStatement
Then Statement toString is "x = x + y;"

Scenario: Adding declarations to a TryStmt it is set as the parent of all provided declarations
Given a TryStmt
Given a List of VariableDeclarations
When the List of VariableDeclarations are set as the resources on TryStmt
Then all the VariableDeclarations parent is the TryStmt

Scenario: Creating a complete CompilationUnit
Given a CompilationUnit
When the package declaration is set to "japa.parser.ast.manipulation"
When a public class called "CreateClass" is added to the CompilationUnit
When a public static method called "main" returning void is added to class 1 in the compilation unit
When String varargs called "args" are added to method 1 in class 1
When a BlockStmt is added to method 1 in class 1
When System.out.println("Hello World!"); is added to the body of method 1 in class 1
Then the expected source should be:
package japa.parser.ast.manipulation;

public class CreateClass {

    public static void main(String... args) {
        System.out.println("Hello World!");
    }
}

Scenario: Change the name of a method to be uppercase
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast.manipulation;

public class UpdateMethod {

    public void changeToUpperCase(){}

    public void anotherMethodToChange(){}
}
When method 1 in class 1 has it's name converted to uppercase
Then method 1 in class 1 has the name "CHANGETOUPPERCASE"

Scenario: Change the name of all methods to be uppercase using a visitor
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast.manipulation;

public class UpdateMethod {

    public void changeToUpperCase(){}

    public void anotherMethodToChange(){}
}
Given a ChangeNameToUpperCaseVisitor
When the ChangeNameToUpperCaseVisitor visits to compilation unit
Then method 1 in class 1 has the name "CHANGETOUPPERCASE"
Then method 2 in class 1 has the name "ANOTHERMETHODTOCHANGE"

Scenario: Add int arguments to a method
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast.manipulation;

public class UpdateMethod {

    public void changeToUpperCase(String parameter){}

    public void anotherMethodToChange(){}
}
When method 2 in class 1 has an int parameter called "value" added
Then method 1 in class 1 has 1 parameters
Then method 2 in class 1 has 1 parameter
Then method 2 in class 1 parameter 1 is type int called "value"

Scenario: Add int arguments to all methods using a visitor
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast.manipulation;

public class UpdateMethod {

    public void changeToUpperCase(String parameter){}

    public void anotherMethodToChange(){}
}
Given a AddNewIntParameterCalledValueVisitor
When the AddNewIntParameterCalledValueVisitor visits to compilation unit
Then method 1 in class 1 has 2 parameters
Then method 2 in class 1 has 1 parameter
Then method 1 in class 1 parameter 2 is type int called "value"
Then method 2 in class 1 parameter 1 is type int called "value"

Scenario: Clone a compilation unit
Given a CompilationUnit
When the following source is parsed:
package japa.parser.ast.manipulation;

public class UpdateMethod {

    public void changeToUpperCase(String parameter){}

    public void anotherMethodToChange(){}
}
When the compilation unit is cloned
Then method 1 in class 1 has the name "changeToUpperCase"
Then method 1 in class 1 has 1 parameters
Then method 2 in class 1 has 0 parameter





(AfterStories)

[INFO] Tests run: 53, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.203 s - in com.github.javaparser.ManipulationTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.ComparingTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.ComparingTest

Running story com/github/javaparser/comparing_scenarios.story

(com/github/javaparser/comparing_scenarios.story)


Scenario: Compare CUs containing lambdas should not crash awfully
Given the first class:
public class ArrayListGenericDemo {

    public static void main(String[] args) {
        ArrayList<String> data = new ArrayList();
        data.forEach( s -> System.out.println(s));
    }
}
Given the second class:
public class ArrayListGenericDemo {

    public static void main(String[] args) {
        ArrayList<String> data = new ArrayList();
        data.forEach( s -> System.out.println(s));
    }
}
Then they are equals





(AfterStories)

[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.202 s - in com.github.javaparser.ComparingTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] Running com.github.javaparser.VisitorTest
Processing system properties {}
Using controls EmbedderControls[batch=false,failOnStoryTimeout=false,generateViewAfterStories=true,ignoreFailureInStories=true,ignoreFailureInView=true,skip=false,storyTimeouts=300,threads=1,verboseFailures=false,verboseFiltering=false]

(BeforeStories)
[INFO] Running com.github.javaparser.VisitorTest

Running story com/github/javaparser/visitor_scenarios.story

(com/github/javaparser/visitor_scenarios.story)


Scenario: A class that is replicated using a CloneVisitor should be equal to the source
Given a CompilationUnit
Given a second CompilationUnit
When the following source is parsed:
package japa.parser;
public class ClassEquality {

    public void aMethod(){
        int a=0; // second comment
    }
}
When the CompilationUnit is cloned to the second CompilationUnit
Then the CompilationUnit is equal to the second CompilationUnit
Then the CompilationUnit has the same hashcode to the second CompilationUnit

Scenario: A classes variable name is changed to uppercase VoidVisitorAdapter
Given a CompilationUnit
Given a VoidVisitorAdapter with a visit method that changes variable names to uppercase
When the following source is parsed:
package japa.parser;
public class ToUpperClass {
    private int zero = 0;
}
When the CompilationUnit is visited by the to uppercase visitor
Then the expected source should be:
package japa.parser;
public class ToUpperClass {
    private int ZERO = 0;
}

Scenario: A class with a try statement is visited using by a VoidVisitorAdapter
Given a CompilationUnit
Given a VoidVisitorAdapter with a visit method and collects the variable names
When the following source is parsed:
package japa.parser;
public class ToUpperClass {
    public void aMethod(){
        try {
            int zero = 0;
        }catch (Exception exception) {
        }
    }
}
When the CompilationUnit is visited by the variable name collector visitor
Then the collected variable name is "exception;zero;"

Scenario: A class with a try statement is visited using by a GenericVisitorAdapter
Given a CompilationUnit
Given a GenericVisitorAdapter with a visit method that returns variable names
When the following source is parsed:
package japa.parser;
public class ToUpperClass {
    public void aMethod(){
        try {
            int zero = 0;
        }catch (Exception exception) {
        }
    }
}
When the CompilationUnit is visited by the visitor that returns variable names
Then the return variable name is "zero"





(AfterStories)

[INFO] Tests run: 23, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.202 s - in com.github.javaparser.VisitorTest
Generating reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
Failed to generate reports view to '/home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jbehave' using formats '[stats, console, html, junitscenarioreporter]' and view properties '{reports=ftl/jbehave-reports.ftl, nonDecorated=ftl/jbehave-report-non-decorated.ftl, maps=ftl/jbehave-maps.ftl, navigator=ftl/jbehave-navigator.ftl, views=ftl/jbehave-views.ftl, decorated=ftl/jbehave-report-decorated.ftl}'
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 625, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:report (jacoco-report) @ javaparser-core-testing-bdd ---
[INFO] Loading execution data file /home/gabsko/breaking-updates/javaparser-core-testing-bdd/target/jacoco.exec
[INFO] Analyzed bundle 'javaparser-core-testing-bdd' with 541 classes
[INFO] 
[INFO] ----------< com.github.javaparser:javaparser-core-generators >----------
[INFO] Building javaparser-core-generators 3.19.1-SNAPSHOT                [5/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core-generators ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core-generators/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core-generators ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-generators/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core-generators ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 32 source files to /home/gabsko/breaking-updates/javaparser-core-generators/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core-generators ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-generators/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core-generators ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 1 source file to /home/gabsko/breaking-updates/javaparser-core-generators/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core-generators ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.github.javaparser.generator.core.utils.CodeUtilsTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.135 s - in com.github.javaparser.generator.core.utils.CodeUtilsTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] -----< com.github.javaparser:javaparser-core-metamodel-generator >------
[INFO] Building javaparser-core-metamodel-generator 3.19.1-SNAPSHOT       [6/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core-metamodel-generator ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core-metamodel-generator/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core-metamodel-generator ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-metamodel-generator/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core-metamodel-generator ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 6 source files to /home/gabsko/breaking-updates/javaparser-core-metamodel-generator/target/classes
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core-metamodel-generator ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-metamodel-generator/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core-metamodel-generator ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core-metamodel-generator ---
[INFO] No tests to run.
[INFO] 
[INFO] --------< com.github.javaparser:javaparser-core-serialization >---------
[INFO] Building javaparser-core-serialization 3.19.1-SNAPSHOT             [7/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-core-serialization ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-core-serialization/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-core-serialization ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-serialization/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-core-serialization ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /home/gabsko/breaking-updates/javaparser-core-serialization/target/classes
[INFO] /home/gabsko/breaking-updates/javaparser-core-serialization/src/main/java/com/github/javaparser/serialization/JavaParserJsonSerializer.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-core-serialization/src/main/java/com/github/javaparser/serialization/JavaParserJsonSerializer.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-core-serialization ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-core-serialization/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-core-serialization ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 2 source files to /home/gabsko/breaking-updates/javaparser-core-serialization/target/test-classes
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-core-serialization ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.github.javaparser.serialization.JavaParserJsonDeserializerTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.243 s - in com.github.javaparser.serialization.JavaParserJsonDeserializerTest
[INFO] Running com.github.javaparser.serialization.JavaParserJsonSerializerTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.serialization.JavaParserJsonSerializerTest
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO] 
[INFO] --------< com.github.javaparser:javaparser-symbol-solver-core >---------
[INFO] Building javaparser-symbol-solver-core 3.19.1-SNAPSHOT             [8/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-symbol-solver-core ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-symbol-solver-core/target
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-symbol-solver-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-symbol-solver-core ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 163 source files to /home/gabsko/breaking-updates/javaparser-symbol-solver-core/target/classes
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclaration.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/javassistmodel/JavassistEnumDeclaration.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolver.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/main/java/com/github/javaparser/symbolsolver/resolution/typesolvers/CombinedTypeSolver.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-symbol-solver-core ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-symbol-solver-core/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-symbol-solver-core ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-symbol-solver-core ---
[INFO] No tests to run.
[INFO] 
[INFO] -------< com.github.javaparser:javaparser-symbol-solver-testing >-------
[INFO] Building javaparser-symbol-solver-testing 3.19.1-SNAPSHOT          [9/9]
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- maven-clean-plugin:3.1.0:clean (default-clean) @ javaparser-symbol-solver-testing ---
[INFO] Deleting /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/target
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:prepare-agent (jacoco-initialize) @ javaparser-symbol-solver-testing ---
[INFO] argLine set to -javaagent:/home/gabsko/.m2/repository/org/jacoco/org.jacoco.agent/0.8.6/org.jacoco.agent-0.8.6-runtime.jar=destfile=/home/gabsko/breaking-updates/javaparser-symbol-solver-testing/target/jacoco.exec
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:resources (default-resources) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] skip non existing resourceDirectory /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:compile (default-compile) @ javaparser-symbol-solver-testing ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:testResources (default-testResources) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 262 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.8.1:testCompile (default-testCompile) @ javaparser-symbol-solver-testing ---
[INFO] Changes detected - recompiling the module!
[INFO] Compiling 225 source files to /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/target/test-classes
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2764Test.java: Some input files use or override a deprecated API.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/Issue2764Test.java: Recompile with -Xlint:deprecation for details.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/AbstractNameLogicTest.java: Some input files use unchecked or unsafe operations.
[INFO] /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/src/test/java/com/github/javaparser/symbolsolver/resolution/naming/AbstractNameLogicTest.java: Recompile with -Xlint:unchecked for details.
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-classes) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 599 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-core-generated-sources) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 13 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-symbol-solver-core-classes) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 180 resources
[INFO] 
[INFO] --- maven-resources-plugin:3.2.0:copy-resources (copy-javaparser-symbol-solver-core-generated-sources) @ javaparser-symbol-solver-testing ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Using 'UTF-8' encoding to copy filtered properties files.
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-surefire-plugin:3.0.0-M5:test (default-test) @ javaparser-symbol-solver-testing ---
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running com.github.javaparser.symbolsolver.Issue1480Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.175 s - in com.github.javaparser.symbolsolver.Issue1480Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1364Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.038 s - in com.github.javaparser.symbolsolver.Issue1364Test
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.TypeVariableUsageTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.model.typesystem.TypeVariableUsageTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.ArrayTypeTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.symbolsolver.model.typesystem.ArrayTypeTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.PrimitiveTypeTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.model.typesystem.PrimitiveTypeTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.NullTypeTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.model.typesystem.NullTypeTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.VoidTypeTest
[INFO] Tests run: 12, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in com.github.javaparser.symbolsolver.model.typesystem.VoidTypeTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeTest
currentJdk = TestJdk{System.getProperty("java.version")=11.0.17,major=11}
[INFO] Tests run: 42, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 s - in com.github.javaparser.symbolsolver.model.typesystem.ReferenceTypeTest
[INFO] Running com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest
[INFO] Tests run: 16, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.model.typesystem.WildcardUsageTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2083Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue2083Test
[INFO] Running com.github.javaparser.symbolsolver.Issue185Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.symbolsolver.Issue185Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2595Test

methodCallExpr = classFieldNames.size()
methodCallExpr.resolve() = ReflectionMethodDeclaration{method=public abstract int java.util.List.size()}
methodCallExpr.calculateResolvedType() = PrimitiveTypeUsage{name='int'}

methodCallExpr = getAllClassFieldNames(c)
methodCallExpr.resolve() = JavaParserMethodDeclaration{wrappedNode=private List<String> getAllClassFieldNames(final String c) {
    return new ArrayList<>();
}, typeSolver=com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver@4d9d1b69}
methodCallExpr.calculateResolvedType() = ReferenceType{java.util.List, typeParametersMap=TypeParametersMap{nameToValue={java.util.List.E=ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}}}}

methodCallExpr = classFieldNames.size()
methodCallExpr.resolve() = ReflectionMethodDeclaration{method=public abstract int java.util.List.size()}
methodCallExpr.calculateResolvedType() = PrimitiveTypeUsage{name='int'}

methodCallExpr = getAllClassFieldNames(c)
methodCallExpr.resolve() = JavaParserMethodDeclaration{wrappedNode=private List<String> getAllClassFieldNames(final String c) {
    return new ArrayList<>();
}, typeSolver=com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver@60b85ba1}
methodCallExpr.calculateResolvedType() = ReferenceType{java.util.List, typeParametersMap=TypeParametersMap{nameToValue={java.util.List.E=ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}}}}

methodCallExpr = classFieldNames.size()
methodCallExpr.resolve() = ReflectionMethodDeclaration{method=public abstract int java.util.List.size()}
methodCallExpr.calculateResolvedType() = PrimitiveTypeUsage{name='int'}

methodCallExpr = getAllClassFieldNames()
methodCallExpr.resolve() = JavaParserMethodDeclaration{wrappedNode=private List<String> getAllClassFieldNames() {
    return new ArrayList<>();
}, typeSolver=com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver@3b582111}
methodCallExpr.calculateResolvedType() = ReferenceType{java.util.List, typeParametersMap=TypeParametersMap{nameToValue={java.util.List.E=ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}}}}

methodCallExpr = classFieldNames.size()
methodCallExpr.resolve() = ReflectionMethodDeclaration{method=public abstract int java.util.List.size()}
methodCallExpr.calculateResolvedType() = PrimitiveTypeUsage{name='int'}

methodCallExpr = getAllClassFieldNames(c)
methodCallExpr.resolve() = JavaParserMethodDeclaration{wrappedNode=private List<String> getAllClassFieldNames(final String c) {
    return new ArrayList<>();
}, typeSolver=com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolver@61019f59}
methodCallExpr.calculateResolvedType() = ReferenceType{java.util.List, typeParametersMap=TypeParametersMap{nameToValue={java.util.List.E=ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}}}}
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.069 s - in com.github.javaparser.symbolsolver.Issue2595Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2489Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.symbolsolver.Issue2489Test
[INFO] Running com.github.javaparser.symbolsolver.Issue251Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.Issue251Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1518Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue1518Test
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistAnnotationMemberDeclarationTest
[WARNING] Tests run: 9, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.03 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistAnnotationMemberDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistMethodDeclarationTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistMethodDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.Issue257Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.javassistmodel.Issue257Test
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistConstructorDeclarationTest
[WARNING] Tests run: 12, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistConstructorDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistTypeParameterDeclarationTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistTypeParameterDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistParameterDeclarationTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistParameterDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumConstantDeclarationTest
[WARNING] Tests run: 11, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumConstantDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclarationTest
[WARNING] Tests run: 59, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.166 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistClassDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclarationTest
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistInterfaceDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistAnnotationDeclarationTest
[WARNING] Tests run: 22, Failures: 0, Errors: 0, Skipped: 5, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistAnnotationDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclarationTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.github.javaparser.symbolsolver.javassistmodel.JavassistEnumDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.Issue3030Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in com.github.javaparser.symbolsolver.Issue3030Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1668Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue1668Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1945Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in com.github.javaparser.symbolsolver.Issue1945Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2878Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.017 s - in com.github.javaparser.symbolsolver.Issue2878Test
[INFO] Running com.github.javaparser.symbolsolver.Issue156Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue156Test
[INFO] Running com.github.javaparser.symbolsolver.Issue144Test
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 s - in com.github.javaparser.symbolsolver.Issue144Test
[INFO] Running com.github.javaparser.symbolsolver.Issue200Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.028 s - in com.github.javaparser.symbolsolver.Issue200Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1774Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.Issue1774Test
[INFO] Running com.github.javaparser.symbolsolver.Issue186Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.051 s - in com.github.javaparser.symbolsolver.Issue186Test
[INFO] Running com.github.javaparser.symbolsolver.Issue228Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue228Test
[INFO] Running com.github.javaparser.symbolsolver.JavaSymbolSolverTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.JavaSymbolSolverTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2044Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue2044Test
[INFO] Running com.github.javaparser.symbolsolver.utils.SymbolSolverCollectionStrategyTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.644 s - in com.github.javaparser.symbolsolver.utils.SymbolSolverCollectionStrategyTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.contexts.MultiCatchMethodCallExprTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.javaparsermodel.contexts.MultiCatchMethodCallExprTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclarationTest
[WARNING] Tests run: 23, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeVariableDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclarationTest
[INFO] Tests run: 39, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.214 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserClassDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclarationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnnotationDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclarationTest
[WARNING] Tests run: 12, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserParameterDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameterTest
[WARNING] Tests run: 21, Failures: 0, Errors: 0, Skipped: 3, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserTypeParameterTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserPatternDeclarationTest
[WARNING] Tests run: 12, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserPatternDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclarationTest
[WARNING] Tests run: 57, Failures: 0, Errors: 0, Skipped: 4, Time elapsed: 3.34 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserEnumDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclarationTest
[WARNING] Tests run: 12, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserMethodDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclarationTest
[WARNING] Tests run: 10, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserVariableDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclarationTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserAnonymousClassDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclarationTest
[WARNING] Tests run: 55, Failures: 0, Errors: 0, Skipped: 4, Time elapsed: 3.107 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserInterfaceDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclarationTest
[WARNING] Tests run: 14, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserFieldDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.DifferentiateDotExpressionTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.014 s - in com.github.javaparser.symbolsolver.javaparsermodel.DifferentiateDotExpressionTest
[INFO] Running com.github.javaparser.symbolsolver.javaparsermodel.ConvertToUsageTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.javaparsermodel.ConvertToUsageTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2284Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2284Test
[INFO] Running com.github.javaparser.symbolsolver.Issue276Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue276Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1817Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue1817Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1370Test
Node: new Vertex<>(42).getData(), solved Type: SymbolReference{Optional[JavaParserMethodDeclaration{wrappedNode=public Data getData() {
    return this.data;
}, typeSolver=com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolver@7f20bf32}]}
Node: new Vertex<>(42).getData().equals(42), solved Type: SymbolReference{Optional[ReflectionMethodDeclaration{method=public boolean java.lang.Object.equals(java.lang.Object)}]}
Node: System.out.println(new Vertex<>(42).getData().equals(42)), solved Type: SymbolReference{Optional[ReflectionMethodDeclaration{method=public void java.io.PrintStream.println(boolean)}]}
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.Issue1370Test
[INFO] Running com.github.javaparser.symbolsolver.JavaParserAPIIntegrationTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 s - in com.github.javaparser.symbolsolver.JavaParserAPIIntegrationTest
[INFO] Running com.github.javaparser.symbolsolver.Issue347Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue347Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1485Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue1485Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2764Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue2764Test
[INFO] Running com.github.javaparser.symbolsolver.Issue300Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue300Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2781Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2781Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1868Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue1868Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2289Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2289Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1757Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue1757Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2477Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2477Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2953Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.Issue2953Test
[INFO] Running com.github.javaparser.symbolsolver.Issue18Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue18Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1511Test
a = ReferenceType{java.lang.Object, typeParametersMap=TypeParametersMap{nameToValue={}}}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue1511Test
[INFO] Running com.github.javaparser.symbolsolver.logic.InferenceContextTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.271 s - in com.github.javaparser.symbolsolver.logic.InferenceContextTest
[INFO] Running com.github.javaparser.symbolsolver.logic.FunctionInterfaceLogicTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.logic.FunctionInterfaceLogicTest
[INFO] Running com.github.javaparser.symbolsolver.Issue366Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue366Test
[INFO] Running com.github.javaparser.symbolsolver.Issue3087Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue3087Test
[INFO] Running com.github.javaparser.symbolsolver.PullRequest2398Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.PullRequest2398Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2823Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.Issue2823Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2362Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2362Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2035Test
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.Issue2035Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1713Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue1713Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1479Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue1479Test
[INFO] Running com.github.javaparser.symbolsolver.Issue241Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue241Test
[INFO] Running com.github.javaparser.symbolsolver.Issue3083Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue3083Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1769Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue1769Test
[INFO] Running com.github.javaparser.symbolsolver.Issue343Test
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue343Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2406Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue2406Test
[INFO] Running com.github.javaparser.symbolsolver.Issue3028Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue3028Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2062Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2062Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2987Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2987Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2162Test
parseResult = Parsing successful
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.Issue2162Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1726Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue1726Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2951Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue2951Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2740Test
trying to solde t.add(s)
t.add(s) solved to java.util.ArrayList.add(E)
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue2740Test
[INFO] Running com.github.javaparser.symbolsolver.FindingAllFieldsTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.FindingAllFieldsTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2236Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue2236Test
[INFO] Running com.github.javaparser.symbolsolver.resolution.EnumResolutionTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.resolution.EnumResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typeinference.bounds.SameAsBoundTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.typeinference.bounds.SameAsBoundTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typeinference.bounds.SubtypeOfBoundTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.typeinference.bounds.SubtypeOfBoundTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typeinference.constraintformulas.ConstraintFormulaTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.typeinference.constraintformulas.ConstraintFormulaTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.VariableResolutionTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.VariableResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.NotQuiteCyclicParentTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.NotQuiteCyclicParentTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.VariadicResolutionTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.github.javaparser.symbolsolver.resolution.VariadicResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.AnnotationsResolutionTest
[INFO] Tests run: 19, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in com.github.javaparser.symbolsolver.resolution.AnnotationsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest
[INFO] Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.043 s - in com.github.javaparser.symbolsolver.resolution.GenericsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.TypeInClassWithAnnotationAncestorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.TypeInClassWithAnnotationAncestorTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistInterfaceTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistInterfaceTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.FieldAccessContextResolutionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.FieldAccessContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.ClassOrInterfaceDeclarationContextResolutionTest
[INFO] Tests run: 38, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.ClassOrInterfaceDeclarationContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.EnumDeclarationContextResolutionTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.EnumDeclarationContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.LambdaExprContextResolutionTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.LambdaExprContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.MethodContextResolutionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.MethodContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.CompilationUnitContextResolutionTest
[INFO] Tests run: 14, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.059 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.CompilationUnitContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.contexts.MethodCallExprContextResolutionTest
	 Solved : javaparser.JSONObject.put(java.lang.String, java.lang.String)
	 Solved : javaparser.JSONObject.put(java.lang.String, int)
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.016 s - in com.github.javaparser.symbolsolver.resolution.javaparser.contexts.MethodCallExprContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.declarations.JavaParserTypeParameterResolutionTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.symbolsolver.resolution.javaparser.declarations.JavaParserTypeParameterResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.javaparser.VarTypeTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.resolution.javaparser.VarTypeTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.MemoryTypeSolverTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.MemoryTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolverTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.ReflectionTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolverTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.JarTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.AarTypeSolverTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.023 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.AarTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.JavaParserTypeSolverTest
[WARNING] Tests run: 11, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0.018 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.JavaParserTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolverTest
[INFO] Tests run: 18, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 s - in com.github.javaparser.symbolsolver.resolution.typesolvers.CombinedTypeSolverTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ArrayExprTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.ArrayExprTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ExprResolutionTest
[INFO] Tests run: 22, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.symbolsolver.resolution.ExprResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ConstructorsResolutionTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 s - in com.github.javaparser.symbolsolver.resolution.ConstructorsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.FieldAccessExprResolutionTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.FieldAccessExprResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.PolyExpressionResolutionTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.PolyExpressionResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$Simpler
nameExprs = [obj, s]
resolvedNameExpr = JavaParserSymbolDeclaration{name='obj', wrappedNode=obj = "abc"}
resolvedNameExprType = ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$Simpler
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse
resolve.getQualifiedSignature() = java.lang.String.contains(java.lang.CharSequence)
resolve.getQualifiedSignature() = java.util.List.contains(java.lang.Object)
resolve.getQualifiedSignature() = java.util.List.contains(java.lang.Object)
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse$IfElseIfElseBlock
resolve.getQualifiedSignature() = java.lang.String.contains(java.lang.CharSequence)
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse$IfElseIfElseBlock
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse$Condition
resolvedType = PrimitiveTypeUsage{name='boolean'}
resolvedMethodDeclaration = ReflectionMethodDeclaration{method=public boolean java.lang.String.contains(java.lang.CharSequence)}
resolve.getQualifiedSignature() = java.lang.String.contains(java.lang.CharSequence)
com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserPatternDeclaration@5b14986a
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse$Condition
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.03 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$IfElseIfElse
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$VariableInBlock
[INFO] Running com.github.javaparser.symbolsolver.resolution.InstanceOfTest$VariableInBlock$LogicalOperatorScope
resolve.getQualifiedSignature() = java.lang.String.contains(java.lang.CharSequence)
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$VariableInBlock$LogicalOperatorScope
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.025 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest$VariableInBlock
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.061 s - in com.github.javaparser.symbolsolver.resolution.InstanceOfTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.DefaultPackageTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.DefaultPackageTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.StatementContextResolutionTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.008 s - in com.github.javaparser.symbolsolver.resolution.StatementContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprScopeTests
symbolReference = SymbolReference{Optional.empty}
symbolReference = SymbolReference{Optional[com.github.javaparser.symbolsolver.javaparsermodel.declarations.JavaParserPatternDeclaration@65482336]}
symbolReference = SymbolReference{Optional.empty}
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprScopeTests$IfElse
methodCallExprs = [s.contains("NOT in scope")]
methodCallExprs = [s.contains("in scope")]
methodCallExprs = [s.contains("in scope")]
methodCallExprs = [s.contains("NOT in scope")]
methodCallExprs = [s.contains("in scope"), s.contains("in scope")]
methodCallExprs = [s.contains(""), s.contains(""), s.contains(""), s.contains("")]
methodCallExprs = [s.contains(""), s.contains(""), s.contains(""), s.contains("")]
[INFO] Tests run: 61, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprScopeTests$IfElse
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprScopeTests
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprVariableDeclarationTests
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprVariableDeclarationTests
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprBinaryExprTests
[INFO] Tests run: 15, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprBinaryExprTests
[INFO] Running com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprNegationTests
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests$PatternExprNegationTests
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.02 s - in com.github.javaparser.symbolsolver.resolution.ContextTest$PatternExprTests
[INFO] Tests run: 0, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.132 s - in com.github.javaparser.symbolsolver.resolution.ContextTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.LambdaResolutionTest
[INFO] Tests run: 11, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.065 s - in com.github.javaparser.symbolsolver.resolution.LambdaResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.EnumLiteralsInAnnotatedClassTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.resolution.EnumLiteralsInAnnotatedClassTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.DescriptorTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.DescriptorTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ReferenceTypeResolutionTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.ReferenceTypeResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.AnonymousClassesResolutionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.AnonymousClassesResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.MethodsResolutionTest
getType on "Equal, but not 0: '%s' - '%s'"  -> ReferenceType{java.lang.String, typeParametersMap=TypeParametersMap{nameToValue={}}}
getType on name expr value1
getType on value1  -> TypeVariable {JPTypeParameter(T, bounds=[])}
getType on name expr value2
getType on value2  -> TypeVariable {JPTypeParameter(T, bounds=[])}
[INFO] Tests run: 26, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.041 s - in com.github.javaparser.symbolsolver.resolution.MethodsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.CompilationUnitContextResolutionTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 s - in com.github.javaparser.symbolsolver.resolution.CompilationUnitContextResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.AnalyseNewJavaParserHelpersTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.resolution.AnalyseNewJavaParserHelpersTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ImplementedOrExtendedTypeResolutionTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.ImplementedOrExtendedTypeResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.JavaParserFacadeResolutionTest
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.JavaParserFacadeResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.FieldsResolutionTest
[INFO] Tests run: 10, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.012 s - in com.github.javaparser.symbolsolver.resolution.FieldsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.InternalClassInInterfaceTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.resolution.InternalClassInInterfaceTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.TypeResolutionWithSameNameTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.TypeResolutionWithSameNameTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistClassTest
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistClassTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistEnumTest
[INFO] Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.resolution.SymbolSolverWithJavassistEnumTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.UnknownMethodsResolutionTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.resolution.UnknownMethodsResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.MethodsResolutionWithJavassistTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.01 s - in com.github.javaparser.symbolsolver.resolution.MethodsResolutionWithJavassistTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.reflectionmodel.SymbolResolutionResolutionTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.resolution.reflectionmodel.SymbolResolutionResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.naming.NameLogicDisambiguationTest
[INFO] Tests run: 25, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.076 s - in com.github.javaparser.symbolsolver.resolution.naming.NameLogicDisambiguationTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.naming.NameLogicTest
[INFO] Tests run: 126, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in com.github.javaparser.symbolsolver.resolution.naming.NameLogicTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.QualifiedNameResolutionTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.resolution.QualifiedNameResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.MethodReferenceResolutionTest
	 Solved : java.util.HashSet.add(E)
	 Solved : java.util.stream.Stream.collect(java.util.stream.Collector<? super T, A, R>)
	 Solved : java.util.stream.Collectors.toSet()
	 Solved : java.util.Collection.stream()
	 Solved : java.util.stream.Stream.map(java.util.function.Function<? super T, ? extends R>)
	 Solved : java.util.HashSet.add(E)
	 Solved : java.util.Collection.stream()
	 Solved : java.util.stream.Stream.filter(java.util.function.Predicate<? super T>)
	 Solved : java.util.stream.Stream.forEach(java.util.function.Consumer<? super T>)
	 Solved : java.lang.String.length()
	 Solved : java.io.PrintStream.println(java.lang.String)
	 Solved : MRDemo.print(java.util.function.Function<java.lang.String, java.lang.String>, java.lang.String)
	 Solved : java.lang.String.toLowerCase()
	 Solved : java.io.PrintStream.println(java.lang.String)
	 Solved : MRDemo.print(java.util.function.Function<java.lang.String, java.lang.String>, java.lang.String)
	 Solved : MRDemo.print(java.util.function.Function<java.lang.String, java.lang.String>, java.lang.String)
	 Solved : java.util.function.Function.apply(T)
[WARNING] Tests run: 22, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.078 s - in com.github.javaparser.symbolsolver.resolution.MethodReferenceResolutionTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.MethodLikeSignaturesTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.resolution.MethodLikeSignaturesTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.types.ResolvedPrimitiveTypeTest
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.resolution.types.ResolvedPrimitiveTypeTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.MethodsResolutionLogicTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.699 s - in com.github.javaparser.symbolsolver.resolution.MethodsResolutionLogicTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.ConditionalExprTest
java.lang.Integer
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 s - in com.github.javaparser.symbolsolver.resolution.ConditionalExprTest
[INFO] Running com.github.javaparser.symbolsolver.resolution.SymbolSolverTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.761 s - in com.github.javaparser.symbolsolver.resolution.SymbolSolverTest
[INFO] Running com.github.javaparser.symbolsolver.SolveMethodDeclaredInEnumTest
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.SolveMethodDeclaredInEnumTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2909Test
OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
Program.FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
Program.FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
test.Program.FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
test.Program.FarOuterClass.OuterClass.this is resolved to test.Program.FarOuterClass.OuterClass
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue2909Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1574Test
[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.Issue1574Test
[INFO] Running com.github.javaparser.symbolsolver.Issue314Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue314Test
[INFO] Running com.github.javaparser.symbolsolver.Issue235Test
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.Issue235Test
[INFO] Running com.github.javaparser.symbolsolver.Issue232Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.symbolsolver.Issue232Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2943Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue2943Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2132Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2132Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2367Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue2367Test
[INFO] Running com.github.javaparser.symbolsolver.Issue113Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.Issue113Test
[INFO] Running com.github.javaparser.symbolsolver.Issue128Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.Issue128Test
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclarationTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionInterfaceDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclarationTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionEnumDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclarationTest
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.006 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionParameterDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionAnnotationDeclarationTest
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionAnnotationDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclarationTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionMethodDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclarationTest
[com.github.javaparser.ast.nodeTypes.NodeWithBlockStmt, com.github.javaparser.ast.nodeTypes.modifiers.NodeWithAccessModifiers, com.github.javaparser.ast.nodeTypes.NodeWithJavadoc, com.github.javaparser.ast.nodeTypes.NodeWithSimpleName, com.github.javaparser.ast.nodeTypes.NodeWithParameters, com.github.javaparser.ast.nodeTypes.NodeWithThrownExceptions, com.github.javaparser.ast.nodeTypes.NodeWithTypeParameters, com.github.javaparser.resolution.Resolvable]
[INFO] Tests run: 29, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.035 s - in com.github.javaparser.symbolsolver.reflectionmodel.ReflectionClassDeclarationTest
[INFO] Running com.github.javaparser.symbolsolver.Issue2602Test
parseResult = Parsing successful
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue2602Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1491Test
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.007 s - in com.github.javaparser.symbolsolver.Issue1491Test
[INFO] Running com.github.javaparser.symbolsolver.Issue3024Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue3024Test
[INFO] Running com.github.javaparser.symbolsolver.Issue84Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue84Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1526Test
doFactory.getDataObject(objectID)
doFactory.getDataObject(objectID)
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in com.github.javaparser.symbolsolver.Issue1526Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1599Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue1599Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2065Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue2065Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1946Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue1946Test
[INFO] Running com.github.javaparser.symbolsolver.Issue546Test
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.005 s - in com.github.javaparser.symbolsolver.Issue546Test
[INFO] Running com.github.javaparser.symbolsolver.Issue116Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue116Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1814Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 s - in com.github.javaparser.symbolsolver.Issue1814Test
[INFO] Running com.github.javaparser.symbolsolver.Issue1456Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.github.javaparser.symbolsolver.Issue1456Test
[INFO] Running com.github.javaparser.symbolsolver.Issue2995Test
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in com.github.javaparser.symbolsolver.Issue2995Test
[INFO] 
[INFO] Results:
[INFO] 
[WARNING] Tests run: 1406, Failures: 0, Errors: 0, Skipped: 35
[INFO] 
[WARNING] Corrupted STDOUT by directly writing to native stream in forked JVM 1. See FAQ web page and the dump file /home/gabsko/breaking-updates/javaparser-symbol-solver-testing/target/surefire-reports/2023-01-07T01-30-21_805-jvmRun1.dumpstream
[INFO] 
[INFO] --- jacoco-maven-plugin:0.8.6:report (jacoco-report) @ javaparser-symbol-solver-testing ---
[INFO] Skipping JaCoCo execution due to missing execution data file.
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary for javaparser-parent 3.19.1-SNAPSHOT:
[INFO] 
[INFO] javaparser-parent .................................. SUCCESS [  0.154 s]
[INFO] javaparser-core .................................... SUCCESS [  7.515 s]
[INFO] javaparser-core-testing ............................ SUCCESS [ 30.281 s]
[INFO] javaparser-core-testing-bdd ........................ SUCCESS [  7.741 s]
[INFO] javaparser-core-generators ......................... SUCCESS [  0.707 s]
[INFO] javaparser-core-metamodel-generator ................ SUCCESS [  0.076 s]
[INFO] javaparser-core-serialization ...................... SUCCESS [  0.742 s]
[INFO] javaparser-symbol-solver-core ...................... SUCCESS [  1.095 s]
[INFO] javaparser-symbol-solver-testing ................... SUCCESS [ 32.271 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  01:20 min
[INFO] Finished at: 2023-01-07T01:31:34Z
[INFO] ------------------------------------------------------------------------
